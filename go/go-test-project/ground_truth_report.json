{
    "scan_id": "0",
    "start_time": 1704492243268,
    "modified_time": 1704492647174.205,
    "status_msg": "",
    "progress_percentage": 100,
    "scanned_number_of_files": 0,
    "total_number_of_files": 0,
    "num_developers": 7,
    "failure_reason": "",
    "compressed": false,
    "scanner_version": "0.4",
    "git_url": "https://github.com/piiano/code-scanner-test.git",
    "working_project_location": "/Users/yossilavi/PycharmProjects/code-scan-engine/temp/code-scanner-test-go_74ced/go/go-test-project/source/",
    "project_location": "test_resources/projects/code-scanner-test-go",
    "project_name": "code-scanner-test",
    "language": "go",
    "active_branch_name": "main",
    "last_commit_date": 1704346246,
    "status": "Completed",
    "project_metadata": {
        "classes": [
            {
                "name": "ContextInjector",
                "path": "main.go",
                "fields": [
                    "ctx",
                    "h"
                ],
                "field_types": [
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "ctx",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "Context",
                            "field_type_def_package": "context.Context"
                        },
                        "code_ref": {
                            "file_path": "main.go",
                            "start": {
                                "line": 14,
                                "offset": 1
                            },
                            "end": {
                                "line": 14,
                                "offset": 4
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project.ContextInjector.ctx",
                        "generic_types": []
                    },
                    {
                        "field_name": "h",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "Handler",
                            "field_type_def_package": "net/http.Handler"
                        },
                        "code_ref": {
                            "file_path": "main.go",
                            "start": {
                                "line": 15,
                                "offset": 1
                            },
                            "end": {
                                "line": 15,
                                "offset": 2
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project.ContextInjector.h",
                        "generic_types": []
                    }
                ]
            },
            {
                "name": "Auditor",
                "path": "audit/auditor.go",
                "fields": [
                    "UserEmail",
                    "AddedTime",
                    "logger"
                ],
                "field_types": [
                    "",
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "UserEmail",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "audit/auditor.go",
                            "start": {
                                "line": 7,
                                "offset": 1
                            },
                            "end": {
                                "line": 7,
                                "offset": 10
                            },
                            "snippet": {
                                "lines_before": [
                                    ")\n",
                                    "\n",
                                    "type Auditor struct {\n"
                                ],
                                "lines": [
                                    "\tUserEmail string\n"
                                ],
                                "lines_after": [
                                    "\tAddedTime time.Time\n",
                                    "\tlogger    Logger\n",
                                    "}\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "go-test-project/audit.Auditor.UserEmail",
                        "generic_types": []
                    },
                    {
                        "field_name": "AddedTime",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "Time",
                            "field_type_def_package": "time.Time"
                        },
                        "code_ref": {
                            "file_path": "audit/auditor.go",
                            "start": {
                                "line": 8,
                                "offset": 1
                            },
                            "end": {
                                "line": 8,
                                "offset": 10
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/audit.Auditor.AddedTime",
                        "generic_types": []
                    },
                    {
                        "field_name": "logger",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "audit/logger.go",
                                "start": {
                                    "line": 6,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 6,
                                    "offset": 11
                                },
                                "snippet": null
                            },
                            "field_type_name": "Logger",
                            "field_type_def_package": "go-test-project/audit.Logger"
                        },
                        "code_ref": {
                            "file_path": "audit/auditor.go",
                            "start": {
                                "line": 9,
                                "offset": 1
                            },
                            "end": {
                                "line": 9,
                                "offset": 7
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/audit.Auditor.logger",
                        "generic_types": []
                    }
                ]
            },
            {
                "name": "Host",
                "path": "dal/host.go",
                "fields": [
                    "host",
                    "port"
                ],
                "field_types": [
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "host",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "dal/host.go",
                            "start": {
                                "line": 3,
                                "offset": 1
                            },
                            "end": {
                                "line": 3,
                                "offset": 5
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/dal.Host.host",
                        "generic_types": []
                    },
                    {
                        "field_name": "port",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "dal/host.go",
                            "start": {
                                "line": 4,
                                "offset": 1
                            },
                            "end": {
                                "line": 4,
                                "offset": 5
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/dal.Host.port",
                        "generic_types": []
                    }
                ]
            },
            {
                "name": "Storage",
                "path": "dal/db.go",
                "fields": [
                    "DB",
                    "Name",
                    "auditor"
                ],
                "field_types": [
                    "",
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "DB",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "DB",
                            "field_type_def_package": "database/sql.DB"
                        },
                        "code_ref": {
                            "file_path": "dal/db.go",
                            "start": {
                                "line": 14,
                                "offset": 1
                            },
                            "end": {
                                "line": 14,
                                "offset": 3
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/dal.Storage.DB",
                        "generic_types": []
                    },
                    {
                        "field_name": "Name",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "dal/db.go",
                            "start": {
                                "line": 15,
                                "offset": 1
                            },
                            "end": {
                                "line": 15,
                                "offset": 5
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/dal.Storage.Name",
                        "generic_types": []
                    },
                    {
                        "field_name": "auditor",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "audit/auditor.go",
                                "start": {
                                    "line": 6,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 6,
                                    "offset": 12
                                },
                                "snippet": null
                            },
                            "field_type_name": "Auditor",
                            "field_type_def_package": "go-test-project/audit.Auditor"
                        },
                        "code_ref": {
                            "file_path": "dal/db.go",
                            "start": {
                                "line": 16,
                                "offset": 1
                            },
                            "end": {
                                "line": 16,
                                "offset": 8
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/dal.Storage.auditor",
                        "generic_types": []
                    }
                ]
            },
            {
                "name": "connData",
                "path": "dal/host.go",
                "fields": [
                    "host",
                    "port"
                ],
                "field_types": [
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "host",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "dal/host.go",
                            "start": {
                                "line": 3,
                                "offset": 1
                            },
                            "end": {
                                "line": 3,
                                "offset": 5
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/dal.Host.host",
                        "generic_types": []
                    },
                    {
                        "field_name": "port",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "dal/host.go",
                            "start": {
                                "line": 4,
                                "offset": 1
                            },
                            "end": {
                                "line": 4,
                                "offset": 5
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/dal.Host.port",
                        "generic_types": []
                    }
                ]
            },
            {
                "name": "connData",
                "path": "dal/db.go",
                "fields": [
                    "Host",
                    "user",
                    "pass",
                    "dbname",
                    "sslMode"
                ],
                "field_types": [
                    "",
                    "",
                    "",
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    [],
                    [],
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "Host",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "dal/host.go",
                                "start": {
                                    "line": 2,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 2,
                                    "offset": 9
                                },
                                "snippet": null
                            },
                            "field_type_name": "Host",
                            "field_type_def_package": "go-test-project/dal.Host"
                        },
                        "code_ref": {
                            "file_path": "dal/db.go",
                            "start": {
                                "line": 20,
                                "offset": 1
                            },
                            "end": {
                                "line": 20,
                                "offset": 5
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/dal.connData.Host",
                        "generic_types": []
                    },
                    {
                        "field_name": "user",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "dal/db.go",
                            "start": {
                                "line": 21,
                                "offset": 1
                            },
                            "end": {
                                "line": 21,
                                "offset": 5
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/dal.connData.user",
                        "generic_types": []
                    },
                    {
                        "field_name": "pass",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "dal/db.go",
                            "start": {
                                "line": 22,
                                "offset": 1
                            },
                            "end": {
                                "line": 22,
                                "offset": 5
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/dal.connData.pass",
                        "generic_types": []
                    },
                    {
                        "field_name": "dbname",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "dal/db.go",
                            "start": {
                                "line": 23,
                                "offset": 1
                            },
                            "end": {
                                "line": 23,
                                "offset": 7
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/dal.connData.dbname",
                        "generic_types": []
                    },
                    {
                        "field_name": "sslMode",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "dal/db.go",
                            "start": {
                                "line": 24,
                                "offset": 1
                            },
                            "end": {
                                "line": 24,
                                "offset": 8
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/dal.connData.sslMode",
                        "generic_types": []
                    }
                ]
            },
            {
                "name": "User",
                "path": "model/user.go",
                "fields": [
                    "ID",
                    "Name",
                    "Email",
                    "Password",
                    "Profile"
                ],
                "field_types": [
                    "",
                    "",
                    "",
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    [],
                    [],
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "ID",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "int",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 12,
                                "offset": 1
                            },
                            "end": {
                                "line": 12,
                                "offset": 3
                            },
                            "snippet": {
                                "lines_before": [
                                    "}\n",
                                    "\n",
                                    "type User struct {\n"
                                ],
                                "lines": [
                                    "\tID       int     `json:\"id\"`\n"
                                ],
                                "lines_after": [
                                    "\tName     string  `json:\"name\"`\n",
                                    "\tEmail    string  `json:\"email\"`\n",
                                    "\tPassword string  `json:\"password\"`\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "go-test-project/model.User.ID",
                        "generic_types": []
                    },
                    {
                        "field_name": "Name",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 13,
                                "offset": 1
                            },
                            "end": {
                                "line": 13,
                                "offset": 5
                            },
                            "snippet": {
                                "lines_before": [
                                    "\n",
                                    "type User struct {\n",
                                    "\tID       int     `json:\"id\"`\n"
                                ],
                                "lines": [
                                    "\tName     string  `json:\"name\"`\n"
                                ],
                                "lines_after": [
                                    "\tEmail    string  `json:\"email\"`\n",
                                    "\tPassword string  `json:\"password\"`\n",
                                    "\tProfile  Profile `json:\"profile\"`\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "go-test-project/model.User.Name",
                        "generic_types": []
                    },
                    {
                        "field_name": "Email",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 14,
                                "offset": 1
                            },
                            "end": {
                                "line": 14,
                                "offset": 6
                            },
                            "snippet": {
                                "lines_before": [
                                    "type User struct {\n",
                                    "\tID       int     `json:\"id\"`\n",
                                    "\tName     string  `json:\"name\"`\n"
                                ],
                                "lines": [
                                    "\tEmail    string  `json:\"email\"`\n"
                                ],
                                "lines_after": [
                                    "\tPassword string  `json:\"password\"`\n",
                                    "\tProfile  Profile `json:\"profile\"`\n",
                                    "}\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "go-test-project/model.User.Email",
                        "generic_types": []
                    },
                    {
                        "field_name": "Password",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 15,
                                "offset": 1
                            },
                            "end": {
                                "line": 15,
                                "offset": 9
                            },
                            "snippet": {
                                "lines_before": [
                                    "\tID       int     `json:\"id\"`\n",
                                    "\tName     string  `json:\"name\"`\n",
                                    "\tEmail    string  `json:\"email\"`\n"
                                ],
                                "lines": [
                                    "\tPassword string  `json:\"password\"`\n"
                                ],
                                "lines_after": [
                                    "\tProfile  Profile `json:\"profile\"`\n",
                                    "}\n",
                                    "\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "go-test-project/model.User.Password",
                        "generic_types": []
                    },
                    {
                        "field_name": "Profile",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 19,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 19,
                                    "offset": 12
                                },
                                "snippet": null
                            },
                            "field_type_name": "Profile",
                            "field_type_def_package": "go-test-project/model.Profile"
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 16,
                                "offset": 1
                            },
                            "end": {
                                "line": 16,
                                "offset": 8
                            },
                            "snippet": {
                                "lines_before": [
                                    "\tName     string  `json:\"name\"`\n",
                                    "\tEmail    string  `json:\"email\"`\n",
                                    "\tPassword string  `json:\"password\"`\n"
                                ],
                                "lines": [
                                    "\tProfile  Profile `json:\"profile\"`\n"
                                ],
                                "lines_after": [
                                    "}\n",
                                    "\n",
                                    "type Profile struct {\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "go-test-project/model.User.Profile",
                        "generic_types": []
                    }
                ]
            },
            {
                "name": "Profile",
                "path": "model/user.go",
                "fields": [
                    "Position",
                    "Phone",
                    "Address"
                ],
                "field_types": [
                    "",
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "Position",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 20,
                                "offset": 1
                            },
                            "end": {
                                "line": 20,
                                "offset": 9
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/model.Profile.Position",
                        "generic_types": []
                    },
                    {
                        "field_name": "Phone",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 21,
                                "offset": 1
                            },
                            "end": {
                                "line": 21,
                                "offset": 6
                            },
                            "snippet": {
                                "lines_before": [
                                    "\n",
                                    "type Profile struct {\n",
                                    "\tPosition string `json:\"position\"`\n"
                                ],
                                "lines": [
                                    "\tPhone    string `json:\"phone\"`\n"
                                ],
                                "lines_after": [
                                    "\tAddress  Addr   `json:\"address\"`\n",
                                    "}\n",
                                    "\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "go-test-project/model.Profile.Phone",
                        "generic_types": []
                    },
                    {
                        "field_name": "Address",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 25,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 25,
                                    "offset": 9
                                },
                                "snippet": null
                            },
                            "field_type_name": "Addr",
                            "field_type_def_package": "go-test-project/model.Addr"
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 22,
                                "offset": 1
                            },
                            "end": {
                                "line": 22,
                                "offset": 8
                            },
                            "snippet": {
                                "lines_before": [
                                    "type Profile struct {\n",
                                    "\tPosition string `json:\"position\"`\n",
                                    "\tPhone    string `json:\"phone\"`\n"
                                ],
                                "lines": [
                                    "\tAddress  Addr   `json:\"address\"`\n"
                                ],
                                "lines_after": [
                                    "}\n",
                                    "\n",
                                    "type Addr struct {\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "go-test-project/model.Profile.Address",
                        "generic_types": []
                    }
                ]
            },
            {
                "name": "Addr",
                "path": "model/user.go",
                "fields": [
                    "Street",
                    "City",
                    "Country"
                ],
                "field_types": [
                    "",
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "Street",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 26,
                                "offset": 1
                            },
                            "end": {
                                "line": 26,
                                "offset": 7
                            },
                            "snippet": {
                                "lines_before": [
                                    "}\n",
                                    "\n",
                                    "type Addr struct {\n"
                                ],
                                "lines": [
                                    "\tStreet  string `json:\"street\"`\n"
                                ],
                                "lines_after": [
                                    "\tCity    string `json:\"city\"`\n",
                                    "\tCountry string `json:\"country\"`\n",
                                    "}\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "go-test-project/model.Addr.Street",
                        "generic_types": []
                    },
                    {
                        "field_name": "City",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 27,
                                "offset": 1
                            },
                            "end": {
                                "line": 27,
                                "offset": 5
                            },
                            "snippet": {
                                "lines_before": [
                                    "\n",
                                    "type Addr struct {\n",
                                    "\tStreet  string `json:\"street\"`\n"
                                ],
                                "lines": [
                                    "\tCity    string `json:\"city\"`\n"
                                ],
                                "lines_after": [
                                    "\tCountry string `json:\"country\"`\n",
                                    "}\n",
                                    "\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "go-test-project/model.Addr.City",
                        "generic_types": []
                    },
                    {
                        "field_name": "Country",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 28,
                                "offset": 1
                            },
                            "end": {
                                "line": 28,
                                "offset": 8
                            },
                            "snippet": {
                                "lines_before": [
                                    "type Addr struct {\n",
                                    "\tStreet  string `json:\"street\"`\n",
                                    "\tCity    string `json:\"city\"`\n"
                                ],
                                "lines": [
                                    "\tCountry string `json:\"country\"`\n"
                                ],
                                "lines_after": [
                                    "}\n",
                                    "\n",
                                    "func CreateUserTable(db *sql.DB, name string) {\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "go-test-project/model.Addr.Country",
                        "generic_types": []
                    }
                ]
            },
            {
                "name": "HostError",
                "path": "util/error.go",
                "fields": [
                    "Logger",
                    "error"
                ],
                "field_types": [
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "Logger",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "Logger",
                            "field_type_def_package": "log.Logger"
                        },
                        "code_ref": {
                            "file_path": "util/error.go",
                            "start": {
                                "line": 5,
                                "offset": 5
                            },
                            "end": {
                                "line": 5,
                                "offset": 11
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/util.HostError.Logger",
                        "generic_types": []
                    },
                    {
                        "field_name": "error",
                        "field_type": {
                            "field_type_def": null,
                            "field_type_name": "error",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "util/error.go",
                            "start": {
                                "line": 6,
                                "offset": 1
                            },
                            "end": {
                                "line": 6,
                                "offset": 6
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/util.HostError.error",
                        "generic_types": []
                    }
                ]
            }
        ],
        "containers_hierarchy": {
            "f2e166219d8780ba31e73b5d5203b02c": {},
            "d46bd02620d1e8a9f4ca55e3f2570156": {},
            "f1fd4aa0048d2789395e319af3caa82f": {},
            "613a910946d28c4d2dbc39e5876e47de": {},
            "cd922cd9e06aba5943de1f6f58e9141d": {},
            "cef83ac876ca3ef5eba30f6b1eeb8c72": {}
        }
    },
    "results": {
        "artifacts": [
            {
                "artifact_id": "80804aaa3ad1f255d15788b9e53c38f9",
                "artifact_name": "UserEmail@go-test-project/audit.Auditor.UserEmail#audit/auditor.go",
                "code_ref": {
                    "file_path": "audit/auditor.go",
                    "start": {
                        "line": 7,
                        "offset": 1
                    },
                    "end": {
                        "line": 7,
                        "offset": 10
                    },
                    "snippet": {
                        "lines_before": [
                            ")\n",
                            "\n",
                            "type Auditor struct {\n"
                        ],
                        "lines": [
                            "\tUserEmail string\n"
                        ],
                        "lines_after": [
                            "\tAddedTime time.Time\n",
                            "\tlogger    Logger\n",
                            "}\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 2.5,
                    "values": {
                        "field_data": {
                            "field_name": "UserEmail",
                            "field_type": {
                                "field_type_def": null,
                                "field_type_name": "string",
                                "field_type_def_package": ""
                            },
                            "code_ref": {
                                "file_path": "audit/auditor.go",
                                "start": {
                                    "line": 7,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 7,
                                    "offset": 10
                                },
                                "snippet": {
                                    "lines_before": [
                                        ")\n",
                                        "\n",
                                        "type Auditor struct {\n"
                                    ],
                                    "lines": [
                                        "\tUserEmail string\n"
                                    ],
                                    "lines_after": [
                                        "\tAddedTime time.Time\n",
                                        "\tlogger    Logger\n",
                                        "}\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "go-test-project/audit.Auditor.UserEmail",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "audit/auditor.go",
                            "start": {
                                "line": 6,
                                "offset": 5
                            },
                            "end": {
                                "line": 6,
                                "offset": 12
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "Auditor",
                    "class_def_line_num": 6,
                    "field_name": "UserEmail",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Email",
                    "package": "audit",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "2bd4c0638cee823ca9bbc291ccb76910",
                "artifact_name": "ID@go-test-project/model.User.ID#model/user.go",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 12,
                        "offset": 1
                    },
                    "end": {
                        "line": 12,
                        "offset": 3
                    },
                    "snippet": {
                        "lines_before": [
                            "}\n",
                            "\n",
                            "type User struct {\n"
                        ],
                        "lines": [
                            "\tID       int     `json:\"id\"`\n"
                        ],
                        "lines_after": [
                            "\tName     string  `json:\"name\"`\n",
                            "\tEmail    string  `json:\"email\"`\n",
                            "\tPassword string  `json:\"password\"`\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 1.0,
                    "values": {
                        "field_data": {
                            "field_name": "ID",
                            "field_type": {
                                "field_type_def": null,
                                "field_type_name": "int",
                                "field_type_def_package": ""
                            },
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 12,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 12,
                                    "offset": 3
                                },
                                "snippet": {
                                    "lines_before": [
                                        "}\n",
                                        "\n",
                                        "type User struct {\n"
                                    ],
                                    "lines": [
                                        "\tID       int     `json:\"id\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tName     string  `json:\"name\"`\n",
                                        "\tEmail    string  `json:\"email\"`\n",
                                        "\tPassword string  `json:\"password\"`\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "go-test-project/model.User.ID",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 11,
                                "offset": 5
                            },
                            "end": {
                                "line": 11,
                                "offset": 9
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "User",
                    "class_def_line_num": 11,
                    "field_name": "ID",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Digital",
                    "package": "model",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "31230cc8f11f1c22d08f478d991db0b7",
                "artifact_name": "Name@go-test-project/model.User.Name#model/user.go",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 13,
                        "offset": 1
                    },
                    "end": {
                        "line": 13,
                        "offset": 5
                    },
                    "snippet": {
                        "lines_before": [
                            "\n",
                            "type User struct {\n",
                            "\tID       int     `json:\"id\"`\n"
                        ],
                        "lines": [
                            "\tName     string  `json:\"name\"`\n"
                        ],
                        "lines_after": [
                            "\tEmail    string  `json:\"email\"`\n",
                            "\tPassword string  `json:\"password\"`\n",
                            "\tProfile  Profile `json:\"profile\"`\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 5.0,
                    "values": {
                        "field_data": {
                            "field_name": "Name",
                            "field_type": {
                                "field_type_def": null,
                                "field_type_name": "string",
                                "field_type_def_package": ""
                            },
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 13,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 13,
                                    "offset": 5
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "type User struct {\n",
                                        "\tID       int     `json:\"id\"`\n"
                                    ],
                                    "lines": [
                                        "\tName     string  `json:\"name\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tEmail    string  `json:\"email\"`\n",
                                        "\tPassword string  `json:\"password\"`\n",
                                        "\tProfile  Profile `json:\"profile\"`\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "go-test-project/model.User.Name",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 11,
                                "offset": 5
                            },
                            "end": {
                                "line": 11,
                                "offset": 9
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "User",
                    "class_def_line_num": 11,
                    "field_name": "Name",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Name",
                    "package": "model",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "7105cc7e48e2b7fd76bc31fc21ac046c",
                "artifact_name": "Email@go-test-project/model.User.Email#model/user.go",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 14,
                        "offset": 1
                    },
                    "end": {
                        "line": 14,
                        "offset": 6
                    },
                    "snippet": {
                        "lines_before": [
                            "type User struct {\n",
                            "\tID       int     `json:\"id\"`\n",
                            "\tName     string  `json:\"name\"`\n"
                        ],
                        "lines": [
                            "\tEmail    string  `json:\"email\"`\n"
                        ],
                        "lines_after": [
                            "\tPassword string  `json:\"password\"`\n",
                            "\tProfile  Profile `json:\"profile\"`\n",
                            "}\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 2.5,
                    "values": {
                        "field_data": {
                            "field_name": "Email",
                            "field_type": {
                                "field_type_def": null,
                                "field_type_name": "string",
                                "field_type_def_package": ""
                            },
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 14,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 14,
                                    "offset": 6
                                },
                                "snippet": {
                                    "lines_before": [
                                        "type User struct {\n",
                                        "\tID       int     `json:\"id\"`\n",
                                        "\tName     string  `json:\"name\"`\n"
                                    ],
                                    "lines": [
                                        "\tEmail    string  `json:\"email\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tPassword string  `json:\"password\"`\n",
                                        "\tProfile  Profile `json:\"profile\"`\n",
                                        "}\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "go-test-project/model.User.Email",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 11,
                                "offset": 5
                            },
                            "end": {
                                "line": 11,
                                "offset": 9
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "User",
                    "class_def_line_num": 11,
                    "field_name": "Email",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Email",
                    "package": "model",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "b18d65fab4baabc2dab839d7e489c1f2",
                "artifact_name": "Password@go-test-project/model.User.Password#model/user.go",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 15,
                        "offset": 1
                    },
                    "end": {
                        "line": 15,
                        "offset": 9
                    },
                    "snippet": {
                        "lines_before": [
                            "\tID       int     `json:\"id\"`\n",
                            "\tName     string  `json:\"name\"`\n",
                            "\tEmail    string  `json:\"email\"`\n"
                        ],
                        "lines": [
                            "\tPassword string  `json:\"password\"`\n"
                        ],
                        "lines_after": [
                            "\tProfile  Profile `json:\"profile\"`\n",
                            "}\n",
                            "\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 5.0,
                    "values": {
                        "field_data": {
                            "field_name": "Password",
                            "field_type": {
                                "field_type_def": null,
                                "field_type_name": "string",
                                "field_type_def_package": ""
                            },
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 15,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 15,
                                    "offset": 9
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tID       int     `json:\"id\"`\n",
                                        "\tName     string  `json:\"name\"`\n",
                                        "\tEmail    string  `json:\"email\"`\n"
                                    ],
                                    "lines": [
                                        "\tPassword string  `json:\"password\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tProfile  Profile `json:\"profile\"`\n",
                                        "}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "go-test-project/model.User.Password",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 11,
                                "offset": 5
                            },
                            "end": {
                                "line": 11,
                                "offset": 9
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "User",
                    "class_def_line_num": 11,
                    "field_name": "Password",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Credentials",
                    "package": "model",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "029a851f39bf8d800db90da5eb372e0d",
                "artifact_name": "Profile@go-test-project/model.User.Profile#model/user.go",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 16,
                        "offset": 1
                    },
                    "end": {
                        "line": 16,
                        "offset": 8
                    },
                    "snippet": {
                        "lines_before": [
                            "\tName     string  `json:\"name\"`\n",
                            "\tEmail    string  `json:\"email\"`\n",
                            "\tPassword string  `json:\"password\"`\n"
                        ],
                        "lines": [
                            "\tProfile  Profile `json:\"profile\"`\n"
                        ],
                        "lines_after": [
                            "}\n",
                            "\n",
                            "type Profile struct {\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 1.0,
                    "values": {
                        "field_data": {
                            "field_name": "Profile",
                            "field_type": {
                                "field_type_def": {
                                    "file_path": "model/user.go",
                                    "start": {
                                        "line": 19,
                                        "offset": 5
                                    },
                                    "end": {
                                        "line": 19,
                                        "offset": 12
                                    },
                                    "snippet": null
                                },
                                "field_type_name": "Profile",
                                "field_type_def_package": "go-test-project/model.Profile"
                            },
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 16,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 16,
                                    "offset": 8
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tName     string  `json:\"name\"`\n",
                                        "\tEmail    string  `json:\"email\"`\n",
                                        "\tPassword string  `json:\"password\"`\n"
                                    ],
                                    "lines": [
                                        "\tProfile  Profile `json:\"profile\"`\n"
                                    ],
                                    "lines_after": [
                                        "}\n",
                                        "\n",
                                        "type Profile struct {\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "go-test-project/model.User.Profile",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 11,
                                "offset": 5
                            },
                            "end": {
                                "line": 11,
                                "offset": 9
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "User",
                    "class_def_line_num": 11,
                    "field_name": "Profile",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Personal Characteristics",
                    "package": "model",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "da747c38837c86ac0862c8fe2da096c9",
                "artifact_name": "Phone@go-test-project/model.Profile.Phone#model/user.go",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 21,
                        "offset": 1
                    },
                    "end": {
                        "line": 21,
                        "offset": 6
                    },
                    "snippet": {
                        "lines_before": [
                            "\n",
                            "type Profile struct {\n",
                            "\tPosition string `json:\"position\"`\n"
                        ],
                        "lines": [
                            "\tPhone    string `json:\"phone\"`\n"
                        ],
                        "lines_after": [
                            "\tAddress  Addr   `json:\"address\"`\n",
                            "}\n",
                            "\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 5.0,
                    "values": {
                        "field_data": {
                            "field_name": "Phone",
                            "field_type": {
                                "field_type_def": null,
                                "field_type_name": "string",
                                "field_type_def_package": ""
                            },
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 21,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 21,
                                    "offset": 6
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "type Profile struct {\n",
                                        "\tPosition string `json:\"position\"`\n"
                                    ],
                                    "lines": [
                                        "\tPhone    string `json:\"phone\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tAddress  Addr   `json:\"address\"`\n",
                                        "}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "go-test-project/model.Profile.Phone",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 19,
                                "offset": 5
                            },
                            "end": {
                                "line": 19,
                                "offset": 12
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "Profile",
                    "class_def_line_num": 19,
                    "field_name": "Phone",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Phone",
                    "package": "model",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "359064eec5c55b85e29c84a0409c9daf",
                "artifact_name": "Address@go-test-project/model.Profile.Address#model/user.go",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 22,
                        "offset": 1
                    },
                    "end": {
                        "line": 22,
                        "offset": 8
                    },
                    "snippet": {
                        "lines_before": [
                            "type Profile struct {\n",
                            "\tPosition string `json:\"position\"`\n",
                            "\tPhone    string `json:\"phone\"`\n"
                        ],
                        "lines": [
                            "\tAddress  Addr   `json:\"address\"`\n"
                        ],
                        "lines_after": [
                            "}\n",
                            "\n",
                            "type Addr struct {\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 2.5,
                    "values": {
                        "field_data": {
                            "field_name": "Address",
                            "field_type": {
                                "field_type_def": {
                                    "file_path": "model/user.go",
                                    "start": {
                                        "line": 25,
                                        "offset": 5
                                    },
                                    "end": {
                                        "line": 25,
                                        "offset": 9
                                    },
                                    "snippet": null
                                },
                                "field_type_name": "Addr",
                                "field_type_def_package": "go-test-project/model.Addr"
                            },
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 22,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 22,
                                    "offset": 8
                                },
                                "snippet": {
                                    "lines_before": [
                                        "type Profile struct {\n",
                                        "\tPosition string `json:\"position\"`\n",
                                        "\tPhone    string `json:\"phone\"`\n"
                                    ],
                                    "lines": [
                                        "\tAddress  Addr   `json:\"address\"`\n"
                                    ],
                                    "lines_after": [
                                        "}\n",
                                        "\n",
                                        "type Addr struct {\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "go-test-project/model.Profile.Address",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 19,
                                "offset": 5
                            },
                            "end": {
                                "line": 19,
                                "offset": 12
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "Profile",
                    "class_def_line_num": 19,
                    "field_name": "Address",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Address",
                    "package": "model",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "eb951b0bbf554904b76cb0e648d6562a",
                "artifact_name": "Street@go-test-project/model.Addr.Street#model/user.go",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 26,
                        "offset": 1
                    },
                    "end": {
                        "line": 26,
                        "offset": 7
                    },
                    "snippet": {
                        "lines_before": [
                            "}\n",
                            "\n",
                            "type Addr struct {\n"
                        ],
                        "lines": [
                            "\tStreet  string `json:\"street\"`\n"
                        ],
                        "lines_after": [
                            "\tCity    string `json:\"city\"`\n",
                            "\tCountry string `json:\"country\"`\n",
                            "}\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 2.5,
                    "values": {
                        "field_data": {
                            "field_name": "Street",
                            "field_type": {
                                "field_type_def": null,
                                "field_type_name": "string",
                                "field_type_def_package": ""
                            },
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 26,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 26,
                                    "offset": 7
                                },
                                "snippet": {
                                    "lines_before": [
                                        "}\n",
                                        "\n",
                                        "type Addr struct {\n"
                                    ],
                                    "lines": [
                                        "\tStreet  string `json:\"street\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tCity    string `json:\"city\"`\n",
                                        "\tCountry string `json:\"country\"`\n",
                                        "}\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "go-test-project/model.Addr.Street",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 25,
                                "offset": 5
                            },
                            "end": {
                                "line": 25,
                                "offset": 9
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "Addr",
                    "class_def_line_num": 25,
                    "field_name": "Street",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Address",
                    "package": "model",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "c6488865d8842d721f5c89f2ef083ef9",
                "artifact_name": "City@go-test-project/model.Addr.City#model/user.go",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 27,
                        "offset": 1
                    },
                    "end": {
                        "line": 27,
                        "offset": 5
                    },
                    "snippet": {
                        "lines_before": [
                            "\n",
                            "type Addr struct {\n",
                            "\tStreet  string `json:\"street\"`\n"
                        ],
                        "lines": [
                            "\tCity    string `json:\"city\"`\n"
                        ],
                        "lines_after": [
                            "\tCountry string `json:\"country\"`\n",
                            "}\n",
                            "\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 2.5,
                    "values": {
                        "field_data": {
                            "field_name": "City",
                            "field_type": {
                                "field_type_def": null,
                                "field_type_name": "string",
                                "field_type_def_package": ""
                            },
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 27,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 27,
                                    "offset": 5
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "type Addr struct {\n",
                                        "\tStreet  string `json:\"street\"`\n"
                                    ],
                                    "lines": [
                                        "\tCity    string `json:\"city\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tCountry string `json:\"country\"`\n",
                                        "}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "go-test-project/model.Addr.City",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 25,
                                "offset": 5
                            },
                            "end": {
                                "line": 25,
                                "offset": 9
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "Addr",
                    "class_def_line_num": 25,
                    "field_name": "City",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Address",
                    "package": "model",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "5b2ecea8e7fadcbe3782fa2f903354c6",
                "artifact_name": "Country@go-test-project/model.Addr.Country#model/user.go",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 28,
                        "offset": 1
                    },
                    "end": {
                        "line": 28,
                        "offset": 8
                    },
                    "snippet": {
                        "lines_before": [
                            "type Addr struct {\n",
                            "\tStreet  string `json:\"street\"`\n",
                            "\tCity    string `json:\"city\"`\n"
                        ],
                        "lines": [
                            "\tCountry string `json:\"country\"`\n"
                        ],
                        "lines_after": [
                            "}\n",
                            "\n",
                            "func CreateUserTable(db *sql.DB, name string) {\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 2.5,
                    "values": {
                        "field_data": {
                            "field_name": "Country",
                            "field_type": {
                                "field_type_def": null,
                                "field_type_name": "string",
                                "field_type_def_package": ""
                            },
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 28,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 28,
                                    "offset": 8
                                },
                                "snippet": {
                                    "lines_before": [
                                        "type Addr struct {\n",
                                        "\tStreet  string `json:\"street\"`\n",
                                        "\tCity    string `json:\"city\"`\n"
                                    ],
                                    "lines": [
                                        "\tCountry string `json:\"country\"`\n"
                                    ],
                                    "lines_after": [
                                        "}\n",
                                        "\n",
                                        "func CreateUserTable(db *sql.DB, name string) {\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "go-test-project/model.Addr.Country",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 25,
                                "offset": 5
                            },
                            "end": {
                                "line": 25,
                                "offset": 9
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "Addr",
                    "class_def_line_num": 25,
                    "field_name": "Country",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Address",
                    "package": "model",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "f2e166219d8780ba31e73b5d5203b02c",
                "artifact_name": "Auditor",
                "code_ref": {
                    "file_path": "audit/auditor.go",
                    "start": {
                        "line": 6,
                        "offset": 5
                    },
                    "end": {
                        "line": 6,
                        "offset": 12
                    },
                    "snippet": null
                },
                "artifact_type": "container",
                "metadata": {
                    "sensitivity": 2.5,
                    "values": {
                        "fully_qualified_name": "go-test-project/audit.Auditor"
                    },
                    "selectedLocation": {
                        "file_path": "audit/auditor.go",
                        "start": {
                            "line": 6,
                            "offset": 5
                        },
                        "end": {
                            "line": 6,
                            "offset": 12
                        },
                        "snippet": null
                    },
                    "artifact_ids_used": [
                        "5c6322f3e024cae783781884df7f4e50",
                        "80804aaa3ad1f255d15788b9e53c38f9",
                        "fa4b057acc48ae76fb54db0a6a0ea6dd"
                    ],
                    "cluster_labels": [
                        "Email"
                    ],
                    "package": "audit",
                    "outer_classes": []
                }
            },
            {
                "artifact_id": "613a910946d28c4d2dbc39e5876e47de",
                "artifact_name": "User",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 11,
                        "offset": 5
                    },
                    "end": {
                        "line": 11,
                        "offset": 9
                    },
                    "snippet": null
                },
                "artifact_type": "container",
                "metadata": {
                    "sensitivity": 5.0,
                    "values": {
                        "fully_qualified_name": "go-test-project/model.User"
                    },
                    "selectedLocation": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 11,
                            "offset": 5
                        },
                        "end": {
                            "line": 11,
                            "offset": 9
                        },
                        "snippet": null
                    },
                    "artifact_ids_used": [
                        "029a851f39bf8d800db90da5eb372e0d",
                        "7105cc7e48e2b7fd76bc31fc21ac046c",
                        "31230cc8f11f1c22d08f478d991db0b7",
                        "2bd4c0638cee823ca9bbc291ccb76910",
                        "b18d65fab4baabc2dab839d7e489c1f2"
                    ],
                    "cluster_labels": [
                        "Credentials",
                        "Personal Characteristics",
                        "Name",
                        "Email",
                        "Digital"
                    ],
                    "package": "model",
                    "outer_classes": []
                }
            },
            {
                "artifact_id": "cd922cd9e06aba5943de1f6f58e9141d",
                "artifact_name": "Profile",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 19,
                        "offset": 5
                    },
                    "end": {
                        "line": 19,
                        "offset": 12
                    },
                    "snippet": null
                },
                "artifact_type": "container",
                "metadata": {
                    "sensitivity": 5.0,
                    "values": {
                        "fully_qualified_name": "go-test-project/model.Profile"
                    },
                    "selectedLocation": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 19,
                            "offset": 5
                        },
                        "end": {
                            "line": 19,
                            "offset": 12
                        },
                        "snippet": null
                    },
                    "artifact_ids_used": [
                        "da747c38837c86ac0862c8fe2da096c9",
                        "359064eec5c55b85e29c84a0409c9daf",
                        "9aaf850b2e5357b6918e384a208a5d6d"
                    ],
                    "cluster_labels": [
                        "Address",
                        "Phone"
                    ],
                    "package": "model",
                    "outer_classes": []
                }
            },
            {
                "artifact_id": "cef83ac876ca3ef5eba30f6b1eeb8c72",
                "artifact_name": "Addr",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 25,
                        "offset": 5
                    },
                    "end": {
                        "line": 25,
                        "offset": 9
                    },
                    "snippet": null
                },
                "artifact_type": "container",
                "metadata": {
                    "sensitivity": 2.5,
                    "values": {
                        "fully_qualified_name": "go-test-project/model.Addr"
                    },
                    "selectedLocation": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 25,
                            "offset": 5
                        },
                        "end": {
                            "line": 25,
                            "offset": 9
                        },
                        "snippet": null
                    },
                    "artifact_ids_used": [
                        "eb951b0bbf554904b76cb0e648d6562a",
                        "c6488865d8842d721f5c89f2ef083ef9",
                        "5b2ecea8e7fadcbe3782fa2f903354c6"
                    ],
                    "cluster_labels": [
                        "Address"
                    ],
                    "package": "model",
                    "outer_classes": []
                }
            },
            {
                "artifact_id": "d46bd02620d1e8a9f4ca55e3f2570156",
                "artifact_name": "Storage",
                "code_ref": {
                    "file_path": "dal/db.go",
                    "start": {
                        "line": 13,
                        "offset": 5
                    },
                    "end": {
                        "line": 13,
                        "offset": 12
                    },
                    "snippet": null
                },
                "artifact_type": "container",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {
                        "fully_qualified_name": "go-test-project/dal.Storage"
                    },
                    "selectedLocation": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 13,
                            "offset": 5
                        },
                        "end": {
                            "line": 13,
                            "offset": 12
                        },
                        "snippet": null
                    },
                    "artifact_ids_used": [
                        "b649d9dbe32ef9e413de645f9d5c3869",
                        "d1a89d9788a830990adeed4f6669f70c",
                        "15ced23f84aaa54c61554da43bdd0781"
                    ],
                    "cluster_labels": [],
                    "package": "dal",
                    "outer_classes": []
                }
            },
            {
                "artifact_id": "f1fd4aa0048d2789395e319af3caa82f",
                "artifact_name": "connData",
                "code_ref": {
                    "file_path": "dal/db.go",
                    "start": {
                        "line": 19,
                        "offset": 5
                    },
                    "end": {
                        "line": 19,
                        "offset": 13
                    },
                    "snippet": null
                },
                "artifact_type": "container",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {
                        "fully_qualified_name": "go-test-project/dal.connData"
                    },
                    "selectedLocation": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 19,
                            "offset": 5
                        },
                        "end": {
                            "line": 19,
                            "offset": 13
                        },
                        "snippet": null
                    },
                    "artifact_ids_used": [
                        "a6b52f750752c1f07e020156a7af67a7",
                        "87bd0ef5f386a1791fcec2fa76775099",
                        "a8070446202c2c36d41f1babf07ab3b9",
                        "053802c9fbca647097d0d9af839ba99d",
                        "ec8f1fa9e815777bce2f5fe156601ca2"
                    ],
                    "cluster_labels": [],
                    "package": "dal",
                    "outer_classes": []
                }
            },
            {
                "artifact_id": "5466d0cbd2c6354a23bfeae1c2f0a3f2",
                "artifact_name": "UserHandlerEcho",
                "code_ref": {
                    "file_path": "routes/echo.go",
                    "start": {
                        "line": 11,
                        "offset": 0
                    },
                    "end": {
                        "line": 15,
                        "offset": 1
                    },
                    "snippet": {
                        "lines_before": [],
                        "lines": [
                            "func UserHandlerEcho(c echo.Context) {",
                            "\te := echo.New()",
                            "\te.GET(\"/userListEcho\", UserListEcho)",
                            "\te.POST(\"/userAddEcho\", UserAddEcho)",
                            "}"
                        ],
                        "lines_after": []
                    }
                },
                "artifact_type": "rest_api",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserHandlerEcho",
                    "return_statement": "",
                    "return_var": "",
                    "class_name": "",
                    "package": "routes",
                    "params_list": "",
                    "context_funcs": [],
                    "context_params": [
                        "c"
                    ],
                    "content": "",
                    "http_method": ""
                }
            },
            {
                "artifact_id": "3acf8590296fff6f9faa63541055ffbb",
                "artifact_name": "UserListEcho",
                "code_ref": {
                    "file_path": "routes/echo.go",
                    "start": {
                        "line": 17,
                        "offset": 0
                    },
                    "end": {
                        "line": 21,
                        "offset": 1
                    },
                    "snippet": {
                        "lines_before": [],
                        "lines": [
                            "func UserListEcho(c echo.Context) error {",
                            "\tdb := c.Get(\"db\").(*sql.DB)",
                            "\tusers := model.UserObj{}.ReadAll(db)",
                            "\treturn c.JSON(http.StatusOK, users)",
                            "}"
                        ],
                        "lines_after": []
                    }
                },
                "artifact_type": "rest_api",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserListEcho",
                    "return_statement": "",
                    "return_var": "",
                    "class_name": "",
                    "package": "routes",
                    "params_list": "",
                    "context_funcs": [],
                    "context_params": [
                        "c"
                    ],
                    "content": "",
                    "http_method": ""
                }
            },
            {
                "artifact_id": "12362c1543b0b36913d5512093f31d64",
                "artifact_name": "UserAddEcho",
                "code_ref": {
                    "file_path": "routes/echo.go",
                    "start": {
                        "line": 23,
                        "offset": 0
                    },
                    "end": {
                        "line": 33,
                        "offset": 1
                    },
                    "snippet": {
                        "lines_before": [],
                        "lines": [
                            "func UserAddEcho(c echo.Context) error {",
                            "\tdb := c.Get(\"db\").(*sql.DB)",
                            "",
                            "\tvar user model.User",
                            "\tif err := c.Bind(&user); err != nil {",
                            "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")",
                            "\t}",
                            "",
                            "\tmodel.UserObj{}.Add(db, user)",
                            "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")",
                            "}"
                        ],
                        "lines_after": []
                    }
                },
                "artifact_type": "rest_api",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserAddEcho",
                    "return_statement": "",
                    "return_var": "",
                    "class_name": "",
                    "package": "routes",
                    "params_list": [
                        "user"
                    ],
                    "context_funcs": [
                        "Bind"
                    ],
                    "context_params": [
                        "c"
                    ],
                    "content": "",
                    "http_method": ""
                }
            },
            {
                "artifact_id": "b5d10d2011094433bd6c4348cd6ddcfb",
                "artifact_name": "UserListFiber",
                "code_ref": {
                    "file_path": "routes/fiber.go",
                    "start": {
                        "line": 16,
                        "offset": 0
                    },
                    "end": {
                        "line": 20,
                        "offset": 1
                    },
                    "snippet": {
                        "lines_before": [],
                        "lines": [
                            "func UserListFiber(c *fiber.Ctx) error {",
                            "\tdb := c.Locals(\"db\").(*sql.DB)",
                            "\tmodel.UserObj{}.ReadAll(db)",
                            "\treturn c.SendString(\"ok\\n\")",
                            "}"
                        ],
                        "lines_after": []
                    }
                },
                "artifact_type": "rest_api",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserListFiber",
                    "return_statement": "",
                    "return_var": "",
                    "class_name": "",
                    "package": "routes",
                    "params_list": "",
                    "context_funcs": [],
                    "context_params": [
                        "c"
                    ],
                    "content": "",
                    "http_method": ""
                }
            },
            {
                "artifact_id": "8c0e10c757361685f2f20441434ab55f",
                "artifact_name": "UserAddFiber",
                "code_ref": {
                    "file_path": "routes/fiber.go",
                    "start": {
                        "line": 22,
                        "offset": 0
                    },
                    "end": {
                        "line": 32,
                        "offset": 1
                    },
                    "snippet": {
                        "lines_before": [],
                        "lines": [
                            "func UserAddFiber(c *fiber.Ctx) error {",
                            "\tdb := c.Locals(\"db\").(*sql.DB)",
                            "",
                            "\tvar user model.User",
                            "\tif err := c.BodyParser(&user); err != nil {",
                            "\t\treturn c.SendString(\"Invalid JSON in request body\")",
                            "\t}",
                            "",
                            "\tmodel.UserObj{}.Add(db, user)",
                            "\treturn c.SendString(user.Name + \" added\\n\")",
                            "}"
                        ],
                        "lines_after": []
                    }
                },
                "artifact_type": "rest_api",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserAddFiber",
                    "return_statement": "",
                    "return_var": "",
                    "class_name": "",
                    "package": "routes",
                    "params_list": [
                        "user"
                    ],
                    "context_funcs": [
                        "BodyParser"
                    ],
                    "context_params": [
                        "c"
                    ],
                    "content": "",
                    "http_method": ""
                }
            },
            {
                "artifact_id": "3093d3dfff2928d69dd23e4e84a8c48e",
                "artifact_name": "UserHandlerGin",
                "code_ref": {
                    "file_path": "routes/gin.go",
                    "start": {
                        "line": 11,
                        "offset": 0
                    },
                    "end": {
                        "line": 18,
                        "offset": 1
                    },
                    "snippet": {
                        "lines_before": [],
                        "lines": [
                            "func UserHandlerGin(c *gin.Context) {",
                            "\tswitch c.Request.Method {",
                            "\tcase \"GET\":",
                            "\t\tUserListGin(c)",
                            "\tcase \"POST\":",
                            "\t\tUserAddGin(c)",
                            "\t}",
                            "}"
                        ],
                        "lines_after": []
                    }
                },
                "artifact_type": "rest_api",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserHandlerGin",
                    "return_statement": "",
                    "return_var": "",
                    "class_name": "",
                    "package": "routes",
                    "params_list": "",
                    "context_funcs": [],
                    "context_params": [
                        "c"
                    ],
                    "content": "",
                    "http_method": ""
                }
            },
            {
                "artifact_id": "b63daec5b2e94c00f3f39459dc85ad7e",
                "artifact_name": "UserListGin",
                "code_ref": {
                    "file_path": "routes/gin.go",
                    "start": {
                        "line": 20,
                        "offset": 0
                    },
                    "end": {
                        "line": 24,
                        "offset": 1
                    },
                    "snippet": {
                        "lines_before": [],
                        "lines": [
                            "func UserListGin(c *gin.Context) {",
                            "\tdb := c.MustGet(\"db\").(*sql.DB)",
                            "\tmodel.UserObj{}.ReadAll(db)",
                            "\tc.String(http.StatusOK, \"ok\\n\")",
                            "}"
                        ],
                        "lines_after": []
                    }
                },
                "artifact_type": "rest_api",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserListGin",
                    "return_statement": "",
                    "return_var": "",
                    "class_name": "",
                    "package": "routes",
                    "params_list": "",
                    "context_funcs": [],
                    "context_params": [
                        "c"
                    ],
                    "content": "",
                    "http_method": ""
                }
            },
            {
                "artifact_id": "1b66984de678e6f9f96dc2d0a82da20a",
                "artifact_name": "UserAddGin",
                "code_ref": {
                    "file_path": "routes/gin.go",
                    "start": {
                        "line": 26,
                        "offset": 0
                    },
                    "end": {
                        "line": 37,
                        "offset": 1
                    },
                    "snippet": {
                        "lines_before": [],
                        "lines": [
                            "func UserAddGin(c *gin.Context) {",
                            "\tdb := c.MustGet(\"db\").(*sql.DB)",
                            "",
                            "\tvar user model.User",
                            "\tif err := c.BindJSON(user); err != nil {",
                            "\t\tc.String(http.StatusBadRequest, \"Invalid JSON in request body\")",
                            "\t\treturn",
                            "\t}",
                            "",
                            "\tmodel.UserObj{}.Add(db, user)",
                            "\tc.String(http.StatusOK, user.Name+\" added\\n\")",
                            "}"
                        ],
                        "lines_after": []
                    }
                },
                "artifact_type": "rest_api",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserAddGin",
                    "return_statement": "",
                    "return_var": "",
                    "class_name": "",
                    "package": "routes",
                    "params_list": [
                        "err"
                    ],
                    "context_funcs": [
                        "BindJSON"
                    ],
                    "context_params": [
                        "c"
                    ],
                    "content": "",
                    "http_method": ""
                }
            },
            {
                "artifact_id": "e8a6f5b9303c5f33d2da509e4bff1d32",
                "artifact_name": "UserHandlerIris",
                "code_ref": {
                    "file_path": "routes/iris.go",
                    "start": {
                        "line": 10,
                        "offset": 0
                    },
                    "end": {
                        "line": 14,
                        "offset": 1
                    },
                    "snippet": {
                        "lines_before": [],
                        "lines": [
                            "func UserHandlerIris(c iris.Context) {",
                            "\tapp := iris.New()",
                            "\tapp.Get(\"/userListIris\", UserListIris)",
                            "\tapp.Post(\"/userAddIris\", UserAddIris)",
                            "}"
                        ],
                        "lines_after": []
                    }
                },
                "artifact_type": "rest_api",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserHandlerIris",
                    "return_statement": "",
                    "return_var": "",
                    "class_name": "",
                    "package": "routes",
                    "params_list": "",
                    "context_funcs": [],
                    "context_params": [
                        "c"
                    ],
                    "content": "",
                    "http_method": ""
                }
            },
            {
                "artifact_id": "bd8eb20cf636fe63cfb7eeae1bed27f9",
                "artifact_name": "UserListIris",
                "code_ref": {
                    "file_path": "routes/iris.go",
                    "start": {
                        "line": 16,
                        "offset": 0
                    },
                    "end": {
                        "line": 20,
                        "offset": 1
                    },
                    "snippet": {
                        "lines_before": [],
                        "lines": [
                            "func UserListIris(c iris.Context) {",
                            "\tdb := c.Values().Get(\"db\").(*sql.DB)",
                            "\tmodel.UserObj{}.ReadAll(db)",
                            "\tc.WriteString(\"ok\\n\")",
                            "}"
                        ],
                        "lines_after": []
                    }
                },
                "artifact_type": "rest_api",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserListIris",
                    "return_statement": "",
                    "return_var": "",
                    "class_name": "",
                    "package": "routes",
                    "params_list": "",
                    "context_funcs": [],
                    "context_params": [
                        "c"
                    ],
                    "content": "",
                    "http_method": ""
                }
            },
            {
                "artifact_id": "938b84fbbcb1b7abccce48256268a9c0",
                "artifact_name": "UserAddIris",
                "code_ref": {
                    "file_path": "routes/iris.go",
                    "start": {
                        "line": 22,
                        "offset": 0
                    },
                    "end": {
                        "line": 33,
                        "offset": 1
                    },
                    "snippet": {
                        "lines_before": [],
                        "lines": [
                            "func UserAddIris(c iris.Context) {",
                            "\tdb := c.Values().Get(\"db\").(*sql.DB)",
                            "",
                            "\tvar user model.User",
                            "\tif err := c.ReadJSON(&user); err != nil {",
                            "\t\tc.WriteString(\"Invalid JSON in request body\")",
                            "\t\treturn",
                            "\t}",
                            "",
                            "\tmodel.UserObj{}.Add(db, user)",
                            "\tc.WriteString(user.Name + \" added\\n\")",
                            "}"
                        ],
                        "lines_after": []
                    }
                },
                "artifact_type": "rest_api",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserAddIris",
                    "return_statement": "",
                    "return_var": "",
                    "class_name": "",
                    "package": "routes",
                    "params_list": [
                        "user"
                    ],
                    "context_funcs": [
                        "ReadJSON"
                    ],
                    "context_params": [
                        "c"
                    ],
                    "content": "",
                    "http_method": ""
                }
            },
            {
                "artifact_id": "5af5bafc7956ed00f61ee9bab2bec7c8",
                "artifact_name": "UserHandler",
                "code_ref": {
                    "file_path": "routes/net_http.go",
                    "start": {
                        "line": 14,
                        "offset": 0
                    },
                    "end": {
                        "line": 21,
                        "offset": 1
                    },
                    "snippet": {
                        "lines_before": [],
                        "lines": [
                            "func UserHandler(w http.ResponseWriter, r *http.Request) {",
                            "\tswitch r.Method {",
                            "\tcase \"GET\":",
                            "\t\tUserList(w, r)",
                            "\tcase \"POST\":",
                            "\t\tUserAdd(w, r)",
                            "\t}",
                            "}"
                        ],
                        "lines_after": []
                    }
                },
                "artifact_type": "rest_api",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserHandler",
                    "return_statement": "",
                    "return_var": "",
                    "class_name": "",
                    "package": "routes",
                    "params_list": "",
                    "context_funcs": [],
                    "context_params": [
                        "r"
                    ],
                    "content": "",
                    "http_method": ""
                }
            },
            {
                "artifact_id": "6aab7ebb66421fe7e75e56cbc311edf1",
                "artifact_name": "UserList",
                "code_ref": {
                    "file_path": "routes/net_http.go",
                    "start": {
                        "line": 23,
                        "offset": 0
                    },
                    "end": {
                        "line": 27,
                        "offset": 1
                    },
                    "snippet": {
                        "lines_before": [],
                        "lines": [
                            "func UserList(w http.ResponseWriter, r *http.Request) {",
                            "\tdb := r.Context().Value(\"db\").(*sql.DB)",
                            "\tmodel.UserObj{}.ReadAll(db)",
                            "\tw.Write([]byte(\"ok\\n\"))",
                            "}"
                        ],
                        "lines_after": []
                    }
                },
                "artifact_type": "rest_api",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserList",
                    "return_statement": "",
                    "return_var": "",
                    "class_name": "",
                    "package": "routes",
                    "params_list": "",
                    "context_funcs": [],
                    "context_params": [
                        "r"
                    ],
                    "content": "",
                    "http_method": ""
                }
            },
            {
                "artifact_id": "8b334817e34e729b585e498fe6293330",
                "artifact_name": "UserAdd",
                "code_ref": {
                    "file_path": "routes/net_http.go",
                    "start": {
                        "line": 29,
                        "offset": 0
                    },
                    "end": {
                        "line": 56,
                        "offset": 1
                    },
                    "snippet": {
                        "lines_before": [],
                        "lines": [
                            "func UserAdd(w http.ResponseWriter, r *http.Request) {",
                            "\tdb := r.Context().Value(\"db\").(*sql.DB)",
                            "",
                            "\tbody, err := ioutil.ReadAll(r.Body)",
                            "\tif err != nil {",
                            "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)",
                            "\t\treturn",
                            "\t}",
                            "",
                            "\tvar user model.User",
                            "\tif err := json.Unmarshal(body, &user); err != nil {",
                            "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)",
                            "\t\treturn",
                            "\t}",
                            "\tif util.StringLength(user.Password) < 8 {",
                            "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)",
                            "\t\treturn",
                            "\t}",
                            "",
                            "\tauditor := audit.Auditor{",
                            "\t\tUserEmail: user.Email,",
                            "\t\tAddedTime: time.Now(),",
                            "\t}",
                            "\tauditor.Audit()",
                            "",
                            "\tmodel.UserObj{}.Add(db, user)",
                            "\tw.Write([]byte(user.Name + \" added\\n\"))",
                            "}"
                        ],
                        "lines_after": []
                    }
                },
                "artifact_type": "rest_api",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserAdd",
                    "return_statement": "",
                    "return_var": "",
                    "class_name": "",
                    "package": "routes",
                    "params_list": [
                        "user"
                    ],
                    "context_funcs": [
                        "ReadAll"
                    ],
                    "context_params": [
                        "r"
                    ],
                    "content": "",
                    "http_method": ""
                }
            },
            {
                "artifact_id": "4ddbc4e93357d350eebbd0073b7bbeee",
                "artifact_name": "NewStorage",
                "code_ref": {
                    "file_path": "dal/db.go",
                    "start": {
                        "line": 27,
                        "offset": 0
                    },
                    "end": {
                        "line": 36,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "NewStorage",
                    "params_input": [],
                    "params_output": [],
                    "cluster_labels": [],
                    "class_name": "",
                    "class_def": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 27,
                            "offset": 5
                        },
                        "end": {
                            "line": 27,
                            "offset": 15
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 27,
                            "offset": 0
                        },
                        "end": {
                            "line": 36,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 27,
                            "offset": 26
                        },
                        "end": {
                            "line": 36,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "dal"
                }
            },
            {
                "artifact_id": "9cd97f5acfb54d5693402a1d9bedef66",
                "artifact_name": "getENV",
                "code_ref": {
                    "file_path": "dal/db.go",
                    "start": {
                        "line": 49,
                        "offset": 0
                    },
                    "end": {
                        "line": 79,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "getENV",
                    "params_input": [],
                    "params_output": [],
                    "cluster_labels": [],
                    "class_name": "",
                    "class_def": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 49,
                            "offset": 5
                        },
                        "end": {
                            "line": 49,
                            "offset": 11
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 49,
                            "offset": 0
                        },
                        "end": {
                            "line": 79,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 49,
                            "offset": 23
                        },
                        "end": {
                            "line": 79,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "dal"
                }
            },
            {
                "artifact_id": "7e2d566f489afb65022ee5820c806481",
                "artifact_name": "UserHandlerFiber",
                "code_ref": {
                    "file_path": "routes/fiber.go",
                    "start": {
                        "line": 10,
                        "offset": 0
                    },
                    "end": {
                        "line": 14,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserHandlerFiber",
                    "params_input": [],
                    "params_output": [],
                    "cluster_labels": [],
                    "class_name": "",
                    "class_def": {
                        "file_path": "routes/fiber.go",
                        "start": {
                            "line": 10,
                            "offset": 5
                        },
                        "end": {
                            "line": 10,
                            "offset": 21
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "routes/fiber.go",
                        "start": {
                            "line": 10,
                            "offset": 0
                        },
                        "end": {
                            "line": 14,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "routes/fiber.go",
                        "start": {
                            "line": 10,
                            "offset": 24
                        },
                        "end": {
                            "line": 14,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "routes"
                }
            },
            {
                "artifact_id": "7391805af1a867980a1b2a37db97ebbb",
                "artifact_name": "Audit",
                "code_ref": {
                    "file_path": "audit/auditor.go",
                    "start": {
                        "line": 12,
                        "offset": 0
                    },
                    "end": {
                        "line": 14,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "Audit",
                    "params_input": [],
                    "params_output": [],
                    "cluster_labels": [],
                    "class_name": "Auditor",
                    "class_def": {
                        "file_path": "audit/auditor.go",
                        "start": {
                            "line": 12,
                            "offset": 17
                        },
                        "end": {
                            "line": 12,
                            "offset": 22
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "audit/auditor.go",
                        "start": {
                            "line": 12,
                            "offset": 0
                        },
                        "end": {
                            "line": 14,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "audit/auditor.go",
                        "start": {
                            "line": 12,
                            "offset": 25
                        },
                        "end": {
                            "line": 14,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "audit"
                }
            },
            {
                "artifact_id": "fd1f8d2c1ea8d18e8c9b1f2893a2dc6f",
                "artifact_name": "connect",
                "code_ref": {
                    "file_path": "dal/db.go",
                    "start": {
                        "line": 38,
                        "offset": 0
                    },
                    "end": {
                        "line": 47,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "connect",
                    "params_input": [],
                    "params_output": [],
                    "cluster_labels": [],
                    "class_name": "Storage",
                    "class_def": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 38,
                            "offset": 18
                        },
                        "end": {
                            "line": 38,
                            "offset": 25
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 38,
                            "offset": 0
                        },
                        "end": {
                            "line": 47,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 38,
                            "offset": 28
                        },
                        "end": {
                            "line": 47,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "dal"
                }
            },
            {
                "artifact_id": "db52352cd3e60dc9d79b191c1fc2c98b",
                "artifact_name": "UserAdd",
                "code_ref": {
                    "file_path": "routes/net_http.go",
                    "start": {
                        "line": 29,
                        "offset": 0
                    },
                    "end": {
                        "line": 56,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 5.0,
                    "values": {},
                    "function_name": "UserAdd",
                    "params_input": [
                        {
                            "param_name": "r",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 29,
                                    "offset": 36
                                },
                                "end": {
                                    "line": 29,
                                    "offset": 37
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "w",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 29,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 29,
                                    "offset": 14
                                },
                                "snippet": null
                            },
                            "cluster_label": "Credentials",
                            "metadata": {}
                        },
                        {
                            "param_name": "user",
                            "param_type": "",
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 29,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 56,
                                    "offset": 1
                                },
                                "snippet": {
                                    "lines_before": [],
                                    "lines": [
                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {",
                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)",
                                        "",
                                        "\tbody, err := ioutil.ReadAll(r.Body)",
                                        "\tif err != nil {",
                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)",
                                        "\t\treturn",
                                        "\t}",
                                        "",
                                        "\tvar user model.User",
                                        "\tif err := json.Unmarshal(body, &user); err != nil {",
                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)",
                                        "\t\treturn",
                                        "\t}",
                                        "\tif util.StringLength(user.Password) < 8 {",
                                        "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)",
                                        "\t\treturn",
                                        "\t}",
                                        "",
                                        "\tauditor := audit.Auditor{",
                                        "\t\tUserEmail: user.Email,",
                                        "\t\tAddedTime: time.Now(),",
                                        "\t}",
                                        "\tauditor.Audit()",
                                        "",
                                        "\tmodel.UserObj{}.Add(db, user)",
                                        "\tw.Write([]byte(user.Name + \" added\\n\"))",
                                        "}"
                                    ],
                                    "lines_after": []
                                }
                            },
                            "cluster_label": "Container Pii",
                            "metadata": {
                                "context_param": "r",
                                "extractor_func": "ReadAll"
                            }
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Container Pii",
                        "Credentials"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "routes/net_http.go",
                        "start": {
                            "line": 29,
                            "offset": 5
                        },
                        "end": {
                            "line": 29,
                            "offset": 12
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "routes/net_http.go",
                        "start": {
                            "line": 29,
                            "offset": 0
                        },
                        "end": {
                            "line": 56,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "routes/net_http.go",
                        "start": {
                            "line": 29,
                            "offset": 53
                        },
                        "end": {
                            "line": 56,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "routes"
                }
            },
            {
                "artifact_id": "04697ffd049cbcb2f155132c99d60501",
                "artifact_name": "CreateUserTable",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 31,
                        "offset": 0
                    },
                    "end": {
                        "line": 38,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "CreateUserTable",
                    "params_input": [
                        {
                            "param_name": "db",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 31,
                                    "offset": 21
                                },
                                "end": {
                                    "line": 31,
                                    "offset": 23
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "name",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 31,
                                    "offset": 33
                                },
                                "end": {
                                    "line": 31,
                                    "offset": 37
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Not Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 31,
                            "offset": 5
                        },
                        "end": {
                            "line": 31,
                            "offset": 20
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 31,
                            "offset": 0
                        },
                        "end": {
                            "line": 38,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 31,
                            "offset": 46
                        },
                        "end": {
                            "line": 38,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "model"
                }
            },
            {
                "artifact_id": "43f6c4288fb74c4bd600d37472214701",
                "artifact_name": "UserAddEcho",
                "code_ref": {
                    "file_path": "routes/echo.go",
                    "start": {
                        "line": 23,
                        "offset": 0
                    },
                    "end": {
                        "line": 33,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 5.0,
                    "values": {},
                    "function_name": "UserAddEcho",
                    "params_input": [
                        {
                            "param_name": "c",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/echo.go",
                                "start": {
                                    "line": 23,
                                    "offset": 17
                                },
                                "end": {
                                    "line": 23,
                                    "offset": 18
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "user",
                            "param_type": "",
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/echo.go",
                                "start": {
                                    "line": 23,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 33,
                                    "offset": 1
                                },
                                "snippet": {
                                    "lines_before": [],
                                    "lines": [
                                        "func UserAddEcho(c echo.Context) error {",
                                        "\tdb := c.Get(\"db\").(*sql.DB)",
                                        "",
                                        "\tvar user model.User",
                                        "\tif err := c.Bind(&user); err != nil {",
                                        "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")",
                                        "\t}",
                                        "",
                                        "\tmodel.UserObj{}.Add(db, user)",
                                        "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")",
                                        "}"
                                    ],
                                    "lines_after": []
                                }
                            },
                            "cluster_label": "Credentials",
                            "metadata": {
                                "context_param": "c",
                                "extractor_func": "Bind"
                            }
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Not Pii",
                        "Credentials"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "routes/echo.go",
                        "start": {
                            "line": 23,
                            "offset": 5
                        },
                        "end": {
                            "line": 23,
                            "offset": 16
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "routes/echo.go",
                        "start": {
                            "line": 23,
                            "offset": 0
                        },
                        "end": {
                            "line": 33,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "routes/echo.go",
                        "start": {
                            "line": 23,
                            "offset": 39
                        },
                        "end": {
                            "line": 33,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "routes"
                }
            },
            {
                "artifact_id": "43fbbb0c2b1bf24f388a2e789c9670e1",
                "artifact_name": "UserAddFiber",
                "code_ref": {
                    "file_path": "routes/fiber.go",
                    "start": {
                        "line": 22,
                        "offset": 0
                    },
                    "end": {
                        "line": 32,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 5.0,
                    "values": {},
                    "function_name": "UserAddFiber",
                    "params_input": [
                        {
                            "param_name": "c",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/fiber.go",
                                "start": {
                                    "line": 22,
                                    "offset": 18
                                },
                                "end": {
                                    "line": 22,
                                    "offset": 19
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "user",
                            "param_type": "",
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/fiber.go",
                                "start": {
                                    "line": 22,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 32,
                                    "offset": 1
                                },
                                "snippet": {
                                    "lines_before": [],
                                    "lines": [
                                        "func UserAddFiber(c *fiber.Ctx) error {",
                                        "\tdb := c.Locals(\"db\").(*sql.DB)",
                                        "",
                                        "\tvar user model.User",
                                        "\tif err := c.BodyParser(&user); err != nil {",
                                        "\t\treturn c.SendString(\"Invalid JSON in request body\")",
                                        "\t}",
                                        "",
                                        "\tmodel.UserObj{}.Add(db, user)",
                                        "\treturn c.SendString(user.Name + \" added\\n\")",
                                        "}"
                                    ],
                                    "lines_after": []
                                }
                            },
                            "cluster_label": "Credentials",
                            "metadata": {
                                "context_param": "c",
                                "extractor_func": "BodyParser"
                            }
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Not Pii",
                        "Credentials"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "routes/fiber.go",
                        "start": {
                            "line": 22,
                            "offset": 5
                        },
                        "end": {
                            "line": 22,
                            "offset": 17
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "routes/fiber.go",
                        "start": {
                            "line": 22,
                            "offset": 0
                        },
                        "end": {
                            "line": 32,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "routes/fiber.go",
                        "start": {
                            "line": 22,
                            "offset": 38
                        },
                        "end": {
                            "line": 32,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "routes"
                }
            },
            {
                "artifact_id": "d0c802dd2d18fa0d386500fb692af146",
                "artifact_name": "UserAddGin",
                "code_ref": {
                    "file_path": "routes/gin.go",
                    "start": {
                        "line": 26,
                        "offset": 0
                    },
                    "end": {
                        "line": 37,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserAddGin",
                    "params_input": [
                        {
                            "param_name": "c",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/gin.go",
                                "start": {
                                    "line": 26,
                                    "offset": 16
                                },
                                "end": {
                                    "line": 26,
                                    "offset": 17
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "err",
                            "param_type": "",
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/gin.go",
                                "start": {
                                    "line": 26,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 37,
                                    "offset": 1
                                },
                                "snippet": {
                                    "lines_before": [],
                                    "lines": [
                                        "func UserAddGin(c *gin.Context) {",
                                        "\tdb := c.MustGet(\"db\").(*sql.DB)",
                                        "",
                                        "\tvar user model.User",
                                        "\tif err := c.BindJSON(user); err != nil {",
                                        "\t\tc.String(http.StatusBadRequest, \"Invalid JSON in request body\")",
                                        "\t\treturn",
                                        "\t}",
                                        "",
                                        "\tmodel.UserObj{}.Add(db, user)",
                                        "\tc.String(http.StatusOK, user.Name+\" added\\n\")",
                                        "}"
                                    ],
                                    "lines_after": []
                                }
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {
                                "context_param": "c",
                                "extractor_func": "BindJSON"
                            }
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Not Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "routes/gin.go",
                        "start": {
                            "line": 26,
                            "offset": 5
                        },
                        "end": {
                            "line": 26,
                            "offset": 15
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "routes/gin.go",
                        "start": {
                            "line": 26,
                            "offset": 0
                        },
                        "end": {
                            "line": 37,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "routes/gin.go",
                        "start": {
                            "line": 26,
                            "offset": 32
                        },
                        "end": {
                            "line": 37,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "routes"
                }
            },
            {
                "artifact_id": "857f1748f8630bcc628d75e6ef89d3e1",
                "artifact_name": "UserAddIris",
                "code_ref": {
                    "file_path": "routes/iris.go",
                    "start": {
                        "line": 22,
                        "offset": 0
                    },
                    "end": {
                        "line": 33,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 5.0,
                    "values": {},
                    "function_name": "UserAddIris",
                    "params_input": [
                        {
                            "param_name": "c",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/iris.go",
                                "start": {
                                    "line": 22,
                                    "offset": 17
                                },
                                "end": {
                                    "line": 22,
                                    "offset": 18
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "user",
                            "param_type": "",
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/iris.go",
                                "start": {
                                    "line": 22,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 33,
                                    "offset": 1
                                },
                                "snippet": {
                                    "lines_before": [],
                                    "lines": [
                                        "func UserAddIris(c iris.Context) {",
                                        "\tdb := c.Values().Get(\"db\").(*sql.DB)",
                                        "",
                                        "\tvar user model.User",
                                        "\tif err := c.ReadJSON(&user); err != nil {",
                                        "\t\tc.WriteString(\"Invalid JSON in request body\")",
                                        "\t\treturn",
                                        "\t}",
                                        "",
                                        "\tmodel.UserObj{}.Add(db, user)",
                                        "\tc.WriteString(user.Name + \" added\\n\")",
                                        "}"
                                    ],
                                    "lines_after": []
                                }
                            },
                            "cluster_label": "Credentials",
                            "metadata": {
                                "context_param": "c",
                                "extractor_func": "ReadJSON"
                            }
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Not Pii",
                        "Credentials"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "routes/iris.go",
                        "start": {
                            "line": 22,
                            "offset": 5
                        },
                        "end": {
                            "line": 22,
                            "offset": 16
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "routes/iris.go",
                        "start": {
                            "line": 22,
                            "offset": 0
                        },
                        "end": {
                            "line": 33,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "routes/iris.go",
                        "start": {
                            "line": 22,
                            "offset": 33
                        },
                        "end": {
                            "line": 33,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "routes"
                }
            },
            {
                "artifact_id": "d627d95d13c7765eb695d0d739c63d06",
                "artifact_name": "UserHandler",
                "code_ref": {
                    "file_path": "routes/net_http.go",
                    "start": {
                        "line": 14,
                        "offset": 0
                    },
                    "end": {
                        "line": 21,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserHandler",
                    "params_input": [
                        {
                            "param_name": "r",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 14,
                                    "offset": 40
                                },
                                "end": {
                                    "line": 14,
                                    "offset": 41
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "w",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 14,
                                    "offset": 17
                                },
                                "end": {
                                    "line": 14,
                                    "offset": 18
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Container Not Pii",
                        "Not Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "routes/net_http.go",
                        "start": {
                            "line": 14,
                            "offset": 5
                        },
                        "end": {
                            "line": 14,
                            "offset": 16
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "routes/net_http.go",
                        "start": {
                            "line": 14,
                            "offset": 0
                        },
                        "end": {
                            "line": 21,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "routes/net_http.go",
                        "start": {
                            "line": 14,
                            "offset": 57
                        },
                        "end": {
                            "line": 21,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "routes"
                }
            },
            {
                "artifact_id": "f6e225d61236940b0fb388bcb4a192b1",
                "artifact_name": "UserHandlerEcho",
                "code_ref": {
                    "file_path": "routes/echo.go",
                    "start": {
                        "line": 11,
                        "offset": 0
                    },
                    "end": {
                        "line": 15,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserHandlerEcho",
                    "params_input": [
                        {
                            "param_name": "c",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/echo.go",
                                "start": {
                                    "line": 11,
                                    "offset": 21
                                },
                                "end": {
                                    "line": 11,
                                    "offset": 22
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Not Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "routes/echo.go",
                        "start": {
                            "line": 11,
                            "offset": 5
                        },
                        "end": {
                            "line": 11,
                            "offset": 20
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "routes/echo.go",
                        "start": {
                            "line": 11,
                            "offset": 0
                        },
                        "end": {
                            "line": 15,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "routes/echo.go",
                        "start": {
                            "line": 11,
                            "offset": 37
                        },
                        "end": {
                            "line": 15,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "routes"
                }
            },
            {
                "artifact_id": "655ec190bb8e3ed977969688418966e8",
                "artifact_name": "UserHandlerGin",
                "code_ref": {
                    "file_path": "routes/gin.go",
                    "start": {
                        "line": 11,
                        "offset": 0
                    },
                    "end": {
                        "line": 18,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserHandlerGin",
                    "params_input": [
                        {
                            "param_name": "c",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/gin.go",
                                "start": {
                                    "line": 11,
                                    "offset": 20
                                },
                                "end": {
                                    "line": 11,
                                    "offset": 21
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Not Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "routes/gin.go",
                        "start": {
                            "line": 11,
                            "offset": 5
                        },
                        "end": {
                            "line": 11,
                            "offset": 19
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "routes/gin.go",
                        "start": {
                            "line": 11,
                            "offset": 0
                        },
                        "end": {
                            "line": 18,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "routes/gin.go",
                        "start": {
                            "line": 11,
                            "offset": 36
                        },
                        "end": {
                            "line": 18,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "routes"
                }
            },
            {
                "artifact_id": "067fc5f6900dfb49e74f10ba2181a20f",
                "artifact_name": "UserHandlerIris",
                "code_ref": {
                    "file_path": "routes/iris.go",
                    "start": {
                        "line": 10,
                        "offset": 0
                    },
                    "end": {
                        "line": 14,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserHandlerIris",
                    "params_input": [
                        {
                            "param_name": "c",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/iris.go",
                                "start": {
                                    "line": 10,
                                    "offset": 21
                                },
                                "end": {
                                    "line": 10,
                                    "offset": 22
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Not Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "routes/iris.go",
                        "start": {
                            "line": 10,
                            "offset": 5
                        },
                        "end": {
                            "line": 10,
                            "offset": 20
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "routes/iris.go",
                        "start": {
                            "line": 10,
                            "offset": 0
                        },
                        "end": {
                            "line": 14,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "routes/iris.go",
                        "start": {
                            "line": 10,
                            "offset": 37
                        },
                        "end": {
                            "line": 14,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "routes"
                }
            },
            {
                "artifact_id": "6ac9487005e808729a3a31d4174508d9",
                "artifact_name": "UserList",
                "code_ref": {
                    "file_path": "routes/net_http.go",
                    "start": {
                        "line": 23,
                        "offset": 0
                    },
                    "end": {
                        "line": 27,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 5.0,
                    "values": {},
                    "function_name": "UserList",
                    "params_input": [
                        {
                            "param_name": "r",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 23,
                                    "offset": 37
                                },
                                "end": {
                                    "line": 23,
                                    "offset": 38
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "w",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 23,
                                    "offset": 14
                                },
                                "end": {
                                    "line": 23,
                                    "offset": 15
                                },
                                "snippet": null
                            },
                            "cluster_label": "Credentials",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Container Pii",
                        "Credentials"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "routes/net_http.go",
                        "start": {
                            "line": 23,
                            "offset": 5
                        },
                        "end": {
                            "line": 23,
                            "offset": 13
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "routes/net_http.go",
                        "start": {
                            "line": 23,
                            "offset": 0
                        },
                        "end": {
                            "line": 27,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "routes/net_http.go",
                        "start": {
                            "line": 23,
                            "offset": 54
                        },
                        "end": {
                            "line": 27,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "routes"
                }
            },
            {
                "artifact_id": "9baa434008e570f20dff95927c15cc9a",
                "artifact_name": "UserListEcho",
                "code_ref": {
                    "file_path": "routes/echo.go",
                    "start": {
                        "line": 17,
                        "offset": 0
                    },
                    "end": {
                        "line": 21,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserListEcho",
                    "params_input": [
                        {
                            "param_name": "c",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/echo.go",
                                "start": {
                                    "line": 17,
                                    "offset": 18
                                },
                                "end": {
                                    "line": 17,
                                    "offset": 19
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Not Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "routes/echo.go",
                        "start": {
                            "line": 17,
                            "offset": 5
                        },
                        "end": {
                            "line": 17,
                            "offset": 17
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "routes/echo.go",
                        "start": {
                            "line": 17,
                            "offset": 0
                        },
                        "end": {
                            "line": 21,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "routes/echo.go",
                        "start": {
                            "line": 17,
                            "offset": 40
                        },
                        "end": {
                            "line": 21,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "routes"
                }
            },
            {
                "artifact_id": "56a7e8f65dda0ab9378dde3d9770bb8e",
                "artifact_name": "createAddress",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 58,
                        "offset": 0
                    },
                    "end": {
                        "line": 72,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "createAddress",
                    "params_input": [
                        {
                            "param_name": "db",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 58,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 58,
                                    "offset": 21
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Container Not Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 58,
                            "offset": 5
                        },
                        "end": {
                            "line": 58,
                            "offset": 18
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 58,
                            "offset": 0
                        },
                        "end": {
                            "line": 72,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 58,
                            "offset": 31
                        },
                        "end": {
                            "line": 72,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "model"
                }
            },
            {
                "artifact_id": "d01584b38d3c17e048ffd22f068d042b",
                "artifact_name": "UserListFiber",
                "code_ref": {
                    "file_path": "routes/fiber.go",
                    "start": {
                        "line": 16,
                        "offset": 0
                    },
                    "end": {
                        "line": 20,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserListFiber",
                    "params_input": [
                        {
                            "param_name": "c",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/fiber.go",
                                "start": {
                                    "line": 16,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 16,
                                    "offset": 20
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Not Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "routes/fiber.go",
                        "start": {
                            "line": 16,
                            "offset": 5
                        },
                        "end": {
                            "line": 16,
                            "offset": 18
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "routes/fiber.go",
                        "start": {
                            "line": 16,
                            "offset": 0
                        },
                        "end": {
                            "line": 20,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "routes/fiber.go",
                        "start": {
                            "line": 16,
                            "offset": 39
                        },
                        "end": {
                            "line": 20,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "routes"
                }
            },
            {
                "artifact_id": "431e4643774dd3ebe364efc7f14e966a",
                "artifact_name": "createUsers",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 40,
                        "offset": 0
                    },
                    "end": {
                        "line": 56,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "createUsers",
                    "params_input": [
                        {
                            "param_name": "db",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 40,
                                    "offset": 17
                                },
                                "end": {
                                    "line": 40,
                                    "offset": 19
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Container Not Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 40,
                            "offset": 5
                        },
                        "end": {
                            "line": 40,
                            "offset": 16
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 40,
                            "offset": 0
                        },
                        "end": {
                            "line": 56,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 40,
                            "offset": 29
                        },
                        "end": {
                            "line": 56,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "model"
                }
            },
            {
                "artifact_id": "c9218504975338717b2ac31b285604a5",
                "artifact_name": "UserListGin",
                "code_ref": {
                    "file_path": "routes/gin.go",
                    "start": {
                        "line": 20,
                        "offset": 0
                    },
                    "end": {
                        "line": 24,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserListGin",
                    "params_input": [
                        {
                            "param_name": "c",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/gin.go",
                                "start": {
                                    "line": 20,
                                    "offset": 17
                                },
                                "end": {
                                    "line": 20,
                                    "offset": 18
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Not Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "routes/gin.go",
                        "start": {
                            "line": 20,
                            "offset": 5
                        },
                        "end": {
                            "line": 20,
                            "offset": 16
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "routes/gin.go",
                        "start": {
                            "line": 20,
                            "offset": 0
                        },
                        "end": {
                            "line": 24,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "routes/gin.go",
                        "start": {
                            "line": 20,
                            "offset": 33
                        },
                        "end": {
                            "line": 24,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "routes"
                }
            },
            {
                "artifact_id": "3816cce47e3637117865f7f246afd664",
                "artifact_name": "UserListIris",
                "code_ref": {
                    "file_path": "routes/iris.go",
                    "start": {
                        "line": 16,
                        "offset": 0
                    },
                    "end": {
                        "line": 20,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserListIris",
                    "params_input": [
                        {
                            "param_name": "c",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/iris.go",
                                "start": {
                                    "line": 16,
                                    "offset": 18
                                },
                                "end": {
                                    "line": 16,
                                    "offset": 19
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Not Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "routes/iris.go",
                        "start": {
                            "line": 16,
                            "offset": 5
                        },
                        "end": {
                            "line": 16,
                            "offset": 17
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "routes/iris.go",
                        "start": {
                            "line": 16,
                            "offset": 0
                        },
                        "end": {
                            "line": 20,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "routes/iris.go",
                        "start": {
                            "line": 16,
                            "offset": 34
                        },
                        "end": {
                            "line": 20,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "routes"
                }
            },
            {
                "artifact_id": "ef1dd1b83980824bd85d2dad08f974af",
                "artifact_name": "info",
                "code_ref": {
                    "file_path": "audit/logger.go",
                    "start": {
                        "line": 8,
                        "offset": 0
                    },
                    "end": {
                        "line": 10,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "info",
                    "params_input": [
                        {
                            "param_name": "l",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "audit/logger.go",
                                "start": {
                                    "line": 8,
                                    "offset": 6
                                },
                                "end": {
                                    "line": 8,
                                    "offset": 7
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Not Pii"
                    ],
                    "class_name": "Logger",
                    "class_def": {
                        "file_path": "audit/logger.go",
                        "start": {
                            "line": 8,
                            "offset": 16
                        },
                        "end": {
                            "line": 8,
                            "offset": 20
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "audit/logger.go",
                        "start": {
                            "line": 8,
                            "offset": 0
                        },
                        "end": {
                            "line": 10,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "audit/logger.go",
                        "start": {
                            "line": 8,
                            "offset": 31
                        },
                        "end": {
                            "line": 10,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "audit"
                }
            },
            {
                "artifact_id": "5f1137d4c0511f375a3fe07496c11019",
                "artifact_name": "error",
                "code_ref": {
                    "file_path": "audit/logger.go",
                    "start": {
                        "line": 12,
                        "offset": 0
                    },
                    "end": {
                        "line": 14,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "error",
                    "params_input": [
                        {
                            "param_name": "l",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "audit/logger.go",
                                "start": {
                                    "line": 12,
                                    "offset": 6
                                },
                                "end": {
                                    "line": 12,
                                    "offset": 7
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Container Not Pii"
                    ],
                    "class_name": "Logger",
                    "class_def": {
                        "file_path": "audit/logger.go",
                        "start": {
                            "line": 12,
                            "offset": 16
                        },
                        "end": {
                            "line": 12,
                            "offset": 21
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "audit/logger.go",
                        "start": {
                            "line": 12,
                            "offset": 0
                        },
                        "end": {
                            "line": 14,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "audit/logger.go",
                        "start": {
                            "line": 12,
                            "offset": 32
                        },
                        "end": {
                            "line": 14,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "audit"
                }
            },
            {
                "artifact_id": "6e4fb048e48027f5345ddb01fb2f113f",
                "artifact_name": "Read",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 74,
                        "offset": 0
                    },
                    "end": {
                        "line": 110,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "Read",
                    "params_input": [
                        {
                            "param_name": "db",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 74,
                                    "offset": 22
                                },
                                "end": {
                                    "line": 74,
                                    "offset": 24
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "id",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 74,
                                    "offset": 34
                                },
                                "end": {
                                    "line": 74,
                                    "offset": 36
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "u",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 74,
                                    "offset": 6
                                },
                                "end": {
                                    "line": 74,
                                    "offset": 7
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Container Not Pii",
                        "Not Pii"
                    ],
                    "class_name": "UserObj",
                    "class_def": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 74,
                            "offset": 17
                        },
                        "end": {
                            "line": 74,
                            "offset": 21
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 74,
                            "offset": 0
                        },
                        "end": {
                            "line": 110,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 74,
                            "offset": 59
                        },
                        "end": {
                            "line": 110,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "model"
                }
            },
            {
                "artifact_id": "f0d9910b4ccdb6c4e22f76ffe931a0a1",
                "artifact_name": "ReadAll",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 112,
                        "offset": 0
                    },
                    "end": {
                        "line": 134,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "ReadAll",
                    "params_input": [
                        {
                            "param_name": "u",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 112,
                                    "offset": 6
                                },
                                "end": {
                                    "line": 112,
                                    "offset": 7
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "db",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 112,
                                    "offset": 25
                                },
                                "end": {
                                    "line": 112,
                                    "offset": 27
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Container Not Pii"
                    ],
                    "class_name": "UserObj",
                    "class_def": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 112,
                            "offset": 17
                        },
                        "end": {
                            "line": 112,
                            "offset": 24
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 112,
                            "offset": 0
                        },
                        "end": {
                            "line": 134,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 112,
                            "offset": 44
                        },
                        "end": {
                            "line": 134,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "model"
                }
            },
            {
                "artifact_id": "8c228e1d0615cd5d36174d09b7c6b5a7",
                "artifact_name": "Add",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 136,
                        "offset": 0
                    },
                    "end": {
                        "line": 149,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 5.0,
                    "values": {},
                    "function_name": "Add",
                    "params_input": [
                        {
                            "param_name": "u",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 136,
                                    "offset": 6
                                },
                                "end": {
                                    "line": 136,
                                    "offset": 7
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "db",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 136,
                                    "offset": 21
                                },
                                "end": {
                                    "line": 136,
                                    "offset": 23
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "user",
                            "param_type": "User",
                            "artifact_id": "613a910946d28c4d2dbc39e5876e47de",
                            "is_container": true,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 136,
                                    "offset": 33
                                },
                                "end": {
                                    "line": 136,
                                    "offset": 37
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Container Pii",
                        "Container Not Pii"
                    ],
                    "class_name": "UserObj",
                    "class_def": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 136,
                            "offset": 17
                        },
                        "end": {
                            "line": 136,
                            "offset": 20
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 136,
                            "offset": 0
                        },
                        "end": {
                            "line": 149,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 136,
                            "offset": 44
                        },
                        "end": {
                            "line": 149,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "model"
                }
            },
            {
                "artifact_id": "589b31b181b23994b50d46bdb71de39e",
                "artifact_name": "StringLength",
                "code_ref": {
                    "file_path": "util/strings.go",
                    "start": {
                        "line": 2,
                        "offset": 0
                    },
                    "end": {
                        "line": 4,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "StringLength",
                    "params_input": [
                        {
                            "param_name": "s",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "util/strings.go",
                                "start": {
                                    "line": 2,
                                    "offset": 18
                                },
                                "end": {
                                    "line": 2,
                                    "offset": 19
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Container Not Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "util/strings.go",
                        "start": {
                            "line": 2,
                            "offset": 5
                        },
                        "end": {
                            "line": 2,
                            "offset": 17
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "util/strings.go",
                        "start": {
                            "line": 2,
                            "offset": 0
                        },
                        "end": {
                            "line": 4,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "util/strings.go",
                        "start": {
                            "line": 2,
                            "offset": 32
                        },
                        "end": {
                            "line": 4,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "util"
                }
            }
        ],
        "projections": [],
        "flows_result": {
            "flow_summaries": {},
            "flows_artifacts": {
                "Name": {
                    "sensitive-info-to-log": [
                        {
                            "artifact_id": "e9698a81309bd4f4c4230f1e475f79ac",
                            "artifact_name": "TaintEngine_sensitive-info-to-log_model/user.go#13/1_->model/user.go#103/29_31230cc8f11f1c22d08f478d991db0b7",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 103,
                                    "offset": 29
                                },
                                "end": {
                                    "line": 103,
                                    "offset": 38
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position = position\n",
                                        "\t\tuser.Profile.Phone = phone\n",
                                        "\n"
                                    ],
                                    "lines": [
                                        "\t\tlog.Println(\"read name: \", user.Name)\n"
                                    ],
                                    "lines_after": [
                                        "\t\tlog.Println(\"read email: \", user.Email)\n",
                                        "\n",
                                        "\t\treturn user, nil\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "sensitive-info-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L104-L104",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L104-L104",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "31230cc8f11f1c22d08f478d991db0b7"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-log",
                                "flow_type": "sensitive-info-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 13,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 13,
                                            "offset": 5
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines": [
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 103,
                                            "offset": 29
                                        },
                                        "end": {
                                            "line": 103,
                                            "offset": 38
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position = position\n",
                                                "\t\tuser.Profile.Phone = phone\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "\t\tlog.Println(\"read name: \", user.Name)\n"
                                            ],
                                            "lines_after": [
                                                "\t\tlog.Println(\"read email: \", user.Email)\n",
                                                "\n",
                                                "\t\treturn user, nil\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 103,
                                                "offset": 29
                                            },
                                            "end": {
                                                "line": 103,
                                                "offset": 38
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position = position\n",
                                                    "\t\tuser.Profile.Phone = phone\n",
                                                    "\n"
                                                ],
                                                "lines": [
                                                    "\t\tlog.Println(\"read name: \", user.Name)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\tlog.Println(\"read email: \", user.Email)\n",
                                                    "\n",
                                                    "\t\treturn user, nil\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 103,
                                                "offset": 29
                                            },
                                            "end": {
                                                "line": 103,
                                                "offset": 38
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": []
                            }
                        },
                        {
                            "artifact_id": "76778dc5752b5196f086aebad6763ac6",
                            "artifact_name": "TaintEngine_sensitive-info-to-log_model/user.go#13/1_->model/user.go#144/13_31230cc8f11f1c22d08f478d991db0b7",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 144,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 144,
                                    "offset": 16
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position,\n",
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n"
                                    ],
                                    "lines": [
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\t_, err := db.Exec(sql)\n",
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "sensitive-info-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "31230cc8f11f1c22d08f478d991db0b7"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-log",
                                "flow_type": "sensitive-info-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 13,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 13,
                                            "offset": 5
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines": [
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 144,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 144,
                                            "offset": 16
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position,\n",
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n"
                                            ],
                                            "lines": [
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\t_, err := db.Exec(sql)\n",
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position,\n",
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n"
                                                ],
                                                "lines": [
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\t_, err := db.Exec(sql)\n",
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 144,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 144,
                                                    "offset": 16
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines": [
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "sensitive-info-to-external-functions": [
                        {
                            "artifact_id": "8d58d9b5885b6395132565ad22b93d7b",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#13/1_->model/user.go#125/9_31230cc8f11f1c22d08f478d991db0b7",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 125,
                                    "offset": 9
                                },
                                "end": {
                                    "line": 125,
                                    "offset": 104
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tfor rows.Next() {\n",
                                        "\t\tvar user User\n",
                                        "\t\tvar profile Profile\n"
                                    ],
                                    "lines": [
                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                    ],
                                    "lines_after": [
                                        "\t\tif err != nil {\n",
                                        "\t\t\tlog.Println(err)\n",
                                        "\t\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "31230cc8f11f1c22d08f478d991db0b7"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 13,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 13,
                                            "offset": 5
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines": [
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 125,
                                            "offset": 9
                                        },
                                        "end": {
                                            "line": 125,
                                            "offset": 104
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tfor rows.Next() {\n",
                                                "\t\tvar user User\n",
                                                "\t\tvar profile Profile\n"
                                            ],
                                            "lines": [
                                                "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                            ],
                                            "lines_after": [
                                                "\t\tif err != nil {\n",
                                                "\t\t\tlog.Println(err)\n",
                                                "\t\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\tfor rows.Next() {\n",
                                                    "\t\tvar user User\n",
                                                    "\t\tvar profile Profile\n"
                                                ],
                                                "lines": [
                                                    "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\tif err != nil {\n",
                                                    "\t\t\tlog.Println(err)\n",
                                                    "\t\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": null
                                        },
                                        "message": "\\[\\]type{{args}}"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 30
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 39
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 39
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "c330aa96ac2f99248805db0806b2c21c",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#13/1_->model/user.go#145/19_31230cc8f11f1c22d08f478d991db0b7",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 145,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 145,
                                    "offset": 22
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n",
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines": [
                                        "\t_, err := db.Exec(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "31230cc8f11f1c22d08f478d991db0b7"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 13,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 13,
                                            "offset": 5
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines": [
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 145,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 145,
                                            "offset": 22
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n",
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines": [
                                                "\t_, err := db.Exec(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n",
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines": [
                                                    "\t_, err := db.Exec(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": null
                                        },
                                        "message": "sql"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 145,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 145,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines": [
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "65a5d92e8d1bc68e69b55cb3575a2f61",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#13/1_->routes/gin.go#36/25_31230cc8f11f1c22d08f478d991db0b7",
                            "code_ref": {
                                "file_path": "routes/gin.go",
                                "start": {
                                    "line": 36,
                                    "offset": 25
                                },
                                "end": {
                                    "line": 36,
                                    "offset": 45
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t}\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\tc.String(http.StatusOK, user.Name+\" added\\n\")\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/gin.go#L37-L37",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/gin.go#L37-L37",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "31230cc8f11f1c22d08f478d991db0b7"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 13,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 13,
                                            "offset": 5
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines": [
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/gin.go",
                                        "start": {
                                            "line": 36,
                                            "offset": 25
                                        },
                                        "end": {
                                            "line": 36,
                                            "offset": 45
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\tc.String(http.StatusOK, user.Name+\" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/gin.go",
                                            "start": {
                                                "line": 36,
                                                "offset": 25
                                            },
                                            "end": {
                                                "line": 36,
                                                "offset": 45
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t}\n",
                                                    "\n",
                                                    "\tmodel.UserObj{}.Add(db, user)\n"
                                                ],
                                                "lines": [
                                                    "\tc.String(http.StatusOK, user.Name+\" added\\n\")\n"
                                                ],
                                                "lines_after": [
                                                    "}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/gin.go",
                                            "start": {
                                                "line": 36,
                                                "offset": 25
                                            },
                                            "end": {
                                                "line": 36,
                                                "offset": 45
                                            },
                                            "snippet": null
                                        },
                                        "message": "...+..."
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/gin.go",
                                                "start": {
                                                    "line": 36,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 36,
                                                    "offset": 34
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tc.String(http.StatusOK, user.Name+\" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/gin.go#L37-L37"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/gin.go",
                                                "start": {
                                                    "line": 36,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 36,
                                                    "offset": 45
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tc.String(http.StatusOK, user.Name+\" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/gin.go#L37-L37"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "d7b1bb3d81e22a0e3b958670f6927ee9",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#13/1_->routes/net_http.go#55/9_31230cc8f11f1c22d08f478d991db0b7",
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 55,
                                    "offset": 9
                                },
                                "end": {
                                    "line": 55,
                                    "offset": 39
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tauditor.Audit()\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "31230cc8f11f1c22d08f478d991db0b7"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 13,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 13,
                                            "offset": 5
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines": [
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 55,
                                            "offset": 9
                                        },
                                        "end": {
                                            "line": 55,
                                            "offset": 39
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tauditor.Audit()\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 55,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 55,
                                                "offset": 39
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\tauditor.Audit()\n",
                                                    "\n",
                                                    "\tmodel.UserObj{}.Add(db, user)\n"
                                                ],
                                                "lines": [
                                                    "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                ],
                                                "lines_after": [
                                                    "}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 55,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 55,
                                                "offset": 39
                                            },
                                            "snippet": null
                                        },
                                        "message": "type conversion"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 25
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 38
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 39
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "c8225a1030f668e5c55bc111d5a39914",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#13/1_->routes/echo.go#32/30_31230cc8f11f1c22d08f478d991db0b7",
                            "code_ref": {
                                "file_path": "routes/echo.go",
                                "start": {
                                    "line": 32,
                                    "offset": 30
                                },
                                "end": {
                                    "line": 32,
                                    "offset": 50
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t}\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "31230cc8f11f1c22d08f478d991db0b7"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 13,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 13,
                                            "offset": 5
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines": [
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/echo.go",
                                        "start": {
                                            "line": 32,
                                            "offset": 30
                                        },
                                        "end": {
                                            "line": 32,
                                            "offset": 50
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/echo.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 30
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 50
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t}\n",
                                                    "\n",
                                                    "\tmodel.UserObj{}.Add(db, user)\n"
                                                ],
                                                "lines": [
                                                    "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                                ],
                                                "lines_after": [
                                                    "}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/echo.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 30
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 50
                                            },
                                            "snippet": null
                                        },
                                        "message": "...+..."
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 39
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 50
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "f6ad1f7a1d89b0422f4b894328f1885b",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#13/1_->routes/fiber.go#31/21_31230cc8f11f1c22d08f478d991db0b7",
                            "code_ref": {
                                "file_path": "routes/fiber.go",
                                "start": {
                                    "line": 31,
                                    "offset": 21
                                },
                                "end": {
                                    "line": 31,
                                    "offset": 43
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t}\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "31230cc8f11f1c22d08f478d991db0b7"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 13,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 13,
                                            "offset": 5
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines": [
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/fiber.go",
                                        "start": {
                                            "line": 31,
                                            "offset": 21
                                        },
                                        "end": {
                                            "line": 31,
                                            "offset": 43
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/fiber.go",
                                            "start": {
                                                "line": 31,
                                                "offset": 21
                                            },
                                            "end": {
                                                "line": 31,
                                                "offset": 43
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t}\n",
                                                    "\n",
                                                    "\tmodel.UserObj{}.Add(db, user)\n"
                                                ],
                                                "lines": [
                                                    "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                                ],
                                                "lines_after": [
                                                    "}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/fiber.go",
                                            "start": {
                                                "line": 31,
                                                "offset": 21
                                            },
                                            "end": {
                                                "line": 31,
                                                "offset": 43
                                            },
                                            "snippet": null
                                        },
                                        "message": "...+..."
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 31,
                                                    "offset": 21
                                                },
                                                "end": {
                                                    "line": 31,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 31,
                                                    "offset": 21
                                                },
                                                "end": {
                                                    "line": 31,
                                                    "offset": 43
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "04faa2b9afe17471f79163815f88bece",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#13/1_->routes/net_http.go#34/13_31230cc8f11f1c22d08f478d991db0b7",
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 34,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 34,
                                    "offset": 14
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                        "\tif err != nil {\n"
                                    ],
                                    "lines": [
                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                    ],
                                    "lines_after": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L35-L35",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L35-L35",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "31230cc8f11f1c22d08f478d991db0b7"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 13,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 13,
                                            "offset": 5
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines": [
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 34,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 34,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                                "\tif err != nil {\n"
                                            ],
                                            "lines": [
                                                "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 34,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 34,
                                                "offset": 14
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\n",
                                                    "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                                    "\tif err != nil {\n"
                                                ],
                                                "lines": [
                                                    "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 34,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 34,
                                                "offset": 14
                                            },
                                            "snippet": null
                                        },
                                        "message": "w"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 25
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 38
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 39
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 34,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 34,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                                        "\tif err != nil {\n"
                                                    ],
                                                    "lines": [
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L35-L35"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "fc863922a95a444b1abdee09be29f572",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#13/1_->routes/net_http.go#40/13_31230cc8f11f1c22d08f478d991db0b7",
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 40,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 40,
                                    "offset": 14
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "\tvar user model.User\n",
                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                    ],
                                    "lines": [
                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                    ],
                                    "lines_after": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L41-L41",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L41-L41",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "31230cc8f11f1c22d08f478d991db0b7"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 13,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 13,
                                            "offset": 5
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines": [
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 40,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 40,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "\tvar user model.User\n",
                                                "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                            ],
                                            "lines": [
                                                "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\tif util.StringLength(user.Password) < 8 {\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 40,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 40,
                                                "offset": 14
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\n",
                                                    "\tvar user model.User\n",
                                                    "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                ],
                                                "lines": [
                                                    "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\tif util.StringLength(user.Password) < 8 {\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 40,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 40,
                                                "offset": 14
                                            },
                                            "snippet": null
                                        },
                                        "message": "w"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 25
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 38
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 39
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 40,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 40,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "\tvar user model.User\n",
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L41-L41"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "c1ee9790c18b44768c593ddf4a356bc2",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#13/1_->routes/net_http.go#44/13_31230cc8f11f1c22d08f478d991db0b7",
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 44,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 44,
                                    "offset": 14
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                    ],
                                    "lines": [
                                        "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                    ],
                                    "lines_after": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L45-L45",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L45-L45",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "31230cc8f11f1c22d08f478d991db0b7"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 13,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 13,
                                            "offset": 5
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines": [
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 44,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 44,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\tif util.StringLength(user.Password) < 8 {\n"
                                            ],
                                            "lines": [
                                                "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 44,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 44,
                                                "offset": 14
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\tif util.StringLength(user.Password) < 8 {\n"
                                                ],
                                                "lines": [
                                                    "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 44,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 44,
                                                "offset": 14
                                            },
                                            "snippet": null
                                        },
                                        "message": "w"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 25
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 38
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 39
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 44,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 44,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                                    ],
                                                    "lines": [
                                                        "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L45-L45"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "9075c4880072124fe1d986394cfbaba6",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#13/1_->routes/iris.go#32/15_31230cc8f11f1c22d08f478d991db0b7",
                            "code_ref": {
                                "file_path": "routes/iris.go",
                                "start": {
                                    "line": 32,
                                    "offset": 15
                                },
                                "end": {
                                    "line": 32,
                                    "offset": 37
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t}\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\tc.WriteString(user.Name + \" added\\n\")\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "31230cc8f11f1c22d08f478d991db0b7"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 13,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 13,
                                            "offset": 5
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines": [
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/iris.go",
                                        "start": {
                                            "line": 32,
                                            "offset": 15
                                        },
                                        "end": {
                                            "line": 32,
                                            "offset": 37
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\tc.WriteString(user.Name + \" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/iris.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 15
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 37
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t}\n",
                                                    "\n",
                                                    "\tmodel.UserObj{}.Add(db, user)\n"
                                                ],
                                                "lines": [
                                                    "\tc.WriteString(user.Name + \" added\\n\")\n"
                                                ],
                                                "lines_after": [
                                                    "}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/iris.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 15
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 37
                                            },
                                            "snippet": null
                                        },
                                        "message": "...+..."
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 15
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 24
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tc.WriteString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 15
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tc.WriteString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "pii-to-rest-return": [
                        {
                            "artifact_id": "3495961679cda89524713532ea815c6b",
                            "artifact_name": "TaintEngine_pii-to-rest-return_routes/gin.go#36/25_->routes/gin.go#36/25_31230cc8f11f1c22d08f478d991db0b7",
                            "code_ref": {
                                "file_path": "routes/gin.go",
                                "start": {
                                    "line": 36,
                                    "offset": 25
                                },
                                "end": {
                                    "line": 36,
                                    "offset": 45
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t}\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\tc.String(http.StatusOK, user.Name+\" added\\n\")\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "pii-to-rest-return",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/gin.go#L37-L37",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/gin.go#L37-L37",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/gin.go#L37-L37",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "31230cc8f11f1c22d08f478d991db0b7"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "pii-to-rest-return",
                                "flow_type": "pii-to-rest-return",
                                "source": {
                                    "location": {
                                        "file_path": "routes/gin.go",
                                        "start": {
                                            "line": 36,
                                            "offset": 25
                                        },
                                        "end": {
                                            "line": 36,
                                            "offset": 34
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\tc.String(http.StatusOK, user.Name+\" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/gin.go",
                                        "start": {
                                            "line": 36,
                                            "offset": 25
                                        },
                                        "end": {
                                            "line": 36,
                                            "offset": 45
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\tc.String(http.StatusOK, user.Name+\" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 5,
                                    "metadata": {
                                        "method_name": "...+...",
                                        "message": "...+..."
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/gin.go",
                                                "start": {
                                                    "line": 36,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 36,
                                                    "offset": 34
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tc.String(http.StatusOK, user.Name+\" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/gin.go#L37-L37"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/gin.go",
                                                "start": {
                                                    "line": 36,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 36,
                                                    "offset": 45
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tc.String(http.StatusOK, user.Name+\" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/gin.go#L37-L37"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "f7606a2429b2173f24176d53134197a6",
                            "artifact_name": "TaintEngine_pii-to-rest-return_routes/net_http.go#55/16_->routes/net_http.go#55/9_31230cc8f11f1c22d08f478d991db0b7",
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 55,
                                    "offset": 9
                                },
                                "end": {
                                    "line": 55,
                                    "offset": 39
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tauditor.Audit()\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "pii-to-rest-return",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "31230cc8f11f1c22d08f478d991db0b7"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "pii-to-rest-return",
                                "flow_type": "pii-to-rest-return",
                                "source": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 55,
                                            "offset": 16
                                        },
                                        "end": {
                                            "line": 55,
                                            "offset": 25
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tauditor.Audit()\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 55,
                                            "offset": 9
                                        },
                                        "end": {
                                            "line": 55,
                                            "offset": 39
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tauditor.Audit()\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 5,
                                    "metadata": {
                                        "method_name": "type conversion",
                                        "message": "type conversion"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 25
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 38
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 39
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "029af772b8cb11434981730f711da4ca",
                            "artifact_name": "TaintEngine_pii-to-rest-return_routes/echo.go#32/30_->routes/echo.go#32/30_31230cc8f11f1c22d08f478d991db0b7",
                            "code_ref": {
                                "file_path": "routes/echo.go",
                                "start": {
                                    "line": 32,
                                    "offset": 30
                                },
                                "end": {
                                    "line": 32,
                                    "offset": 50
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t}\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "pii-to-rest-return",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "31230cc8f11f1c22d08f478d991db0b7"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "pii-to-rest-return",
                                "flow_type": "pii-to-rest-return",
                                "source": {
                                    "location": {
                                        "file_path": "routes/echo.go",
                                        "start": {
                                            "line": 32,
                                            "offset": 30
                                        },
                                        "end": {
                                            "line": 32,
                                            "offset": 39
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/echo.go",
                                        "start": {
                                            "line": 32,
                                            "offset": 30
                                        },
                                        "end": {
                                            "line": 32,
                                            "offset": 50
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 5,
                                    "metadata": {
                                        "method_name": "...+...",
                                        "message": "...+..."
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 39
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 50
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "f5fac7ec6b39243c0f443b8fce7f1d66",
                            "artifact_name": "TaintEngine_pii-to-rest-return_routes/fiber.go#31/21_->routes/fiber.go#31/21_31230cc8f11f1c22d08f478d991db0b7",
                            "code_ref": {
                                "file_path": "routes/fiber.go",
                                "start": {
                                    "line": 31,
                                    "offset": 21
                                },
                                "end": {
                                    "line": 31,
                                    "offset": 43
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t}\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "pii-to-rest-return",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "31230cc8f11f1c22d08f478d991db0b7"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "pii-to-rest-return",
                                "flow_type": "pii-to-rest-return",
                                "source": {
                                    "location": {
                                        "file_path": "routes/fiber.go",
                                        "start": {
                                            "line": 31,
                                            "offset": 21
                                        },
                                        "end": {
                                            "line": 31,
                                            "offset": 30
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/fiber.go",
                                        "start": {
                                            "line": 31,
                                            "offset": 21
                                        },
                                        "end": {
                                            "line": 31,
                                            "offset": 43
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 5,
                                    "metadata": {
                                        "method_name": "...+...",
                                        "message": "...+..."
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 31,
                                                    "offset": 21
                                                },
                                                "end": {
                                                    "line": 31,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 31,
                                                    "offset": 21
                                                },
                                                "end": {
                                                    "line": 31,
                                                    "offset": 43
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "6db8db07b2c88932366a864194b2aba1",
                            "artifact_name": "TaintEngine_pii-to-rest-return_routes/iris.go#32/15_->routes/iris.go#32/15_31230cc8f11f1c22d08f478d991db0b7",
                            "code_ref": {
                                "file_path": "routes/iris.go",
                                "start": {
                                    "line": 32,
                                    "offset": 15
                                },
                                "end": {
                                    "line": 32,
                                    "offset": 37
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t}\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\tc.WriteString(user.Name + \" added\\n\")\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "pii-to-rest-return",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "31230cc8f11f1c22d08f478d991db0b7"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "pii-to-rest-return",
                                "flow_type": "pii-to-rest-return",
                                "source": {
                                    "location": {
                                        "file_path": "routes/iris.go",
                                        "start": {
                                            "line": 32,
                                            "offset": 15
                                        },
                                        "end": {
                                            "line": 32,
                                            "offset": 24
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\tc.WriteString(user.Name + \" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/iris.go",
                                        "start": {
                                            "line": 32,
                                            "offset": 15
                                        },
                                        "end": {
                                            "line": 32,
                                            "offset": 37
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\tc.WriteString(user.Name + \" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 5,
                                    "metadata": {
                                        "method_name": "...+...",
                                        "message": "...+..."
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 15
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 24
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tc.WriteString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 15
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tc.WriteString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "jdbc-to-member": [
                        {
                            "artifact_id": "42cfe1a66c567c41eb962464dd3c2824",
                            "artifact_name": "TaintEngine_jdbc-to-member_model/user.go#76/1_->model/user.go#13/1_31230cc8f11f1c22d08f478d991db0b7",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 13,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 13,
                                    "offset": 5
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "type User struct {\n",
                                        "\tID       int     `json:\"id\"`\n"
                                    ],
                                    "lines": [
                                        "\tName     string  `json:\"name\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tEmail    string  `json:\"email\"`\n",
                                        "\tPassword string  `json:\"password\"`\n",
                                        "\tProfile  Profile `json:\"profile\"`\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "jdbc-to-member",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "31230cc8f11f1c22d08f478d991db0b7"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "jdbc-to-member",
                                "flow_type": "jdbc-to-member",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 76,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 76,
                                            "offset": 27
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                            ],
                                            "lines": [
                                                "\trows, err := db.Query(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t\treturn User{}, err\n"
                                            ]
                                        }
                                    },
                                    "type": 8,
                                    "metadata": {}
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 13,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 13,
                                            "offset": 5
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines": [
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name",
                                        "message": "model/user.go,User,Name"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 76,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 76,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                        "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                                    ],
                                                    "lines": [
                                                        "\trows, err := db.Query(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t\treturn User{}, err\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 13
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 24
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 97,
                                                    "offset": 14
                                                },
                                                "end": {
                                                    "line": 97,
                                                    "offset": 18
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser := User{\n",
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name = name\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email = email\n",
                                                        "\t\tuser.Password = password\n",
                                                        "\t\tuser.Profile.Position = position\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L98-L98"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 94,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 94,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser := User{\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n",
                                                        "\t\tuser.Name = name\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L95-L95"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 97,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 97,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser := User{\n",
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name = name\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email = email\n",
                                                        "\t\tuser.Password = password\n",
                                                        "\t\tuser.Profile.Position = position\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L98-L98"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "jdbc-member-log": [
                        {
                            "artifact_id": "c989fcf6250000ebadcd3f6cc083dd91",
                            "artifact_name": "TaintEngine_jdbc-member-log_model/user.go#76/1_->model/user.go#103/29_31230cc8f11f1c22d08f478d991db0b7",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 103,
                                    "offset": 29
                                },
                                "end": {
                                    "line": 103,
                                    "offset": 38
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position = position\n",
                                        "\t\tuser.Profile.Phone = phone\n",
                                        "\n"
                                    ],
                                    "lines": [
                                        "\t\tlog.Println(\"read name: \", user.Name)\n"
                                    ],
                                    "lines_after": [
                                        "\t\tlog.Println(\"read email: \", user.Email)\n",
                                        "\n",
                                        "\t\treturn user, nil\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "jdbc-member-log",
                                    "persistent": true,
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L104-L104",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L104-L104",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "31230cc8f11f1c22d08f478d991db0b7"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "jdbc-member-log",
                                "flow_type": "jdbc-member-log",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 76,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 76,
                                            "offset": 27
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                            ],
                                            "lines": [
                                                "\trows, err := db.Query(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t\treturn User{}, err\n"
                                            ]
                                        }
                                    },
                                    "type": 8,
                                    "metadata": {}
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 103,
                                            "offset": 29
                                        },
                                        "end": {
                                            "line": 103,
                                            "offset": 38
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position = position\n",
                                                "\t\tuser.Profile.Phone = phone\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "\t\tlog.Println(\"read name: \", user.Name)\n"
                                            ],
                                            "lines_after": [
                                                "\t\tlog.Println(\"read email: \", user.Email)\n",
                                                "\n",
                                                "\t\treturn user, nil\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 103,
                                                "offset": 29
                                            },
                                            "end": {
                                                "line": 103,
                                                "offset": 38
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position = position\n",
                                                    "\t\tuser.Profile.Phone = phone\n",
                                                    "\n"
                                                ],
                                                "lines": [
                                                    "\t\tlog.Println(\"read name: \", user.Name)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\tlog.Println(\"read email: \", user.Email)\n",
                                                    "\n",
                                                    "\t\treturn user, nil\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 103,
                                                "offset": 29
                                            },
                                            "end": {
                                                "line": 103,
                                                "offset": 38
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 76,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 76,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                        "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                                    ],
                                                    "lines": [
                                                        "\trows, err := db.Query(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t\treturn User{}, err\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 13
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 24
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 97,
                                                    "offset": 14
                                                },
                                                "end": {
                                                    "line": 97,
                                                    "offset": 18
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser := User{\n",
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name = name\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email = email\n",
                                                        "\t\tuser.Password = password\n",
                                                        "\t\tuser.Profile.Position = position\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L98-L98"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 94,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 94,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser := User{\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n",
                                                        "\t\tuser.Name = name\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L95-L95"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 103,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 103,
                                                    "offset": 38
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position = position\n",
                                                        "\t\tuser.Profile.Phone = phone\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tlog.Println(\"read name: \", user.Name)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tlog.Println(\"read email: \", user.Email)\n",
                                                        "\n",
                                                        "\t\treturn user, nil\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L104-L104"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "Email": {
                    "sensitive-info-to-log": [
                        {
                            "artifact_id": "17dac8e9565043ca726551f7848f7121",
                            "artifact_name": "TaintEngine_sensitive-info-to-log_model/user.go#14/1_->model/user.go#104/30_7105cc7e48e2b7fd76bc31fc21ac046c",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 104,
                                    "offset": 30
                                },
                                "end": {
                                    "line": 104,
                                    "offset": 40
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone = phone\n",
                                        "\n",
                                        "\t\tlog.Println(\"read name: \", user.Name)\n"
                                    ],
                                    "lines": [
                                        "\t\tlog.Println(\"read email: \", user.Email)\n"
                                    ],
                                    "lines_after": [
                                        "\n",
                                        "\t\treturn user, nil\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 1.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L105-L105",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L15-L15",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L105-L105",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "7105cc7e48e2b7fd76bc31fc21ac046c"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Email",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-log",
                                "flow_type": "sensitive-info-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 14,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 14,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines": [
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Email"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 104,
                                            "offset": 30
                                        },
                                        "end": {
                                            "line": 104,
                                            "offset": 40
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone = phone\n",
                                                "\n",
                                                "\t\tlog.Println(\"read name: \", user.Name)\n"
                                            ],
                                            "lines": [
                                                "\t\tlog.Println(\"read email: \", user.Email)\n"
                                            ],
                                            "lines_after": [
                                                "\n",
                                                "\t\treturn user, nil\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 104,
                                                "offset": 30
                                            },
                                            "end": {
                                                "line": 104,
                                                "offset": 40
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone = phone\n",
                                                    "\n",
                                                    "\t\tlog.Println(\"read name: \", user.Name)\n"
                                                ],
                                                "lines": [
                                                    "\t\tlog.Println(\"read email: \", user.Email)\n"
                                                ],
                                                "lines_after": [
                                                    "\n",
                                                    "\t\treturn user, nil\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 104,
                                                "offset": 30
                                            },
                                            "end": {
                                                "line": 104,
                                                "offset": 40
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": []
                            }
                        },
                        {
                            "artifact_id": "2967f3d1ae79f91f1be073b8f659abe3",
                            "artifact_name": "TaintEngine_sensitive-info-to-log_model/user.go#14/1_->model/user.go#144/13_7105cc7e48e2b7fd76bc31fc21ac046c",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 144,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 144,
                                    "offset": 16
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position,\n",
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n"
                                    ],
                                    "lines": [
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\t_, err := db.Exec(sql)\n",
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 1.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L15-L15",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "7105cc7e48e2b7fd76bc31fc21ac046c"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Email",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-log",
                                "flow_type": "sensitive-info-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 14,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 14,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines": [
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Email"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 144,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 144,
                                            "offset": 16
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position,\n",
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n"
                                            ],
                                            "lines": [
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\t_, err := db.Exec(sql)\n",
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position,\n",
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n"
                                                ],
                                                "lines": [
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\t_, err := db.Exec(sql)\n",
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 139,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 139,
                                                    "offset": 12
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Email,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L140-L140"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 144,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 144,
                                                    "offset": 16
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines": [
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "7a796f79708a33e2fa54b1c0fc83dbd0",
                            "artifact_name": "TaintEngine_sensitive-info-to-log_model/user.go#14/1_->audit/logger.go#9/23_7105cc7e48e2b7fd76bc31fc21ac046c",
                            "code_ref": {
                                "file_path": "audit/logger.go",
                                "start": {
                                    "line": 9,
                                    "offset": 23
                                },
                                "end": {
                                    "line": 9,
                                    "offset": 24
                                },
                                "snippet": {
                                    "lines_before": [
                                        "type Logger struct{}\n",
                                        "\n",
                                        "func (l Logger) info(v ...any) {\n"
                                    ],
                                    "lines": [
                                        "\tlog.Default().Println(v...)\n"
                                    ],
                                    "lines_after": [
                                        "}\n",
                                        "\n",
                                        "func (l Logger) error(v ...any) {\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 1.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L15-L15",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "7105cc7e48e2b7fd76bc31fc21ac046c"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Email",
                                "function_artifact": "",
                                "package": "audit",
                                "ruleId": "sensitive-info-to-log",
                                "flow_type": "sensitive-info-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 14,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 14,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines": [
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Email"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "audit/logger.go",
                                        "start": {
                                            "line": 9,
                                            "offset": 23
                                        },
                                        "end": {
                                            "line": 9,
                                            "offset": 24
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "type Logger struct{}\n",
                                                "\n",
                                                "func (l Logger) info(v ...any) {\n"
                                            ],
                                            "lines": [
                                                "\tlog.Default().Println(v...)\n"
                                            ],
                                            "lines_after": [
                                                "}\n",
                                                "\n",
                                                "func (l Logger) error(v ...any) {\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "audit/logger.go",
                                            "start": {
                                                "line": 9,
                                                "offset": 23
                                            },
                                            "end": {
                                                "line": 9,
                                                "offset": 24
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "type Logger struct{}\n",
                                                    "\n",
                                                    "func (l Logger) info(v ...any) {\n"
                                                ],
                                                "lines": [
                                                    "\tlog.Default().Println(v...)\n"
                                                ],
                                                "lines_after": [
                                                    "}\n",
                                                    "\n",
                                                    "func (l Logger) error(v ...any) {\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "audit/logger.go",
                                            "start": {
                                                "line": 9,
                                                "offset": 23
                                            },
                                            "end": {
                                                "line": 9,
                                                "offset": 24
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 49,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 49,
                                                    "offset": 23
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tauditor := audit.Auditor{\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserEmail: user.Email,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n",
                                                        "\tauditor.Audit()\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L50-L50"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 48,
                                                    "offset": 12
                                                },
                                                "end": {
                                                    "line": 51,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tauditor := audit.Auditor{\n",
                                                        "\t\tUserEmail: user.Email,\n",
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L49-L52"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 48,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 48,
                                                    "offset": 8
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tauditor := audit.Auditor{\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tUserEmail: user.Email,\n",
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L49-L49"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 52,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 52,
                                                    "offset": 8
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tUserEmail: user.Email,\n",
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n"
                                                    ],
                                                    "lines": [
                                                        "\tauditor.Audit()\n"
                                                    ],
                                                    "lines_after": [
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n",
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L53-L53"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/auditor.go",
                                                "start": {
                                                    "line": 12,
                                                    "offset": 6
                                                },
                                                "end": {
                                                    "line": 12,
                                                    "offset": 7
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tlogger    Logger\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (a Auditor) Audit() {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\ta.logger.info(\"Auditor added %v\", a)\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/auditor.go#L13-L13"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/auditor.go",
                                                "start": {
                                                    "line": 13,
                                                    "offset": 35
                                                },
                                                "end": {
                                                    "line": 13,
                                                    "offset": 36
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (a Auditor) Audit() {\n"
                                                    ],
                                                    "lines": [
                                                        "\ta.logger.info(\"Auditor added %v\", a)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/auditor.go#L14-L14"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/auditor.go",
                                                "start": {
                                                    "line": 13,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 13,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (a Auditor) Audit() {\n"
                                                    ],
                                                    "lines": [
                                                        "\ta.logger.info(\"Auditor added %v\", a)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/auditor.go#L14-L14"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/logger.go",
                                                "start": {
                                                    "line": 8,
                                                    "offset": 21
                                                },
                                                "end": {
                                                    "line": 8,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "type Logger struct{}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (l Logger) info(v ...any) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tlog.Default().Println(v...)\n",
                                                        "}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L9-L9"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/logger.go",
                                                "start": {
                                                    "line": 9,
                                                    "offset": 23
                                                },
                                                "end": {
                                                    "line": 9,
                                                    "offset": 24
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "type Logger struct{}\n",
                                                        "\n",
                                                        "func (l Logger) info(v ...any) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tlog.Default().Println(v...)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n",
                                                        "\n",
                                                        "func (l Logger) error(v ...any) {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/logger.go",
                                                "start": {
                                                    "line": 9,
                                                    "offset": 23
                                                },
                                                "end": {
                                                    "line": 9,
                                                    "offset": 24
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "type Logger struct{}\n",
                                                        "\n",
                                                        "func (l Logger) info(v ...any) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tlog.Default().Println(v...)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n",
                                                        "\n",
                                                        "func (l Logger) error(v ...any) {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "sensitive-info-to-external-functions": [
                        {
                            "artifact_id": "6be3fba2d28cedf96908a7480fe74121",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#14/1_->model/user.go#125/9_7105cc7e48e2b7fd76bc31fc21ac046c",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 125,
                                    "offset": 9
                                },
                                "end": {
                                    "line": 125,
                                    "offset": 104
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tfor rows.Next() {\n",
                                        "\t\tvar user User\n",
                                        "\t\tvar profile Profile\n"
                                    ],
                                    "lines": [
                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                    ],
                                    "lines_after": [
                                        "\t\tif err != nil {\n",
                                        "\t\t\tlog.Println(err)\n",
                                        "\t\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L15-L15",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "7105cc7e48e2b7fd76bc31fc21ac046c"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Email",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 14,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 14,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines": [
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Email"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 125,
                                            "offset": 9
                                        },
                                        "end": {
                                            "line": 125,
                                            "offset": 104
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tfor rows.Next() {\n",
                                                "\t\tvar user User\n",
                                                "\t\tvar profile Profile\n"
                                            ],
                                            "lines": [
                                                "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                            ],
                                            "lines_after": [
                                                "\t\tif err != nil {\n",
                                                "\t\t\tlog.Println(err)\n",
                                                "\t\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\tfor rows.Next() {\n",
                                                    "\t\tvar user User\n",
                                                    "\t\tvar profile Profile\n"
                                                ],
                                                "lines": [
                                                    "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\tif err != nil {\n",
                                                    "\t\t\tlog.Println(err)\n",
                                                    "\t\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": null
                                        },
                                        "message": "\\[\\]type{{args}}"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 42
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 52
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 41
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 52
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "8606866d8e3c9430fdacc02ef2fe10e0",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#14/1_->model/user.go#145/19_7105cc7e48e2b7fd76bc31fc21ac046c",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 145,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 145,
                                    "offset": 22
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n",
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines": [
                                        "\t_, err := db.Exec(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L15-L15",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "7105cc7e48e2b7fd76bc31fc21ac046c"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Email",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 14,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 14,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines": [
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Email"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 145,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 145,
                                            "offset": 22
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n",
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines": [
                                                "\t_, err := db.Exec(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n",
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines": [
                                                    "\t_, err := db.Exec(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": null
                                        },
                                        "message": "sql"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 139,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 139,
                                                    "offset": 12
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Email,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L140-L140"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 145,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 145,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines": [
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "jdbc-to-member": [
                        {
                            "artifact_id": "ae58cf1303bb05f4e57f09f7d3f590ce",
                            "artifact_name": "TaintEngine_jdbc-to-member_model/user.go#76/1_->model/user.go#14/1_7105cc7e48e2b7fd76bc31fc21ac046c",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 14,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 14,
                                    "offset": 6
                                },
                                "snippet": {
                                    "lines_before": [
                                        "type User struct {\n",
                                        "\tID       int     `json:\"id\"`\n",
                                        "\tName     string  `json:\"name\"`\n"
                                    ],
                                    "lines": [
                                        "\tEmail    string  `json:\"email\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tPassword string  `json:\"password\"`\n",
                                        "\tProfile  Profile `json:\"profile\"`\n",
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "jdbc-to-member",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L15-L15",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L15-L15",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "7105cc7e48e2b7fd76bc31fc21ac046c"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Email",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "jdbc-to-member",
                                "flow_type": "jdbc-to-member",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 76,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 76,
                                            "offset": 27
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                            ],
                                            "lines": [
                                                "\trows, err := db.Query(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t\treturn User{}, err\n"
                                            ]
                                        }
                                    },
                                    "type": 8,
                                    "metadata": {}
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 14,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 14,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines": [
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Email",
                                        "message": "model/user.go,User,Email"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 76,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 76,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                        "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                                    ],
                                                    "lines": [
                                                        "\trows, err := db.Query(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t\treturn User{}, err\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 13
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 31
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 98,
                                                    "offset": 15
                                                },
                                                "end": {
                                                    "line": 98,
                                                    "offset": 20
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n",
                                                        "\t\tuser.Name = name\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Email = email\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Password = password\n",
                                                        "\t\tuser.Profile.Position = position\n",
                                                        "\t\tuser.Profile.Phone = phone\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L99-L99"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 94,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 94,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser := User{\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n",
                                                        "\t\tuser.Name = name\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L95-L95"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 97,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 97,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser := User{\n",
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name = name\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email = email\n",
                                                        "\t\tuser.Password = password\n",
                                                        "\t\tuser.Profile.Position = position\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L98-L98"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "jdbc-member-log": [
                        {
                            "artifact_id": "949ca4c1ace85f9b9ef9fc71414246b7",
                            "artifact_name": "TaintEngine_jdbc-member-log_model/user.go#76/1_->model/user.go#104/30_7105cc7e48e2b7fd76bc31fc21ac046c",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 104,
                                    "offset": 30
                                },
                                "end": {
                                    "line": 104,
                                    "offset": 40
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone = phone\n",
                                        "\n",
                                        "\t\tlog.Println(\"read name: \", user.Name)\n"
                                    ],
                                    "lines": [
                                        "\t\tlog.Println(\"read email: \", user.Email)\n"
                                    ],
                                    "lines_after": [
                                        "\n",
                                        "\t\treturn user, nil\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "jdbc-member-log",
                                    "persistent": true,
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L105-L105",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L105-L105",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "7105cc7e48e2b7fd76bc31fc21ac046c"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Email",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "jdbc-member-log",
                                "flow_type": "jdbc-member-log",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 76,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 76,
                                            "offset": 27
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                            ],
                                            "lines": [
                                                "\trows, err := db.Query(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t\treturn User{}, err\n"
                                            ]
                                        }
                                    },
                                    "type": 8,
                                    "metadata": {}
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 104,
                                            "offset": 30
                                        },
                                        "end": {
                                            "line": 104,
                                            "offset": 40
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone = phone\n",
                                                "\n",
                                                "\t\tlog.Println(\"read name: \", user.Name)\n"
                                            ],
                                            "lines": [
                                                "\t\tlog.Println(\"read email: \", user.Email)\n"
                                            ],
                                            "lines_after": [
                                                "\n",
                                                "\t\treturn user, nil\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 104,
                                                "offset": 30
                                            },
                                            "end": {
                                                "line": 104,
                                                "offset": 40
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone = phone\n",
                                                    "\n",
                                                    "\t\tlog.Println(\"read name: \", user.Name)\n"
                                                ],
                                                "lines": [
                                                    "\t\tlog.Println(\"read email: \", user.Email)\n"
                                                ],
                                                "lines_after": [
                                                    "\n",
                                                    "\t\treturn user, nil\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 104,
                                                "offset": 30
                                            },
                                            "end": {
                                                "line": 104,
                                                "offset": 40
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 76,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 76,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                        "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                                    ],
                                                    "lines": [
                                                        "\trows, err := db.Query(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t\treturn User{}, err\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 13
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 31
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 98,
                                                    "offset": 15
                                                },
                                                "end": {
                                                    "line": 98,
                                                    "offset": 20
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n",
                                                        "\t\tuser.Name = name\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Email = email\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Password = password\n",
                                                        "\t\tuser.Profile.Position = position\n",
                                                        "\t\tuser.Profile.Phone = phone\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L99-L99"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 94,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 94,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser := User{\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n",
                                                        "\t\tuser.Name = name\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L95-L95"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 104,
                                                    "offset": 30
                                                },
                                                "end": {
                                                    "line": 104,
                                                    "offset": 40
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone = phone\n",
                                                        "\n",
                                                        "\t\tlog.Println(\"read name: \", user.Name)\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tlog.Println(\"read email: \", user.Email)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\n",
                                                        "\t\treturn user, nil\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L105-L105"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "Digital": {
                    "sensitive-info-to-external-functions": [
                        {
                            "artifact_id": "b38494155cf79f01e026e9954ff39309",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#12/1_->model/user.go#125/9_2bd4c0638cee823ca9bbc291ccb76910",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 125,
                                    "offset": 9
                                },
                                "end": {
                                    "line": 125,
                                    "offset": 104
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tfor rows.Next() {\n",
                                        "\t\tvar user User\n",
                                        "\t\tvar profile Profile\n"
                                    ],
                                    "lines": [
                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                    ],
                                    "lines_after": [
                                        "\t\tif err != nil {\n",
                                        "\t\t\tlog.Println(err)\n",
                                        "\t\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 1.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L13-L13",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "2bd4c0638cee823ca9bbc291ccb76910"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Digital",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 12,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 12,
                                            "offset": 3
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "}\n",
                                                "\n",
                                                "type User struct {\n"
                                            ],
                                            "lines": [
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tName     string  `json:\"name\"`\n",
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "ID"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 125,
                                            "offset": 9
                                        },
                                        "end": {
                                            "line": 125,
                                            "offset": 104
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tfor rows.Next() {\n",
                                                "\t\tvar user User\n",
                                                "\t\tvar profile Profile\n"
                                            ],
                                            "lines": [
                                                "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                            ],
                                            "lines_after": [
                                                "\t\tif err != nil {\n",
                                                "\t\t\tlog.Println(err)\n",
                                                "\t\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\tfor rows.Next() {\n",
                                                    "\t\tvar user User\n",
                                                    "\t\tvar profile Profile\n"
                                                ],
                                                "lines": [
                                                    "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\tif err != nil {\n",
                                                    "\t\t\tlog.Println(err)\n",
                                                    "\t\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": null
                                        },
                                        "message": "\\[\\]type{{args}}"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 20
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "jdbc-to-member": [
                        {
                            "artifact_id": "c781c4876db6419c5c5b59ff27d6cce9",
                            "artifact_name": "TaintEngine_jdbc-to-member_model/user.go#76/1_->model/user.go#12/1_2bd4c0638cee823ca9bbc291ccb76910",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 12,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 12,
                                    "offset": 3
                                },
                                "snippet": {
                                    "lines_before": [
                                        "}\n",
                                        "\n",
                                        "type User struct {\n"
                                    ],
                                    "lines": [
                                        "\tID       int     `json:\"id\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tName     string  `json:\"name\"`\n",
                                        "\tEmail    string  `json:\"email\"`\n",
                                        "\tPassword string  `json:\"password\"`\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 1.0,
                                "values": {
                                    "flow_type": "jdbc-to-member",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L13-L13",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L13-L13",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "2bd4c0638cee823ca9bbc291ccb76910"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Digital",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "jdbc-to-member",
                                "flow_type": "jdbc-to-member",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 76,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 76,
                                            "offset": 27
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                            ],
                                            "lines": [
                                                "\trows, err := db.Query(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t\treturn User{}, err\n"
                                            ]
                                        }
                                    },
                                    "type": 8,
                                    "metadata": {}
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 12,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 12,
                                            "offset": 3
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "}\n",
                                                "\n",
                                                "type User struct {\n"
                                            ],
                                            "lines": [
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tName     string  `json:\"name\"`\n",
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "ID",
                                        "message": "model/user.go,User,ID"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 76,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 76,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                        "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                                    ],
                                                    "lines": [
                                                        "\trows, err := db.Query(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t\treturn User{}, err\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 13
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 95,
                                                    "offset": 7
                                                },
                                                "end": {
                                                    "line": 95,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t}\n",
                                                        "\n",
                                                        "\t\tuser := User{\n"
                                                    ],
                                                    "lines": [
                                                        "\t\t\tID: id,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\t}\n",
                                                        "\t\tuser.Name = name\n",
                                                        "\t\tuser.Email = email\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L96-L96"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 94,
                                                    "offset": 10
                                                },
                                                "end": {
                                                    "line": 96,
                                                    "offset": 3
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser := User{\n",
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name = name\n",
                                                        "\t\tuser.Email = email\n",
                                                        "\t\tuser.Password = password\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L95-L97"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "Phone": {
                    "sensitive-info-to-log": [
                        {
                            "artifact_id": "0fe52ca7dfba76438e21f6a7a9dc2921",
                            "artifact_name": "TaintEngine_sensitive-info-to-log_model/user.go#21/1_->model/user.go#144/13_da747c38837c86ac0862c8fe2da096c9",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 144,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 144,
                                    "offset": 16
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position,\n",
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n"
                                    ],
                                    "lines": [
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\t_, err := db.Exec(sql)\n",
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "sensitive-info-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L22-L22",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "da747c38837c86ac0862c8fe2da096c9"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Phone",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-log",
                                "flow_type": "sensitive-info-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 21,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 21,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type Profile struct {\n",
                                                "\tPosition string `json:\"position\"`\n"
                                            ],
                                            "lines": [
                                                "\tPhone    string `json:\"phone\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tAddress  Addr   `json:\"address\"`\n",
                                                "}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "Profile",
                                        "variable_name": "Phone"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 144,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 144,
                                            "offset": 16
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position,\n",
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n"
                                            ],
                                            "lines": [
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\t_, err := db.Exec(sql)\n",
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position,\n",
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n"
                                                ],
                                                "lines": [
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\t_, err := db.Exec(sql)\n",
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 142,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 142,
                                                    "offset": 20
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Profile.Phone,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L143-L143"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 144,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 144,
                                                    "offset": 16
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines": [
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "sensitive-info-to-external-functions": [
                        {
                            "artifact_id": "a9244eccbfae564f6536a6f234ed34b4",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#21/1_->model/user.go#125/9_da747c38837c86ac0862c8fe2da096c9",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 125,
                                    "offset": 9
                                },
                                "end": {
                                    "line": 125,
                                    "offset": 104
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tfor rows.Next() {\n",
                                        "\t\tvar user User\n",
                                        "\t\tvar profile Profile\n"
                                    ],
                                    "lines": [
                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                    ],
                                    "lines_after": [
                                        "\t\tif err != nil {\n",
                                        "\t\t\tlog.Println(err)\n",
                                        "\t\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L22-L22",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "da747c38837c86ac0862c8fe2da096c9"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Phone",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 21,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 21,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type Profile struct {\n",
                                                "\tPosition string `json:\"position\"`\n"
                                            ],
                                            "lines": [
                                                "\tPhone    string `json:\"phone\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tAddress  Addr   `json:\"address\"`\n",
                                                "}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "Profile",
                                        "variable_name": "Phone"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 125,
                                            "offset": 9
                                        },
                                        "end": {
                                            "line": 125,
                                            "offset": 104
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tfor rows.Next() {\n",
                                                "\t\tvar user User\n",
                                                "\t\tvar profile Profile\n"
                                            ],
                                            "lines": [
                                                "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                            ],
                                            "lines_after": [
                                                "\t\tif err != nil {\n",
                                                "\t\t\tlog.Println(err)\n",
                                                "\t\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\tfor rows.Next() {\n",
                                                    "\t\tvar user User\n",
                                                    "\t\tvar profile Profile\n"
                                                ],
                                                "lines": [
                                                    "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\tif err != nil {\n",
                                                    "\t\t\tlog.Println(err)\n",
                                                    "\t\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": null
                                        },
                                        "message": "\\[\\]type{{args}}"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 90
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 103
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 89
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 103
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "f11b1f9fa38a6b99e1a22440a56af20e",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#21/1_->model/user.go#145/19_da747c38837c86ac0862c8fe2da096c9",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 145,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 145,
                                    "offset": 22
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n",
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines": [
                                        "\t_, err := db.Exec(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L22-L22",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "da747c38837c86ac0862c8fe2da096c9"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Phone",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 21,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 21,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type Profile struct {\n",
                                                "\tPosition string `json:\"position\"`\n"
                                            ],
                                            "lines": [
                                                "\tPhone    string `json:\"phone\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tAddress  Addr   `json:\"address\"`\n",
                                                "}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "Profile",
                                        "variable_name": "Phone"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 145,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 145,
                                            "offset": 22
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n",
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines": [
                                                "\t_, err := db.Exec(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n",
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines": [
                                                    "\t_, err := db.Exec(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": null
                                        },
                                        "message": "sql"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 142,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 142,
                                                    "offset": 20
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Profile.Phone,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L143-L143"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 145,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 145,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines": [
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "jdbc-to-member": [
                        {
                            "artifact_id": "d2213313ad617ce0085da2cf3419bd7a",
                            "artifact_name": "TaintEngine_jdbc-to-member_model/user.go#76/1_->model/user.go#21/1_da747c38837c86ac0862c8fe2da096c9",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 21,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 21,
                                    "offset": 6
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "type Profile struct {\n",
                                        "\tPosition string `json:\"position\"`\n"
                                    ],
                                    "lines": [
                                        "\tPhone    string `json:\"phone\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tAddress  Addr   `json:\"address\"`\n",
                                        "}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "jdbc-to-member",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L22-L22",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L22-L22",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "da747c38837c86ac0862c8fe2da096c9"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Phone",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "jdbc-to-member",
                                "flow_type": "jdbc-to-member",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 76,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 76,
                                            "offset": 27
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                            ],
                                            "lines": [
                                                "\trows, err := db.Query(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t\treturn User{}, err\n"
                                            ]
                                        }
                                    },
                                    "type": 8,
                                    "metadata": {}
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 21,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 21,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type Profile struct {\n",
                                                "\tPosition string `json:\"position\"`\n"
                                            ],
                                            "lines": [
                                                "\tPhone    string `json:\"phone\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tAddress  Addr   `json:\"address\"`\n",
                                                "}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "Profile",
                                        "variable_name": "Phone",
                                        "message": "model/user.go,Profile,Phone"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 76,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 76,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                        "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                                    ],
                                                    "lines": [
                                                        "\trows, err := db.Query(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t\treturn User{}, err\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 13
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 61
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 67
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 101,
                                                    "offset": 23
                                                },
                                                "end": {
                                                    "line": 101,
                                                    "offset": 28
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Email = email\n",
                                                        "\t\tuser.Password = password\n",
                                                        "\t\tuser.Profile.Position = position\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Profile.Phone = phone\n"
                                                    ],
                                                    "lines_after": [
                                                        "\n",
                                                        "\t\tlog.Println(\"read name: \", user.Name)\n",
                                                        "\t\tlog.Println(\"read email: \", user.Email)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L102-L102"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 101,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 101,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Email = email\n",
                                                        "\t\tuser.Password = password\n",
                                                        "\t\tuser.Profile.Position = position\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Profile.Phone = phone\n"
                                                    ],
                                                    "lines_after": [
                                                        "\n",
                                                        "\t\tlog.Println(\"read name: \", user.Name)\n",
                                                        "\t\tlog.Println(\"read email: \", user.Email)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L102-L102"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "Credentials": {
                    "sensitive-info-to-external-functions": [
                        {
                            "artifact_id": "be5be2e55f45d0a8754c22d0dd030148",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#15/1_->model/user.go#125/9_b18d65fab4baabc2dab839d7e489c1f2",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 125,
                                    "offset": 9
                                },
                                "end": {
                                    "line": 125,
                                    "offset": 104
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tfor rows.Next() {\n",
                                        "\t\tvar user User\n",
                                        "\t\tvar profile Profile\n"
                                    ],
                                    "lines": [
                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                    ],
                                    "lines_after": [
                                        "\t\tif err != nil {\n",
                                        "\t\t\tlog.Println(err)\n",
                                        "\t\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L16-L16",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "b18d65fab4baabc2dab839d7e489c1f2"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 15,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 15,
                                            "offset": 9
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n",
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines": [
                                                "\tPassword string  `json:\"password\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Password"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 125,
                                            "offset": 9
                                        },
                                        "end": {
                                            "line": 125,
                                            "offset": 104
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tfor rows.Next() {\n",
                                                "\t\tvar user User\n",
                                                "\t\tvar profile Profile\n"
                                            ],
                                            "lines": [
                                                "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                            ],
                                            "lines_after": [
                                                "\t\tif err != nil {\n",
                                                "\t\t\tlog.Println(err)\n",
                                                "\t\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\tfor rows.Next() {\n",
                                                    "\t\tvar user User\n",
                                                    "\t\tvar profile Profile\n"
                                                ],
                                                "lines": [
                                                    "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\tif err != nil {\n",
                                                    "\t\t\tlog.Println(err)\n",
                                                    "\t\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": null
                                        },
                                        "message": "\\[\\]type{{args}}"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 55
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 68
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 54
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 68
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "e2dd07d606058c81ec6c4481d5157c22",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#15/1_->model/user.go#145/19_b18d65fab4baabc2dab839d7e489c1f2",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 145,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 145,
                                    "offset": 22
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n",
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines": [
                                        "\t_, err := db.Exec(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L16-L16",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "b18d65fab4baabc2dab839d7e489c1f2"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 15,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 15,
                                            "offset": 9
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n",
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines": [
                                                "\tPassword string  `json:\"password\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Password"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 145,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 145,
                                            "offset": 22
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n",
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines": [
                                                "\t_, err := db.Exec(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n",
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines": [
                                                    "\t_, err := db.Exec(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": null
                                        },
                                        "message": "sql"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 140,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 140,
                                                    "offset": 15
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Password,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L141-L141"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 145,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 145,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines": [
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "sensitive-info-to-log": [
                        {
                            "artifact_id": "a9e7408e278495d880d1aa9ff3989dc2",
                            "artifact_name": "TaintEngine_sensitive-info-to-log_model/user.go#15/1_->model/user.go#144/13_b18d65fab4baabc2dab839d7e489c1f2",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 144,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 144,
                                    "offset": 16
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position,\n",
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n"
                                    ],
                                    "lines": [
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\t_, err := db.Exec(sql)\n",
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "sensitive-info-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L16-L16",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "b18d65fab4baabc2dab839d7e489c1f2"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-log",
                                "flow_type": "sensitive-info-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 15,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 15,
                                            "offset": 9
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n",
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines": [
                                                "\tPassword string  `json:\"password\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Password"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 144,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 144,
                                            "offset": 16
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position,\n",
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n"
                                            ],
                                            "lines": [
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\t_, err := db.Exec(sql)\n",
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position,\n",
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n"
                                                ],
                                                "lines": [
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\t_, err := db.Exec(sql)\n",
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 140,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 140,
                                                    "offset": 15
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Password,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L141-L141"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 144,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 144,
                                                    "offset": 16
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines": [
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "function-param-to-log": [
                        {
                            "artifact_id": "5246743f3f74ca2595ac7710e9bf0214",
                            "artifact_name": "TaintEngine_function-param-to-log_routes/echo.go#31/25_->model/user.go#144/13_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 144,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 144,
                                    "offset": 16
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position,\n",
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n"
                                    ],
                                    "lines": [
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\t_, err := db.Exec(sql)\n",
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "function-param-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L32-L32",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "function-param-to-log",
                                "flow_type": "function-param-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "routes/echo.go",
                                        "start": {
                                            "line": 31,
                                            "offset": 25
                                        },
                                        "end": {
                                            "line": 31,
                                            "offset": 29
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                "\t}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines_after": [
                                                "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n",
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddEcho",
                                        "param_function_artifact_id": "43f6c4288fb74c4bd600d37472214701"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 144,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 144,
                                            "offset": 16
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position,\n",
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n"
                                            ],
                                            "lines": [
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\t_, err := db.Exec(sql)\n",
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position,\n",
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n"
                                                ],
                                                "lines": [
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\t_, err := db.Exec(sql)\n",
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 31,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 31,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L32-L32"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 144,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 144,
                                                    "offset": 16
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines": [
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "ca3996a6443f1025108730dd49632beb",
                            "artifact_name": "TaintEngine_function-param-to-log_routes/fiber.go#30/25_->model/user.go#144/13_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 144,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 144,
                                    "offset": 16
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position,\n",
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n"
                                    ],
                                    "lines": [
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\t_, err := db.Exec(sql)\n",
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "function-param-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L31-L31",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "function-param-to-log",
                                "flow_type": "function-param-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "routes/fiber.go",
                                        "start": {
                                            "line": 30,
                                            "offset": 25
                                        },
                                        "end": {
                                            "line": 30,
                                            "offset": 29
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                "\t}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines_after": [
                                                "\treturn c.SendString(user.Name + \" added\\n\")\n",
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddFiber",
                                        "param_function_artifact_id": "43fbbb0c2b1bf24f388a2e789c9670e1"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 144,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 144,
                                            "offset": 16
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position,\n",
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n"
                                            ],
                                            "lines": [
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\t_, err := db.Exec(sql)\n",
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position,\n",
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n"
                                                ],
                                                "lines": [
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\t_, err := db.Exec(sql)\n",
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 30,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 30,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\treturn c.SendString(user.Name + \" added\\n\")\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L31-L31"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 144,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 144,
                                                    "offset": 16
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines": [
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "c42a1d0ba9f673208210094ae21c2e5b",
                            "artifact_name": "TaintEngine_function-param-to-log_routes/echo.go#27/19_->model/user.go#144/13_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 144,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 144,
                                    "offset": 16
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position,\n",
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n"
                                    ],
                                    "lines": [
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\t_, err := db.Exec(sql)\n",
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "function-param-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L28-L28",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "function-param-to-log",
                                "flow_type": "function-param-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "routes/echo.go",
                                        "start": {
                                            "line": 27,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 27,
                                            "offset": 23
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tdb := c.Get(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := c.Bind(&user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddEcho",
                                        "param_function_artifact_id": "43f6c4288fb74c4bd600d37472214701"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 144,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 144,
                                            "offset": 16
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position,\n",
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n"
                                            ],
                                            "lines": [
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\t_, err := db.Exec(sql)\n",
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position,\n",
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n"
                                                ],
                                                "lines": [
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\t_, err := db.Exec(sql)\n",
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 27,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 27,
                                                    "offset": 23
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Get(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.Bind(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L28-L28"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 27,
                                                    "offset": 18
                                                },
                                                "end": {
                                                    "line": 27,
                                                    "offset": 23
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Get(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.Bind(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L28-L28"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 26,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAddEcho(c echo.Context) error {\n",
                                                        "\tdb := c.Get(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := c.Bind(&user); err != nil {\n",
                                                        "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L27-L27"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 31,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 31,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L32-L32"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 144,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 144,
                                                    "offset": 16
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines": [
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "beca04168e90489fd25767e6e6599d1d",
                            "artifact_name": "TaintEngine_function-param-to-log_routes/iris.go#31/25_->model/user.go#144/13_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 144,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 144,
                                    "offset": 16
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position,\n",
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n"
                                    ],
                                    "lines": [
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\t_, err := db.Exec(sql)\n",
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "function-param-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L32-L32",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "function-param-to-log",
                                "flow_type": "function-param-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "routes/iris.go",
                                        "start": {
                                            "line": 31,
                                            "offset": 25
                                        },
                                        "end": {
                                            "line": 31,
                                            "offset": 29
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines_after": [
                                                "\tc.WriteString(user.Name + \" added\\n\")\n",
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddIris",
                                        "param_function_artifact_id": "857f1748f8630bcc628d75e6ef89d3e1"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 144,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 144,
                                            "offset": 16
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position,\n",
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n"
                                            ],
                                            "lines": [
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\t_, err := db.Exec(sql)\n",
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position,\n",
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n"
                                                ],
                                                "lines": [
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\t_, err := db.Exec(sql)\n",
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 31,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 31,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tc.WriteString(user.Name + \" added\\n\")\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L32-L32"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 144,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 144,
                                                    "offset": 16
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines": [
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "35dcd650ecd7b043755ce32315cce868",
                            "artifact_name": "TaintEngine_function-param-to-log_routes/fiber.go#26/25_->model/user.go#144/13_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 144,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 144,
                                    "offset": 16
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position,\n",
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n"
                                    ],
                                    "lines": [
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\t_, err := db.Exec(sql)\n",
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "function-param-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L27-L27",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "function-param-to-log",
                                "flow_type": "function-param-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "routes/fiber.go",
                                        "start": {
                                            "line": 26,
                                            "offset": 25
                                        },
                                        "end": {
                                            "line": 26,
                                            "offset": 29
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tdb := c.Locals(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := c.BodyParser(&user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddFiber",
                                        "param_function_artifact_id": "43fbbb0c2b1bf24f388a2e789c9670e1"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 144,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 144,
                                            "offset": 16
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position,\n",
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n"
                                            ],
                                            "lines": [
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\t_, err := db.Exec(sql)\n",
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position,\n",
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n"
                                                ],
                                                "lines": [
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\t_, err := db.Exec(sql)\n",
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 26,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Locals(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.BodyParser(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L27-L27"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 26,
                                                    "offset": 24
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Locals(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.BodyParser(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L27-L27"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 25,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 25,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAddFiber(c *fiber.Ctx) error {\n",
                                                        "\tdb := c.Locals(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := c.BodyParser(&user); err != nil {\n",
                                                        "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L26-L26"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 30,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 30,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\treturn c.SendString(user.Name + \" added\\n\")\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L31-L31"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 144,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 144,
                                                    "offset": 16
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines": [
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "dc0815c4eab63accbeb58955bddc7720",
                            "artifact_name": "TaintEngine_function-param-to-log_routes/iris.go#26/23_->model/user.go#144/13_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 144,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 144,
                                    "offset": 16
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position,\n",
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n"
                                    ],
                                    "lines": [
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\t_, err := db.Exec(sql)\n",
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "function-param-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L27-L27",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "function-param-to-log",
                                "flow_type": "function-param-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "routes/iris.go",
                                        "start": {
                                            "line": 26,
                                            "offset": 23
                                        },
                                        "end": {
                                            "line": 26,
                                            "offset": 27
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tdb := c.Values().Get(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := c.ReadJSON(&user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\tc.WriteString(\"Invalid JSON in request body\")\n",
                                                "\t\treturn\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddIris",
                                        "param_function_artifact_id": "857f1748f8630bcc628d75e6ef89d3e1"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 144,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 144,
                                            "offset": 16
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position,\n",
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n"
                                            ],
                                            "lines": [
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\t_, err := db.Exec(sql)\n",
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position,\n",
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n"
                                                ],
                                                "lines": [
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\t_, err := db.Exec(sql)\n",
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 26,
                                                    "offset": 23
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Values().Get(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.ReadJSON(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tc.WriteString(\"Invalid JSON in request body\")\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L27-L27"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 26,
                                                    "offset": 22
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Values().Get(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.ReadJSON(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tc.WriteString(\"Invalid JSON in request body\")\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L27-L27"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 25,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 25,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAddIris(c iris.Context) {\n",
                                                        "\tdb := c.Values().Get(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := c.ReadJSON(&user); err != nil {\n",
                                                        "\t\tc.WriteString(\"Invalid JSON in request body\")\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L26-L26"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 31,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 31,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tc.WriteString(user.Name + \" added\\n\")\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L32-L32"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 144,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 144,
                                                    "offset": 16
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines": [
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "param-to-external": [
                        {
                            "artifact_id": "0a57caa3853cb5ff65cde967bf50c36e",
                            "artifact_name": "TaintEngine_param-to-external_routes/fiber.go#30/25_->model/user.go#145/19_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 145,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 145,
                                    "offset": 22
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n",
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines": [
                                        "\t_, err := db.Exec(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L31-L31",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/fiber.go",
                                        "start": {
                                            "line": 30,
                                            "offset": 25
                                        },
                                        "end": {
                                            "line": 30,
                                            "offset": 29
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                "\t}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines_after": [
                                                "\treturn c.SendString(user.Name + \" added\\n\")\n",
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddFiber",
                                        "param_function_artifact_id": "43fbbb0c2b1bf24f388a2e789c9670e1"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 145,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 145,
                                            "offset": 22
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n",
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines": [
                                                "\t_, err := db.Exec(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n",
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines": [
                                                    "\t_, err := db.Exec(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": null
                                        },
                                        "message": "sql"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 30,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 30,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\treturn c.SendString(user.Name + \" added\\n\")\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L31-L31"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 145,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 145,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines": [
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "0d41d0885050829df14b50f0f94b5ae9",
                            "artifact_name": "TaintEngine_param-to-external_routes/iris.go#31/25_->model/user.go#145/19_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 145,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 145,
                                    "offset": 22
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n",
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines": [
                                        "\t_, err := db.Exec(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L32-L32",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/iris.go",
                                        "start": {
                                            "line": 31,
                                            "offset": 25
                                        },
                                        "end": {
                                            "line": 31,
                                            "offset": 29
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines_after": [
                                                "\tc.WriteString(user.Name + \" added\\n\")\n",
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddIris",
                                        "param_function_artifact_id": "857f1748f8630bcc628d75e6ef89d3e1"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 145,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 145,
                                            "offset": 22
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n",
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines": [
                                                "\t_, err := db.Exec(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n",
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines": [
                                                    "\t_, err := db.Exec(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": null
                                        },
                                        "message": "sql"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 31,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 31,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tc.WriteString(user.Name + \" added\\n\")\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L32-L32"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 145,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 145,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines": [
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "a565eac9684b8b058b1e71cc1bf58310",
                            "artifact_name": "TaintEngine_param-to-external_routes/echo.go#31/25_->model/user.go#145/19_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 145,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 145,
                                    "offset": 22
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n",
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines": [
                                        "\t_, err := db.Exec(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L32-L32",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/echo.go",
                                        "start": {
                                            "line": 31,
                                            "offset": 25
                                        },
                                        "end": {
                                            "line": 31,
                                            "offset": 29
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                "\t}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines_after": [
                                                "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n",
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddEcho",
                                        "param_function_artifact_id": "43f6c4288fb74c4bd600d37472214701"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 145,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 145,
                                            "offset": 22
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n",
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines": [
                                                "\t_, err := db.Exec(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n",
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines": [
                                                    "\t_, err := db.Exec(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": null
                                        },
                                        "message": "sql"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 31,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 31,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L32-L32"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 145,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 145,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines": [
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "116c7636919d416bfa48e13b3e9443b8",
                            "artifact_name": "TaintEngine_param-to-external_routes/echo.go#27/19_->model/user.go#145/19_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 145,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 145,
                                    "offset": 22
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n",
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines": [
                                        "\t_, err := db.Exec(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L28-L28",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/echo.go",
                                        "start": {
                                            "line": 27,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 27,
                                            "offset": 23
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tdb := c.Get(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := c.Bind(&user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddEcho",
                                        "param_function_artifact_id": "43f6c4288fb74c4bd600d37472214701"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 145,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 145,
                                            "offset": 22
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n",
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines": [
                                                "\t_, err := db.Exec(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n",
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines": [
                                                    "\t_, err := db.Exec(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": null
                                        },
                                        "message": "sql"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 27,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 27,
                                                    "offset": 23
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Get(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.Bind(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L28-L28"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 27,
                                                    "offset": 18
                                                },
                                                "end": {
                                                    "line": 27,
                                                    "offset": 23
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Get(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.Bind(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L28-L28"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 26,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAddEcho(c echo.Context) error {\n",
                                                        "\tdb := c.Get(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := c.Bind(&user); err != nil {\n",
                                                        "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L27-L27"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 31,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 31,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L32-L32"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 145,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 145,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines": [
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "404e576fad30e7b4ba5e1aea8c36ea17",
                            "artifact_name": "TaintEngine_param-to-external_routes/net_http.go#29/13_->routes/net_http.go#34/13_",
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 34,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 34,
                                    "offset": 14
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                        "\tif err != nil {\n"
                                    ],
                                    "lines": [
                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                    ],
                                    "lines_after": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L35-L35",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L30-L30",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L35-L35",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 29,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 29,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tw.Write([]byte(\"ok\\n\"))\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "w",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "db52352cd3e60dc9d79b191c1fc2c98b"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 34,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 34,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                                "\tif err != nil {\n"
                                            ],
                                            "lines": [
                                                "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 34,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 34,
                                                "offset": 14
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\n",
                                                    "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                                    "\tif err != nil {\n"
                                                ],
                                                "lines": [
                                                    "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 34,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 34,
                                                "offset": 14
                                            },
                                            "snippet": null
                                        },
                                        "message": "w"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 34,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 34,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                                        "\tif err != nil {\n"
                                                    ],
                                                    "lines": [
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L35-L35"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "2adfe0b968d5b180ca2219dbf0bcf63f",
                            "artifact_name": "TaintEngine_param-to-external_routes/fiber.go#26/25_->model/user.go#145/19_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 145,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 145,
                                    "offset": 22
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n",
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines": [
                                        "\t_, err := db.Exec(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L27-L27",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/fiber.go",
                                        "start": {
                                            "line": 26,
                                            "offset": 25
                                        },
                                        "end": {
                                            "line": 26,
                                            "offset": 29
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tdb := c.Locals(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := c.BodyParser(&user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddFiber",
                                        "param_function_artifact_id": "43fbbb0c2b1bf24f388a2e789c9670e1"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 145,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 145,
                                            "offset": 22
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n",
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines": [
                                                "\t_, err := db.Exec(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n",
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines": [
                                                    "\t_, err := db.Exec(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": null
                                        },
                                        "message": "sql"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 26,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Locals(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.BodyParser(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L27-L27"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 26,
                                                    "offset": 24
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Locals(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.BodyParser(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L27-L27"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 25,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 25,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAddFiber(c *fiber.Ctx) error {\n",
                                                        "\tdb := c.Locals(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := c.BodyParser(&user); err != nil {\n",
                                                        "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L26-L26"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 30,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 30,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\treturn c.SendString(user.Name + \" added\\n\")\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L31-L31"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 145,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 145,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines": [
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "202c3323daf72045c249a062adcd07eb",
                            "artifact_name": "TaintEngine_param-to-external_routes/iris.go#26/23_->model/user.go#145/19_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 145,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 145,
                                    "offset": 22
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n",
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines": [
                                        "\t_, err := db.Exec(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L27-L27",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/iris.go",
                                        "start": {
                                            "line": 26,
                                            "offset": 23
                                        },
                                        "end": {
                                            "line": 26,
                                            "offset": 27
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tdb := c.Values().Get(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := c.ReadJSON(&user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\tc.WriteString(\"Invalid JSON in request body\")\n",
                                                "\t\treturn\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddIris",
                                        "param_function_artifact_id": "857f1748f8630bcc628d75e6ef89d3e1"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 145,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 145,
                                            "offset": 22
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n",
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines": [
                                                "\t_, err := db.Exec(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n",
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines": [
                                                    "\t_, err := db.Exec(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": null
                                        },
                                        "message": "sql"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 26,
                                                    "offset": 23
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Values().Get(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.ReadJSON(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tc.WriteString(\"Invalid JSON in request body\")\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L27-L27"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 26,
                                                    "offset": 22
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Values().Get(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.ReadJSON(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tc.WriteString(\"Invalid JSON in request body\")\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L27-L27"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 25,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 25,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAddIris(c iris.Context) {\n",
                                                        "\tdb := c.Values().Get(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := c.ReadJSON(&user); err != nil {\n",
                                                        "\t\tc.WriteString(\"Invalid JSON in request body\")\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L26-L26"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 31,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 31,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tc.WriteString(user.Name + \" added\\n\")\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L32-L32"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 145,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 145,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines": [
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "8fceeba2d0f8e17cb54992b2c70880f1",
                            "artifact_name": "TaintEngine_param-to-external_routes/net_http.go#29/13_->routes/net_http.go#40/13_",
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 40,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 40,
                                    "offset": 14
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "\tvar user model.User\n",
                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                    ],
                                    "lines": [
                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                    ],
                                    "lines_after": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L41-L41",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L30-L30",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L41-L41",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 29,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 29,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tw.Write([]byte(\"ok\\n\"))\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "w",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "db52352cd3e60dc9d79b191c1fc2c98b"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 40,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 40,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "\tvar user model.User\n",
                                                "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                            ],
                                            "lines": [
                                                "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\tif util.StringLength(user.Password) < 8 {\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 40,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 40,
                                                "offset": 14
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\n",
                                                    "\tvar user model.User\n",
                                                    "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                ],
                                                "lines": [
                                                    "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\tif util.StringLength(user.Password) < 8 {\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 40,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 40,
                                                "offset": 14
                                            },
                                            "snippet": null
                                        },
                                        "message": "w"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 40,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 40,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "\tvar user model.User\n",
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L41-L41"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "bbdffeffb9d35949ac235d12b6f88f43",
                            "artifact_name": "TaintEngine_param-to-external_routes/net_http.go#23/14_->routes/net_http.go#34/13_",
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 34,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 34,
                                    "offset": 14
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                        "\tif err != nil {\n"
                                    ],
                                    "lines": [
                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                    ],
                                    "lines_after": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L35-L35",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L24-L24",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L35-L35",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 23,
                                            "offset": 14
                                        },
                                        "end": {
                                            "line": 23,
                                            "offset": 15
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\tmodel.UserObj{}.ReadAll(db)\n",
                                                "\tw.Write([]byte(\"ok\\n\"))\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "w",
                                        "function_name": "UserList",
                                        "param_function_artifact_id": "6ac9487005e808729a3a31d4174508d9"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 34,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 34,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                                "\tif err != nil {\n"
                                            ],
                                            "lines": [
                                                "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 34,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 34,
                                                "offset": 14
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\n",
                                                    "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                                    "\tif err != nil {\n"
                                                ],
                                                "lines": [
                                                    "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 34,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 34,
                                                "offset": 14
                                            },
                                            "snippet": null
                                        },
                                        "message": "w"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 23,
                                                    "offset": 14
                                                },
                                                "end": {
                                                    "line": 23,
                                                    "offset": 15
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\tmodel.UserObj{}.ReadAll(db)\n",
                                                        "\tw.Write([]byte(\"ok\\n\"))\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L24-L24"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 14,
                                                    "offset": 17
                                                },
                                                "end": {
                                                    "line": 14,
                                                    "offset": 18
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\"go-test-project/util\"\n",
                                                        ")\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserHandler(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tswitch r.Method {\n",
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L15-L15"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 19,
                                                    "offset": 10
                                                },
                                                "end": {
                                                    "line": 19,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n",
                                                        "\tcase \"POST\":\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserAdd(w, r)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L20-L20"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 34,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 34,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                                        "\tif err != nil {\n"
                                                    ],
                                                    "lines": [
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L35-L35"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "ec99f7b576e11fba49978876cf80f4a7",
                            "artifact_name": "TaintEngine_param-to-external_routes/net_http.go#23/14_->routes/net_http.go#40/13_",
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 40,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 40,
                                    "offset": 14
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "\tvar user model.User\n",
                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                    ],
                                    "lines": [
                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                    ],
                                    "lines_after": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L41-L41",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L24-L24",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L41-L41",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 23,
                                            "offset": 14
                                        },
                                        "end": {
                                            "line": 23,
                                            "offset": 15
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\tmodel.UserObj{}.ReadAll(db)\n",
                                                "\tw.Write([]byte(\"ok\\n\"))\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "w",
                                        "function_name": "UserList",
                                        "param_function_artifact_id": "6ac9487005e808729a3a31d4174508d9"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 40,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 40,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "\tvar user model.User\n",
                                                "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                            ],
                                            "lines": [
                                                "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\tif util.StringLength(user.Password) < 8 {\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 40,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 40,
                                                "offset": 14
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\n",
                                                    "\tvar user model.User\n",
                                                    "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                ],
                                                "lines": [
                                                    "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\tif util.StringLength(user.Password) < 8 {\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 40,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 40,
                                                "offset": 14
                                            },
                                            "snippet": null
                                        },
                                        "message": "w"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 23,
                                                    "offset": 14
                                                },
                                                "end": {
                                                    "line": 23,
                                                    "offset": 15
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\tmodel.UserObj{}.ReadAll(db)\n",
                                                        "\tw.Write([]byte(\"ok\\n\"))\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L24-L24"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 14,
                                                    "offset": 17
                                                },
                                                "end": {
                                                    "line": 14,
                                                    "offset": 18
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\"go-test-project/util\"\n",
                                                        ")\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserHandler(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tswitch r.Method {\n",
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L15-L15"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 19,
                                                    "offset": 10
                                                },
                                                "end": {
                                                    "line": 19,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n",
                                                        "\tcase \"POST\":\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserAdd(w, r)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L20-L20"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 40,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 40,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "\tvar user model.User\n",
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L41-L41"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "cf6544b9500da6f3665141b3185d09eb",
                            "artifact_name": "TaintEngine_param-to-external_routes/net_http.go#29/13_->routes/net_http.go#44/13_",
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 44,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 44,
                                    "offset": 14
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                    ],
                                    "lines": [
                                        "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                    ],
                                    "lines_after": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L45-L45",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L30-L30",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L45-L45",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 29,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 29,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tw.Write([]byte(\"ok\\n\"))\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "w",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "db52352cd3e60dc9d79b191c1fc2c98b"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 44,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 44,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\tif util.StringLength(user.Password) < 8 {\n"
                                            ],
                                            "lines": [
                                                "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 44,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 44,
                                                "offset": 14
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\tif util.StringLength(user.Password) < 8 {\n"
                                                ],
                                                "lines": [
                                                    "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 44,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 44,
                                                "offset": 14
                                            },
                                            "snippet": null
                                        },
                                        "message": "w"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 44,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 44,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                                    ],
                                                    "lines": [
                                                        "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L45-L45"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "ad2b2a324dff16d8030a40b4154574e9",
                            "artifact_name": "TaintEngine_param-to-external_routes/fiber.go#26/25_->routes/fiber.go#26/24_",
                            "code_ref": {
                                "file_path": "routes/fiber.go",
                                "start": {
                                    "line": 26,
                                    "offset": 24
                                },
                                "end": {
                                    "line": 26,
                                    "offset": 29
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tdb := c.Locals(\"db\").(*sql.DB)\n",
                                        "\n",
                                        "\tvar user model.User\n"
                                    ],
                                    "lines": [
                                        "\tif err := c.BodyParser(&user); err != nil {\n"
                                    ],
                                    "lines_after": [
                                        "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                        "\t}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L27-L27",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L27-L27",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L27-L27",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/fiber.go",
                                        "start": {
                                            "line": 26,
                                            "offset": 25
                                        },
                                        "end": {
                                            "line": 26,
                                            "offset": 29
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tdb := c.Locals(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := c.BodyParser(&user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddFiber",
                                        "param_function_artifact_id": "43fbbb0c2b1bf24f388a2e789c9670e1"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/fiber.go",
                                        "start": {
                                            "line": 26,
                                            "offset": 24
                                        },
                                        "end": {
                                            "line": 26,
                                            "offset": 29
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tdb := c.Locals(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := c.BodyParser(&user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/fiber.go",
                                            "start": {
                                                "line": 26,
                                                "offset": 24
                                            },
                                            "end": {
                                                "line": 26,
                                                "offset": 29
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\tdb := c.Locals(\"db\").(*sql.DB)\n",
                                                    "\n",
                                                    "\tvar user model.User\n"
                                                ],
                                                "lines": [
                                                    "\tif err := c.BodyParser(&user); err != nil {\n"
                                                ],
                                                "lines_after": [
                                                    "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                    "\t}\n",
                                                    "\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/fiber.go",
                                            "start": {
                                                "line": 26,
                                                "offset": 24
                                            },
                                            "end": {
                                                "line": 26,
                                                "offset": 29
                                            },
                                            "snippet": null
                                        },
                                        "message": "&..."
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 26,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Locals(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.BodyParser(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L27-L27"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 26,
                                                    "offset": 24
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Locals(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.BodyParser(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L27-L27"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "84d062e53fffbc7979e41b1ef90c21ff",
                            "artifact_name": "TaintEngine_param-to-external_routes/net_http.go#23/14_->routes/net_http.go#44/13_",
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 44,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 44,
                                    "offset": 14
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                    ],
                                    "lines": [
                                        "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                    ],
                                    "lines_after": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L45-L45",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L24-L24",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L45-L45",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 23,
                                            "offset": 14
                                        },
                                        "end": {
                                            "line": 23,
                                            "offset": 15
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\tmodel.UserObj{}.ReadAll(db)\n",
                                                "\tw.Write([]byte(\"ok\\n\"))\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "w",
                                        "function_name": "UserList",
                                        "param_function_artifact_id": "6ac9487005e808729a3a31d4174508d9"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 44,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 44,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\tif util.StringLength(user.Password) < 8 {\n"
                                            ],
                                            "lines": [
                                                "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 44,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 44,
                                                "offset": 14
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\tif util.StringLength(user.Password) < 8 {\n"
                                                ],
                                                "lines": [
                                                    "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 44,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 44,
                                                "offset": 14
                                            },
                                            "snippet": null
                                        },
                                        "message": "w"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 23,
                                                    "offset": 14
                                                },
                                                "end": {
                                                    "line": 23,
                                                    "offset": 15
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\tmodel.UserObj{}.ReadAll(db)\n",
                                                        "\tw.Write([]byte(\"ok\\n\"))\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L24-L24"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 14,
                                                    "offset": 17
                                                },
                                                "end": {
                                                    "line": 14,
                                                    "offset": 18
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\"go-test-project/util\"\n",
                                                        ")\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserHandler(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tswitch r.Method {\n",
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L15-L15"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 19,
                                                    "offset": 10
                                                },
                                                "end": {
                                                    "line": 19,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n",
                                                        "\tcase \"POST\":\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserAdd(w, r)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L20-L20"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 44,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 44,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                                    ],
                                                    "lines": [
                                                        "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L45-L45"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "ea3ac8d6d3f504c8f6db0f284d6d5fb7",
                            "artifact_name": "TaintEngine_param-to-external_routes/echo.go#27/19_->routes/echo.go#27/18_",
                            "code_ref": {
                                "file_path": "routes/echo.go",
                                "start": {
                                    "line": 27,
                                    "offset": 18
                                },
                                "end": {
                                    "line": 27,
                                    "offset": 23
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tdb := c.Get(\"db\").(*sql.DB)\n",
                                        "\n",
                                        "\tvar user model.User\n"
                                    ],
                                    "lines": [
                                        "\tif err := c.Bind(&user); err != nil {\n"
                                    ],
                                    "lines_after": [
                                        "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                        "\t}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L28-L28",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L28-L28",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L28-L28",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/echo.go",
                                        "start": {
                                            "line": 27,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 27,
                                            "offset": 23
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tdb := c.Get(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := c.Bind(&user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddEcho",
                                        "param_function_artifact_id": "43f6c4288fb74c4bd600d37472214701"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/echo.go",
                                        "start": {
                                            "line": 27,
                                            "offset": 18
                                        },
                                        "end": {
                                            "line": 27,
                                            "offset": 23
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tdb := c.Get(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := c.Bind(&user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/echo.go",
                                            "start": {
                                                "line": 27,
                                                "offset": 18
                                            },
                                            "end": {
                                                "line": 27,
                                                "offset": 23
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\tdb := c.Get(\"db\").(*sql.DB)\n",
                                                    "\n",
                                                    "\tvar user model.User\n"
                                                ],
                                                "lines": [
                                                    "\tif err := c.Bind(&user); err != nil {\n"
                                                ],
                                                "lines_after": [
                                                    "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                    "\t}\n",
                                                    "\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/echo.go",
                                            "start": {
                                                "line": 27,
                                                "offset": 18
                                            },
                                            "end": {
                                                "line": 27,
                                                "offset": 23
                                            },
                                            "snippet": null
                                        },
                                        "message": "&..."
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 27,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 27,
                                                    "offset": 23
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Get(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.Bind(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L28-L28"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 27,
                                                    "offset": 18
                                                },
                                                "end": {
                                                    "line": 27,
                                                    "offset": 23
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Get(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.Bind(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L28-L28"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "3c23ac0d33762521c28866fa6fe1e0df",
                            "artifact_name": "TaintEngine_param-to-external_routes/fiber.go#31/21_->routes/fiber.go#31/21_",
                            "code_ref": {
                                "file_path": "routes/fiber.go",
                                "start": {
                                    "line": 31,
                                    "offset": 21
                                },
                                "end": {
                                    "line": 31,
                                    "offset": 43
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t}\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/fiber.go",
                                        "start": {
                                            "line": 31,
                                            "offset": 21
                                        },
                                        "end": {
                                            "line": 31,
                                            "offset": 25
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddFiber",
                                        "param_function_artifact_id": "43fbbb0c2b1bf24f388a2e789c9670e1"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/fiber.go",
                                        "start": {
                                            "line": 31,
                                            "offset": 21
                                        },
                                        "end": {
                                            "line": 31,
                                            "offset": 43
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/fiber.go",
                                            "start": {
                                                "line": 31,
                                                "offset": 21
                                            },
                                            "end": {
                                                "line": 31,
                                                "offset": 43
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t}\n",
                                                    "\n",
                                                    "\tmodel.UserObj{}.Add(db, user)\n"
                                                ],
                                                "lines": [
                                                    "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                                ],
                                                "lines_after": [
                                                    "}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/fiber.go",
                                            "start": {
                                                "line": 31,
                                                "offset": 21
                                            },
                                            "end": {
                                                "line": 31,
                                                "offset": 43
                                            },
                                            "snippet": null
                                        },
                                        "message": "...+..."
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 31,
                                                    "offset": 21
                                                },
                                                "end": {
                                                    "line": 31,
                                                    "offset": 25
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 31,
                                                    "offset": 21
                                                },
                                                "end": {
                                                    "line": 31,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 31,
                                                    "offset": 21
                                                },
                                                "end": {
                                                    "line": 31,
                                                    "offset": 43
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "4c5c6f4383b2f80590d06f205fcdaede",
                            "artifact_name": "TaintEngine_param-to-external_routes/echo.go#27/19_->routes/echo.go#32/30_",
                            "code_ref": {
                                "file_path": "routes/echo.go",
                                "start": {
                                    "line": 32,
                                    "offset": 30
                                },
                                "end": {
                                    "line": 32,
                                    "offset": 50
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t}\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L28-L28",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/echo.go",
                                        "start": {
                                            "line": 27,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 27,
                                            "offset": 23
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tdb := c.Get(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := c.Bind(&user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddEcho",
                                        "param_function_artifact_id": "43f6c4288fb74c4bd600d37472214701"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/echo.go",
                                        "start": {
                                            "line": 32,
                                            "offset": 30
                                        },
                                        "end": {
                                            "line": 32,
                                            "offset": 50
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/echo.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 30
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 50
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t}\n",
                                                    "\n",
                                                    "\tmodel.UserObj{}.Add(db, user)\n"
                                                ],
                                                "lines": [
                                                    "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                                ],
                                                "lines_after": [
                                                    "}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/echo.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 30
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 50
                                            },
                                            "snippet": null
                                        },
                                        "message": "...+..."
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 27,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 27,
                                                    "offset": 23
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Get(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.Bind(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L28-L28"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 27,
                                                    "offset": 18
                                                },
                                                "end": {
                                                    "line": 27,
                                                    "offset": 23
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Get(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.Bind(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L28-L28"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 26,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAddEcho(c echo.Context) error {\n",
                                                        "\tdb := c.Get(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := c.Bind(&user); err != nil {\n",
                                                        "\t\treturn c.String(http.StatusBadRequest, \"Invalid JSON in request body\")\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L27-L27"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 34
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 39
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 50
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "a5f6d9c6cefc00e02bc679666934159b",
                            "artifact_name": "TaintEngine_param-to-external_routes/iris.go#26/23_->routes/iris.go#26/22_",
                            "code_ref": {
                                "file_path": "routes/iris.go",
                                "start": {
                                    "line": 26,
                                    "offset": 22
                                },
                                "end": {
                                    "line": 26,
                                    "offset": 27
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tdb := c.Values().Get(\"db\").(*sql.DB)\n",
                                        "\n",
                                        "\tvar user model.User\n"
                                    ],
                                    "lines": [
                                        "\tif err := c.ReadJSON(&user); err != nil {\n"
                                    ],
                                    "lines_after": [
                                        "\t\tc.WriteString(\"Invalid JSON in request body\")\n",
                                        "\t\treturn\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L27-L27",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L27-L27",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L27-L27",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/iris.go",
                                        "start": {
                                            "line": 26,
                                            "offset": 23
                                        },
                                        "end": {
                                            "line": 26,
                                            "offset": 27
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tdb := c.Values().Get(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := c.ReadJSON(&user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\tc.WriteString(\"Invalid JSON in request body\")\n",
                                                "\t\treturn\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddIris",
                                        "param_function_artifact_id": "857f1748f8630bcc628d75e6ef89d3e1"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/iris.go",
                                        "start": {
                                            "line": 26,
                                            "offset": 22
                                        },
                                        "end": {
                                            "line": 26,
                                            "offset": 27
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tdb := c.Values().Get(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := c.ReadJSON(&user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\tc.WriteString(\"Invalid JSON in request body\")\n",
                                                "\t\treturn\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/iris.go",
                                            "start": {
                                                "line": 26,
                                                "offset": 22
                                            },
                                            "end": {
                                                "line": 26,
                                                "offset": 27
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\tdb := c.Values().Get(\"db\").(*sql.DB)\n",
                                                    "\n",
                                                    "\tvar user model.User\n"
                                                ],
                                                "lines": [
                                                    "\tif err := c.ReadJSON(&user); err != nil {\n"
                                                ],
                                                "lines_after": [
                                                    "\t\tc.WriteString(\"Invalid JSON in request body\")\n",
                                                    "\t\treturn\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/iris.go",
                                            "start": {
                                                "line": 26,
                                                "offset": 22
                                            },
                                            "end": {
                                                "line": 26,
                                                "offset": 27
                                            },
                                            "snippet": null
                                        },
                                        "message": "&..."
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 26,
                                                    "offset": 23
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Values().Get(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.ReadJSON(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tc.WriteString(\"Invalid JSON in request body\")\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L27-L27"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 26,
                                                    "offset": 22
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Values().Get(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.ReadJSON(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tc.WriteString(\"Invalid JSON in request body\")\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L27-L27"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "378e88f7f197896dd07f8d7dea988cfc",
                            "artifact_name": "TaintEngine_param-to-external_routes/iris.go#26/23_->routes/iris.go#32/15_",
                            "code_ref": {
                                "file_path": "routes/iris.go",
                                "start": {
                                    "line": 32,
                                    "offset": 15
                                },
                                "end": {
                                    "line": 32,
                                    "offset": 37
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t}\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\tc.WriteString(user.Name + \" added\\n\")\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L27-L27",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/iris.go",
                                        "start": {
                                            "line": 26,
                                            "offset": 23
                                        },
                                        "end": {
                                            "line": 26,
                                            "offset": 27
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tdb := c.Values().Get(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := c.ReadJSON(&user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\tc.WriteString(\"Invalid JSON in request body\")\n",
                                                "\t\treturn\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddIris",
                                        "param_function_artifact_id": "857f1748f8630bcc628d75e6ef89d3e1"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/iris.go",
                                        "start": {
                                            "line": 32,
                                            "offset": 15
                                        },
                                        "end": {
                                            "line": 32,
                                            "offset": 37
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\tc.WriteString(user.Name + \" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/iris.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 15
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 37
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t}\n",
                                                    "\n",
                                                    "\tmodel.UserObj{}.Add(db, user)\n"
                                                ],
                                                "lines": [
                                                    "\tc.WriteString(user.Name + \" added\\n\")\n"
                                                ],
                                                "lines_after": [
                                                    "}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/iris.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 15
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 37
                                            },
                                            "snippet": null
                                        },
                                        "message": "...+..."
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 26,
                                                    "offset": 23
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Values().Get(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.ReadJSON(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tc.WriteString(\"Invalid JSON in request body\")\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L27-L27"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 26,
                                                    "offset": 22
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Values().Get(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.ReadJSON(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tc.WriteString(\"Invalid JSON in request body\")\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L27-L27"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 25,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 25,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAddIris(c iris.Context) {\n",
                                                        "\tdb := c.Values().Get(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := c.ReadJSON(&user); err != nil {\n",
                                                        "\t\tc.WriteString(\"Invalid JSON in request body\")\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L26-L26"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 15
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 19
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tc.WriteString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 15
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 24
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tc.WriteString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 15
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tc.WriteString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "e8bd229d9056514e2f52150f22663066",
                            "artifact_name": "TaintEngine_param-to-external_routes/echo.go#32/30_->routes/echo.go#32/30_",
                            "code_ref": {
                                "file_path": "routes/echo.go",
                                "start": {
                                    "line": 32,
                                    "offset": 30
                                },
                                "end": {
                                    "line": 32,
                                    "offset": 50
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t}\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/echo.go",
                                        "start": {
                                            "line": 32,
                                            "offset": 30
                                        },
                                        "end": {
                                            "line": 32,
                                            "offset": 34
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddEcho",
                                        "param_function_artifact_id": "43f6c4288fb74c4bd600d37472214701"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/echo.go",
                                        "start": {
                                            "line": 32,
                                            "offset": 30
                                        },
                                        "end": {
                                            "line": 32,
                                            "offset": 50
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/echo.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 30
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 50
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t}\n",
                                                    "\n",
                                                    "\tmodel.UserObj{}.Add(db, user)\n"
                                                ],
                                                "lines": [
                                                    "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                                ],
                                                "lines_after": [
                                                    "}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/echo.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 30
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 50
                                            },
                                            "snippet": null
                                        },
                                        "message": "...+..."
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 34
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 39
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/echo.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 50
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.JSON(http.StatusOK, user.Name+\" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/echo.go#L33-L33"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "02baba450ba3ce9bff6d54afd5ab7aea",
                            "artifact_name": "TaintEngine_param-to-external_routes/fiber.go#26/25_->routes/fiber.go#31/21_",
                            "code_ref": {
                                "file_path": "routes/fiber.go",
                                "start": {
                                    "line": 31,
                                    "offset": 21
                                },
                                "end": {
                                    "line": 31,
                                    "offset": 43
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t}\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L27-L27",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/fiber.go",
                                        "start": {
                                            "line": 26,
                                            "offset": 25
                                        },
                                        "end": {
                                            "line": 26,
                                            "offset": 29
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tdb := c.Locals(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := c.BodyParser(&user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddFiber",
                                        "param_function_artifact_id": "43fbbb0c2b1bf24f388a2e789c9670e1"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/fiber.go",
                                        "start": {
                                            "line": 31,
                                            "offset": 21
                                        },
                                        "end": {
                                            "line": 31,
                                            "offset": 43
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/fiber.go",
                                            "start": {
                                                "line": 31,
                                                "offset": 21
                                            },
                                            "end": {
                                                "line": 31,
                                                "offset": 43
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t}\n",
                                                    "\n",
                                                    "\tmodel.UserObj{}.Add(db, user)\n"
                                                ],
                                                "lines": [
                                                    "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                                ],
                                                "lines_after": [
                                                    "}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/fiber.go",
                                            "start": {
                                                "line": 31,
                                                "offset": 21
                                            },
                                            "end": {
                                                "line": 31,
                                                "offset": 43
                                            },
                                            "snippet": null
                                        },
                                        "message": "...+..."
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 26,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Locals(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.BodyParser(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L27-L27"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 26,
                                                    "offset": 24
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tdb := c.Locals(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := c.BodyParser(&user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L27-L27"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 25,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 25,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAddFiber(c *fiber.Ctx) error {\n",
                                                        "\tdb := c.Locals(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := c.BodyParser(&user); err != nil {\n",
                                                        "\t\treturn c.SendString(\"Invalid JSON in request body\")\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L26-L26"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 31,
                                                    "offset": 21
                                                },
                                                "end": {
                                                    "line": 31,
                                                    "offset": 25
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 31,
                                                    "offset": 21
                                                },
                                                "end": {
                                                    "line": 31,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/fiber.go",
                                                "start": {
                                                    "line": 31,
                                                    "offset": 21
                                                },
                                                "end": {
                                                    "line": 31,
                                                    "offset": 43
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\treturn c.SendString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/fiber.go#L32-L32"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "a8a37f2b4290de787a9a90a4cfa14457",
                            "artifact_name": "TaintEngine_param-to-external_routes/iris.go#32/15_->routes/iris.go#32/15_",
                            "code_ref": {
                                "file_path": "routes/iris.go",
                                "start": {
                                    "line": 32,
                                    "offset": 15
                                },
                                "end": {
                                    "line": 32,
                                    "offset": 37
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t}\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\tc.WriteString(user.Name + \" added\\n\")\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/iris.go",
                                        "start": {
                                            "line": 32,
                                            "offset": 15
                                        },
                                        "end": {
                                            "line": 32,
                                            "offset": 19
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\tc.WriteString(user.Name + \" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAddIris",
                                        "param_function_artifact_id": "857f1748f8630bcc628d75e6ef89d3e1"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/iris.go",
                                        "start": {
                                            "line": 32,
                                            "offset": 15
                                        },
                                        "end": {
                                            "line": 32,
                                            "offset": 37
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\tc.WriteString(user.Name + \" added\\n\")\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/iris.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 15
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 37
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t}\n",
                                                    "\n",
                                                    "\tmodel.UserObj{}.Add(db, user)\n"
                                                ],
                                                "lines": [
                                                    "\tc.WriteString(user.Name + \" added\\n\")\n"
                                                ],
                                                "lines_after": [
                                                    "}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/iris.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 15
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 37
                                            },
                                            "snippet": null
                                        },
                                        "message": "...+..."
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 15
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 19
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tc.WriteString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 15
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 24
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tc.WriteString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/iris.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 15
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tc.WriteString(user.Name + \" added\\n\")\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/iris.go#L33-L33"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "jdbc-to-member": [
                        {
                            "artifact_id": "72adb5f5025be4a1488c1e06d9a7d7e6",
                            "artifact_name": "TaintEngine_jdbc-to-member_model/user.go#76/1_->model/user.go#15/1_b18d65fab4baabc2dab839d7e489c1f2",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 15,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 15,
                                    "offset": 9
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tID       int     `json:\"id\"`\n",
                                        "\tName     string  `json:\"name\"`\n",
                                        "\tEmail    string  `json:\"email\"`\n"
                                    ],
                                    "lines": [
                                        "\tPassword string  `json:\"password\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tProfile  Profile `json:\"profile\"`\n",
                                        "}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "jdbc-to-member",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L16-L16",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L16-L16",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "b18d65fab4baabc2dab839d7e489c1f2"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "jdbc-to-member",
                                "flow_type": "jdbc-to-member",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 76,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 76,
                                            "offset": 27
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                            ],
                                            "lines": [
                                                "\trows, err := db.Query(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t\treturn User{}, err\n"
                                            ]
                                        }
                                    },
                                    "type": 8,
                                    "metadata": {}
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 15,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 15,
                                            "offset": 9
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n",
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines": [
                                                "\tPassword string  `json:\"password\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Password",
                                        "message": "model/user.go,User,Password"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 76,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 76,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                        "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                                    ],
                                                    "lines": [
                                                        "\trows, err := db.Query(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t\treturn User{}, err\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 13
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 39
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 48
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 99,
                                                    "offset": 18
                                                },
                                                "end": {
                                                    "line": 99,
                                                    "offset": 26
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t}\n",
                                                        "\t\tuser.Name = name\n",
                                                        "\t\tuser.Email = email\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Password = password\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Profile.Position = position\n",
                                                        "\t\tuser.Profile.Phone = phone\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L100-L100"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 94,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 94,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser := User{\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n",
                                                        "\t\tuser.Name = name\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L95-L95"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 98,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 98,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n",
                                                        "\t\tuser.Name = name\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Email = email\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Password = password\n",
                                                        "\t\tuser.Profile.Position = position\n",
                                                        "\t\tuser.Profile.Phone = phone\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L99-L99"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "Personal Characteristics": {
                    "sensitive-info-to-log": [
                        {
                            "artifact_id": "9c8cc42782542c90ebd806c101e01794",
                            "artifact_name": "TaintEngine_sensitive-info-to-log_model/user.go#16/1_->model/user.go#144/13_029a851f39bf8d800db90da5eb372e0d",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 144,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 144,
                                    "offset": 16
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position,\n",
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n"
                                    ],
                                    "lines": [
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\t_, err := db.Exec(sql)\n",
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 0.5,
                                "values": {
                                    "flow_type": "sensitive-info-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L17-L17",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "029a851f39bf8d800db90da5eb372e0d"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Personal Characteristics",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-log",
                                "flow_type": "sensitive-info-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 16,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 16,
                                            "offset": 8
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tName     string  `json:\"name\"`\n",
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n"
                                            ],
                                            "lines": [
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ],
                                            "lines_after": [
                                                "}\n",
                                                "\n",
                                                "type Profile struct {\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Profile"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 144,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 144,
                                            "offset": 16
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position,\n",
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n"
                                            ],
                                            "lines": [
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\t_, err := db.Exec(sql)\n",
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position,\n",
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n"
                                                ],
                                                "lines": [
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\t_, err := db.Exec(sql)\n",
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 141,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 141,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Profile.Position,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L142-L142"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 141,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 141,
                                                    "offset": 23
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Profile.Position,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L142-L142"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 144,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 144,
                                                    "offset": 16
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines": [
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "sensitive-info-to-external-functions": [
                        {
                            "artifact_id": "9ad78705b3d924035fe8527524ce1321",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#16/1_->model/user.go#145/19_029a851f39bf8d800db90da5eb372e0d",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 145,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 145,
                                    "offset": 22
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n",
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines": [
                                        "\t_, err := db.Exec(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 1.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L17-L17",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "029a851f39bf8d800db90da5eb372e0d"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Personal Characteristics",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 16,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 16,
                                            "offset": 8
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tName     string  `json:\"name\"`\n",
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n"
                                            ],
                                            "lines": [
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ],
                                            "lines_after": [
                                                "}\n",
                                                "\n",
                                                "type Profile struct {\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Profile"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 145,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 145,
                                            "offset": 22
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n",
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines": [
                                                "\t_, err := db.Exec(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n",
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines": [
                                                    "\t_, err := db.Exec(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": null
                                        },
                                        "message": "sql"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 141,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 141,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Profile.Position,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L142-L142"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 141,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 141,
                                                    "offset": 23
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Profile.Position,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L142-L142"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 145,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 145,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines": [
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "Container Pii": {
                    "function-param-to-log": [
                        {
                            "artifact_id": "5ecdd0aa45873fd18349d296cfe5c426",
                            "artifact_name": "TaintEngine_function-param-to-log_routes/net_http.go#49/13_->audit/logger.go#9/23_",
                            "code_ref": {
                                "file_path": "audit/logger.go",
                                "start": {
                                    "line": 9,
                                    "offset": 23
                                },
                                "end": {
                                    "line": 9,
                                    "offset": 24
                                },
                                "snippet": {
                                    "lines_before": [
                                        "type Logger struct{}\n",
                                        "\n",
                                        "func (l Logger) info(v ...any) {\n"
                                    ],
                                    "lines": [
                                        "\tlog.Default().Println(v...)\n"
                                    ],
                                    "lines_after": [
                                        "}\n",
                                        "\n",
                                        "func (l Logger) error(v ...any) {\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "function-param-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L50-L50",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "audit",
                                "ruleId": "function-param-to-log",
                                "flow_type": "function-param-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 49,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 49,
                                            "offset": 17
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tauditor := audit.Auditor{\n"
                                            ],
                                            "lines": [
                                                "\t\tUserEmail: user.Email,\n"
                                            ],
                                            "lines_after": [
                                                "\t\tAddedTime: time.Now(),\n",
                                                "\t}\n",
                                                "\tauditor.Audit()\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "db52352cd3e60dc9d79b191c1fc2c98b"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "audit/logger.go",
                                        "start": {
                                            "line": 9,
                                            "offset": 23
                                        },
                                        "end": {
                                            "line": 9,
                                            "offset": 24
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "type Logger struct{}\n",
                                                "\n",
                                                "func (l Logger) info(v ...any) {\n"
                                            ],
                                            "lines": [
                                                "\tlog.Default().Println(v...)\n"
                                            ],
                                            "lines_after": [
                                                "}\n",
                                                "\n",
                                                "func (l Logger) error(v ...any) {\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "audit/logger.go",
                                            "start": {
                                                "line": 9,
                                                "offset": 23
                                            },
                                            "end": {
                                                "line": 9,
                                                "offset": 24
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "type Logger struct{}\n",
                                                    "\n",
                                                    "func (l Logger) info(v ...any) {\n"
                                                ],
                                                "lines": [
                                                    "\tlog.Default().Println(v...)\n"
                                                ],
                                                "lines_after": [
                                                    "}\n",
                                                    "\n",
                                                    "func (l Logger) error(v ...any) {\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "audit/logger.go",
                                            "start": {
                                                "line": 9,
                                                "offset": 23
                                            },
                                            "end": {
                                                "line": 9,
                                                "offset": 24
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 49,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 49,
                                                    "offset": 17
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tauditor := audit.Auditor{\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserEmail: user.Email,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n",
                                                        "\tauditor.Audit()\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L50-L50"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 49,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 49,
                                                    "offset": 23
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tauditor := audit.Auditor{\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserEmail: user.Email,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n",
                                                        "\tauditor.Audit()\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L50-L50"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 48,
                                                    "offset": 12
                                                },
                                                "end": {
                                                    "line": 51,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tauditor := audit.Auditor{\n",
                                                        "\t\tUserEmail: user.Email,\n",
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L49-L52"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 48,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 48,
                                                    "offset": 8
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tauditor := audit.Auditor{\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tUserEmail: user.Email,\n",
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L49-L49"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 52,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 52,
                                                    "offset": 8
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tUserEmail: user.Email,\n",
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n"
                                                    ],
                                                    "lines": [
                                                        "\tauditor.Audit()\n"
                                                    ],
                                                    "lines_after": [
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n",
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L53-L53"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/auditor.go",
                                                "start": {
                                                    "line": 12,
                                                    "offset": 6
                                                },
                                                "end": {
                                                    "line": 12,
                                                    "offset": 7
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tlogger    Logger\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (a Auditor) Audit() {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\ta.logger.info(\"Auditor added %v\", a)\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/auditor.go#L13-L13"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/auditor.go",
                                                "start": {
                                                    "line": 13,
                                                    "offset": 35
                                                },
                                                "end": {
                                                    "line": 13,
                                                    "offset": 36
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (a Auditor) Audit() {\n"
                                                    ],
                                                    "lines": [
                                                        "\ta.logger.info(\"Auditor added %v\", a)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/auditor.go#L14-L14"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/auditor.go",
                                                "start": {
                                                    "line": 13,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 13,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (a Auditor) Audit() {\n"
                                                    ],
                                                    "lines": [
                                                        "\ta.logger.info(\"Auditor added %v\", a)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/auditor.go#L14-L14"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/logger.go",
                                                "start": {
                                                    "line": 8,
                                                    "offset": 21
                                                },
                                                "end": {
                                                    "line": 8,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "type Logger struct{}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (l Logger) info(v ...any) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tlog.Default().Println(v...)\n",
                                                        "}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L9-L9"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/logger.go",
                                                "start": {
                                                    "line": 9,
                                                    "offset": 23
                                                },
                                                "end": {
                                                    "line": 9,
                                                    "offset": 24
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "type Logger struct{}\n",
                                                        "\n",
                                                        "func (l Logger) info(v ...any) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tlog.Default().Println(v...)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n",
                                                        "\n",
                                                        "func (l Logger) error(v ...any) {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/logger.go",
                                                "start": {
                                                    "line": 9,
                                                    "offset": 23
                                                },
                                                "end": {
                                                    "line": 9,
                                                    "offset": 24
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "type Logger struct{}\n",
                                                        "\n",
                                                        "func (l Logger) info(v ...any) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tlog.Default().Println(v...)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n",
                                                        "\n",
                                                        "func (l Logger) error(v ...any) {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "67735a31b911ca2eeaff065265df7091",
                            "artifact_name": "TaintEngine_function-param-to-log_routes/net_http.go#39/33_->audit/logger.go#9/23_",
                            "code_ref": {
                                "file_path": "audit/logger.go",
                                "start": {
                                    "line": 9,
                                    "offset": 23
                                },
                                "end": {
                                    "line": 9,
                                    "offset": 24
                                },
                                "snippet": {
                                    "lines_before": [
                                        "type Logger struct{}\n",
                                        "\n",
                                        "func (l Logger) info(v ...any) {\n"
                                    ],
                                    "lines": [
                                        "\tlog.Default().Println(v...)\n"
                                    ],
                                    "lines_after": [
                                        "}\n",
                                        "\n",
                                        "func (l Logger) error(v ...any) {\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "function-param-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L40-L40",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "audit",
                                "ruleId": "function-param-to-log",
                                "flow_type": "function-param-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 39,
                                            "offset": 33
                                        },
                                        "end": {
                                            "line": 39,
                                            "offset": 37
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                "\t\treturn\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "db52352cd3e60dc9d79b191c1fc2c98b"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "audit/logger.go",
                                        "start": {
                                            "line": 9,
                                            "offset": 23
                                        },
                                        "end": {
                                            "line": 9,
                                            "offset": 24
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "type Logger struct{}\n",
                                                "\n",
                                                "func (l Logger) info(v ...any) {\n"
                                            ],
                                            "lines": [
                                                "\tlog.Default().Println(v...)\n"
                                            ],
                                            "lines_after": [
                                                "}\n",
                                                "\n",
                                                "func (l Logger) error(v ...any) {\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "audit/logger.go",
                                            "start": {
                                                "line": 9,
                                                "offset": 23
                                            },
                                            "end": {
                                                "line": 9,
                                                "offset": 24
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "type Logger struct{}\n",
                                                    "\n",
                                                    "func (l Logger) info(v ...any) {\n"
                                                ],
                                                "lines": [
                                                    "\tlog.Default().Println(v...)\n"
                                                ],
                                                "lines_after": [
                                                    "}\n",
                                                    "\n",
                                                    "func (l Logger) error(v ...any) {\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "audit/logger.go",
                                            "start": {
                                                "line": 9,
                                                "offset": 23
                                            },
                                            "end": {
                                                "line": 9,
                                                "offset": 24
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 32
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 38,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 38,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L39-L39"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 49,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 49,
                                                    "offset": 17
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tauditor := audit.Auditor{\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserEmail: user.Email,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n",
                                                        "\tauditor.Audit()\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L50-L50"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 49,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 49,
                                                    "offset": 23
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tauditor := audit.Auditor{\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserEmail: user.Email,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n",
                                                        "\tauditor.Audit()\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L50-L50"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 48,
                                                    "offset": 12
                                                },
                                                "end": {
                                                    "line": 51,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tauditor := audit.Auditor{\n",
                                                        "\t\tUserEmail: user.Email,\n",
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L49-L52"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 48,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 48,
                                                    "offset": 8
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tauditor := audit.Auditor{\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tUserEmail: user.Email,\n",
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L49-L49"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 52,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 52,
                                                    "offset": 8
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tUserEmail: user.Email,\n",
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n"
                                                    ],
                                                    "lines": [
                                                        "\tauditor.Audit()\n"
                                                    ],
                                                    "lines_after": [
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n",
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L53-L53"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/auditor.go",
                                                "start": {
                                                    "line": 12,
                                                    "offset": 6
                                                },
                                                "end": {
                                                    "line": 12,
                                                    "offset": 7
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tlogger    Logger\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (a Auditor) Audit() {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\ta.logger.info(\"Auditor added %v\", a)\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/auditor.go#L13-L13"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/auditor.go",
                                                "start": {
                                                    "line": 13,
                                                    "offset": 35
                                                },
                                                "end": {
                                                    "line": 13,
                                                    "offset": 36
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (a Auditor) Audit() {\n"
                                                    ],
                                                    "lines": [
                                                        "\ta.logger.info(\"Auditor added %v\", a)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/auditor.go#L14-L14"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/auditor.go",
                                                "start": {
                                                    "line": 13,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 13,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (a Auditor) Audit() {\n"
                                                    ],
                                                    "lines": [
                                                        "\ta.logger.info(\"Auditor added %v\", a)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/auditor.go#L14-L14"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/logger.go",
                                                "start": {
                                                    "line": 8,
                                                    "offset": 21
                                                },
                                                "end": {
                                                    "line": 8,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "type Logger struct{}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (l Logger) info(v ...any) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tlog.Default().Println(v...)\n",
                                                        "}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L9-L9"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/logger.go",
                                                "start": {
                                                    "line": 9,
                                                    "offset": 23
                                                },
                                                "end": {
                                                    "line": 9,
                                                    "offset": 24
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "type Logger struct{}\n",
                                                        "\n",
                                                        "func (l Logger) info(v ...any) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tlog.Default().Println(v...)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n",
                                                        "\n",
                                                        "func (l Logger) error(v ...any) {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/logger.go",
                                                "start": {
                                                    "line": 9,
                                                    "offset": 23
                                                },
                                                "end": {
                                                    "line": 9,
                                                    "offset": 24
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "type Logger struct{}\n",
                                                        "\n",
                                                        "func (l Logger) info(v ...any) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tlog.Default().Println(v...)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n",
                                                        "\n",
                                                        "func (l Logger) error(v ...any) {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "pii-to-rest-return": [],
                    "param-to-external": [
                        {
                            "artifact_id": "22b3a3ec3153c4c8b70fbda0176bb534",
                            "artifact_name": "TaintEngine_param-to-external_routes/net_http.go#29/36_->routes/net_http.go#32/29_",
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 32,
                                    "offset": 29
                                },
                                "end": {
                                    "line": 32,
                                    "offset": 35
                                },
                                "snippet": {
                                    "lines_before": [
                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                        "\n"
                                    ],
                                    "lines": [
                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                        "\t\treturn\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L30-L30",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 29,
                                            "offset": 36
                                        },
                                        "end": {
                                            "line": 29,
                                            "offset": 37
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tw.Write([]byte(\"ok\\n\"))\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "r",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "db52352cd3e60dc9d79b191c1fc2c98b"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 32,
                                            "offset": 29
                                        },
                                        "end": {
                                            "line": 32,
                                            "offset": 35
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                "\t\treturn\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 29
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 35
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                    "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                    "\n"
                                                ],
                                                "lines": [
                                                    "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                    "\t\treturn\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 29
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 35
                                            },
                                            "snippet": null
                                        },
                                        "message": "selection of Body"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 36
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 35
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "f9b63d4b8c0c2a447a881a087035356f",
                            "artifact_name": "TaintEngine_param-to-external_routes/net_http.go#23/37_->routes/net_http.go#32/29_",
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 32,
                                    "offset": 29
                                },
                                "end": {
                                    "line": 32,
                                    "offset": 35
                                },
                                "snippet": {
                                    "lines_before": [
                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                        "\n"
                                    ],
                                    "lines": [
                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                        "\t\treturn\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L24-L24",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 23,
                                            "offset": 37
                                        },
                                        "end": {
                                            "line": 23,
                                            "offset": 38
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\tmodel.UserObj{}.ReadAll(db)\n",
                                                "\tw.Write([]byte(\"ok\\n\"))\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "r",
                                        "function_name": "UserList",
                                        "param_function_artifact_id": "6ac9487005e808729a3a31d4174508d9"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 32,
                                            "offset": 29
                                        },
                                        "end": {
                                            "line": 32,
                                            "offset": 35
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                "\t\treturn\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 29
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 35
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                    "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                    "\n"
                                                ],
                                                "lines": [
                                                    "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                    "\t\treturn\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 29
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 35
                                            },
                                            "snippet": null
                                        },
                                        "message": "selection of Body"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 23,
                                                    "offset": 37
                                                },
                                                "end": {
                                                    "line": 23,
                                                    "offset": 38
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\tmodel.UserObj{}.ReadAll(db)\n",
                                                        "\tw.Write([]byte(\"ok\\n\"))\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L24-L24"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 14,
                                                    "offset": 40
                                                },
                                                "end": {
                                                    "line": 14,
                                                    "offset": 41
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\"go-test-project/util\"\n",
                                                        ")\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserHandler(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tswitch r.Method {\n",
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L15-L15"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 19,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 19,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n",
                                                        "\tcase \"POST\":\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserAdd(w, r)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L20-L20"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 36
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 35
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "076b5865984966bba893a3669210177b",
                            "artifact_name": "TaintEngine_param-to-external_routes/net_http.go#55/16_->routes/net_http.go#55/9_",
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 55,
                                    "offset": 9
                                },
                                "end": {
                                    "line": 55,
                                    "offset": 39
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tauditor.Audit()\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 55,
                                            "offset": 16
                                        },
                                        "end": {
                                            "line": 55,
                                            "offset": 20
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tauditor.Audit()\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "db52352cd3e60dc9d79b191c1fc2c98b"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 55,
                                            "offset": 9
                                        },
                                        "end": {
                                            "line": 55,
                                            "offset": 39
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tauditor.Audit()\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 55,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 55,
                                                "offset": 39
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\tauditor.Audit()\n",
                                                    "\n",
                                                    "\tmodel.UserObj{}.Add(db, user)\n"
                                                ],
                                                "lines": [
                                                    "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                ],
                                                "lines_after": [
                                                    "}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 55,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 55,
                                                "offset": 39
                                            },
                                            "snippet": null
                                        },
                                        "message": "type conversion"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 20
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 25
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 38
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 39
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "4024c66d630ecd5ff43cbb339b9899ec",
                            "artifact_name": "TaintEngine_param-to-external_routes/net_http.go#39/33_->routes/net_http.go#55/9_",
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 55,
                                    "offset": 9
                                },
                                "end": {
                                    "line": 55,
                                    "offset": 39
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tauditor.Audit()\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L40-L40",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 39,
                                            "offset": 33
                                        },
                                        "end": {
                                            "line": 39,
                                            "offset": 37
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                "\t\treturn\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "db52352cd3e60dc9d79b191c1fc2c98b"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 55,
                                            "offset": 9
                                        },
                                        "end": {
                                            "line": 55,
                                            "offset": 39
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tauditor.Audit()\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 55,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 55,
                                                "offset": 39
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\tauditor.Audit()\n",
                                                    "\n",
                                                    "\tmodel.UserObj{}.Add(db, user)\n"
                                                ],
                                                "lines": [
                                                    "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                ],
                                                "lines_after": [
                                                    "}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 55,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 55,
                                                "offset": 39
                                            },
                                            "snippet": null
                                        },
                                        "message": "type conversion"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 32
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 38,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 38,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L39-L39"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 20
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 25
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 38
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 39
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "00b6eb4acc0b01d7346e0ea492606d70",
                            "artifact_name": "TaintEngine_param-to-external_routes/net_http.go#29/36_->routes/net_http.go#55/9_",
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 55,
                                    "offset": 9
                                },
                                "end": {
                                    "line": 55,
                                    "offset": 39
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tauditor.Audit()\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L30-L30",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 29,
                                            "offset": 36
                                        },
                                        "end": {
                                            "line": 29,
                                            "offset": 37
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tw.Write([]byte(\"ok\\n\"))\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "r",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "db52352cd3e60dc9d79b191c1fc2c98b"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 55,
                                            "offset": 9
                                        },
                                        "end": {
                                            "line": 55,
                                            "offset": 39
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tauditor.Audit()\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 55,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 55,
                                                "offset": 39
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\tauditor.Audit()\n",
                                                    "\n",
                                                    "\tmodel.UserObj{}.Add(db, user)\n"
                                                ],
                                                "lines": [
                                                    "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                ],
                                                "lines_after": [
                                                    "}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 55,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 55,
                                                "offset": 39
                                            },
                                            "snippet": null
                                        },
                                        "message": "type conversion"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 36
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 35
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 36
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 5
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 26
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 32
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 38,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 38,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L39-L39"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 20
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 25
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 38
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 39
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "372d5a27723cceb87aaeebd9f02d07b6",
                            "artifact_name": "TaintEngine_param-to-external_routes/net_http.go#23/37_->routes/net_http.go#55/9_",
                            "code_ref": {
                                "file_path": "routes/net_http.go",
                                "start": {
                                    "line": 55,
                                    "offset": 9
                                },
                                "end": {
                                    "line": 55,
                                    "offset": 39
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tauditor.Audit()\n",
                                        "\n",
                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                    ],
                                    "lines": [
                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                    ],
                                    "lines_after": [
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L24-L24",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 23,
                                            "offset": 37
                                        },
                                        "end": {
                                            "line": 23,
                                            "offset": 38
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\tmodel.UserObj{}.ReadAll(db)\n",
                                                "\tw.Write([]byte(\"ok\\n\"))\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "r",
                                        "function_name": "UserList",
                                        "param_function_artifact_id": "6ac9487005e808729a3a31d4174508d9"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/net_http.go",
                                        "start": {
                                            "line": 55,
                                            "offset": 9
                                        },
                                        "end": {
                                            "line": 55,
                                            "offset": 39
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tauditor.Audit()\n",
                                                "\n",
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines": [
                                                "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                            ],
                                            "lines_after": [
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 55,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 55,
                                                "offset": 39
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\tauditor.Audit()\n",
                                                    "\n",
                                                    "\tmodel.UserObj{}.Add(db, user)\n"
                                                ],
                                                "lines": [
                                                    "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                ],
                                                "lines_after": [
                                                    "}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/net_http.go",
                                            "start": {
                                                "line": 55,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 55,
                                                "offset": 39
                                            },
                                            "snippet": null
                                        },
                                        "message": "type conversion"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 23,
                                                    "offset": 37
                                                },
                                                "end": {
                                                    "line": 23,
                                                    "offset": 38
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\tmodel.UserObj{}.ReadAll(db)\n",
                                                        "\tw.Write([]byte(\"ok\\n\"))\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L24-L24"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 14,
                                                    "offset": 40
                                                },
                                                "end": {
                                                    "line": 14,
                                                    "offset": 41
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\"go-test-project/util\"\n",
                                                        ")\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserHandler(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tswitch r.Method {\n",
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L15-L15"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 19,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 19,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n",
                                                        "\tcase \"POST\":\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserAdd(w, r)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L20-L20"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 36
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 35
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 36
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 5
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 26
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 32
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 38,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 38,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L39-L39"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 20
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 25
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 16
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 38
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/net_http.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 39
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tauditor.Audit()\n",
                                                        "\n",
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines": [
                                                        "\tw.Write([]byte(user.Name + \" added\\n\"))\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/net_http.go#L56-L56"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ]
                }
            }
        },
        "filtered_artifacts": {
            "filtered_by_class_name": [],
            "non_pii_artifacts": [
                {
                    "artifact_id": "5c6322f3e024cae783781884df7f4e50",
                    "artifact_name": "AddedTime@go-test-project/audit.Auditor.AddedTime#audit/auditor.go",
                    "code_ref": {
                        "file_path": "audit/auditor.go",
                        "start": {
                            "line": 8,
                            "offset": 1
                        },
                        "end": {
                            "line": 8,
                            "offset": 10
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "AddedTime",
                                "field_type": {
                                    "field_type_def": null,
                                    "field_type_name": "Time",
                                    "field_type_def_package": "time.Time"
                                },
                                "code_ref": {
                                    "file_path": "audit/auditor.go",
                                    "start": {
                                        "line": 8,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 8,
                                        "offset": 10
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "go-test-project/audit.Auditor.AddedTime",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "audit/auditor.go",
                                "start": {
                                    "line": 6,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 6,
                                    "offset": 12
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "Auditor",
                        "class_def_line_num": 6,
                        "field_name": "AddedTime",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Not Pii",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "fa4b057acc48ae76fb54db0a6a0ea6dd",
                    "artifact_name": "logger@go-test-project/audit.Auditor.logger#audit/auditor.go",
                    "code_ref": {
                        "file_path": "audit/auditor.go",
                        "start": {
                            "line": 9,
                            "offset": 1
                        },
                        "end": {
                            "line": 9,
                            "offset": 7
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "logger",
                                "field_type": {
                                    "field_type_def": {
                                        "file_path": "audit/logger.go",
                                        "start": {
                                            "line": 6,
                                            "offset": 5
                                        },
                                        "end": {
                                            "line": 6,
                                            "offset": 11
                                        },
                                        "snippet": null
                                    },
                                    "field_type_name": "Logger",
                                    "field_type_def_package": "go-test-project/audit.Logger"
                                },
                                "code_ref": {
                                    "file_path": "audit/auditor.go",
                                    "start": {
                                        "line": 9,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 9,
                                        "offset": 7
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "go-test-project/audit.Auditor.logger",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "audit/auditor.go",
                                "start": {
                                    "line": 6,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 6,
                                    "offset": 12
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "Auditor",
                        "class_def_line_num": 6,
                        "field_name": "logger",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Not Pii",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "d1a89d9788a830990adeed4f6669f70c",
                    "artifact_name": "DB@go-test-project/dal.Storage.DB#dal/db.go",
                    "code_ref": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 14,
                            "offset": 1
                        },
                        "end": {
                            "line": 14,
                            "offset": 3
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "DB",
                                "field_type": {
                                    "field_type_def": null,
                                    "field_type_name": "DB",
                                    "field_type_def_package": "database/sql.DB"
                                },
                                "code_ref": {
                                    "file_path": "dal/db.go",
                                    "start": {
                                        "line": 14,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 14,
                                        "offset": 3
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "go-test-project/dal.Storage.DB",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 13,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 13,
                                    "offset": 12
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "Storage",
                        "class_def_line_num": 13,
                        "field_name": "DB",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Not Pii",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "b649d9dbe32ef9e413de645f9d5c3869",
                    "artifact_name": "Name@go-test-project/dal.Storage.Name#dal/db.go",
                    "code_ref": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 15,
                            "offset": 1
                        },
                        "end": {
                            "line": 15,
                            "offset": 5
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "Name",
                                "field_type": {
                                    "field_type_def": null,
                                    "field_type_name": "string",
                                    "field_type_def_package": ""
                                },
                                "code_ref": {
                                    "file_path": "dal/db.go",
                                    "start": {
                                        "line": 15,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 15,
                                        "offset": 5
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "go-test-project/dal.Storage.Name",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 13,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 13,
                                    "offset": 12
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "Storage",
                        "class_def_line_num": 13,
                        "field_name": "Name",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Not Pii",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "15ced23f84aaa54c61554da43bdd0781",
                    "artifact_name": "auditor@go-test-project/dal.Storage.auditor#dal/db.go",
                    "code_ref": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 16,
                            "offset": 1
                        },
                        "end": {
                            "line": 16,
                            "offset": 8
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "auditor",
                                "field_type": {
                                    "field_type_def": {
                                        "file_path": "audit/auditor.go",
                                        "start": {
                                            "line": 6,
                                            "offset": 5
                                        },
                                        "end": {
                                            "line": 6,
                                            "offset": 12
                                        },
                                        "snippet": null
                                    },
                                    "field_type_name": "Auditor",
                                    "field_type_def_package": "go-test-project/audit.Auditor"
                                },
                                "code_ref": {
                                    "file_path": "dal/db.go",
                                    "start": {
                                        "line": 16,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 16,
                                        "offset": 8
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "go-test-project/dal.Storage.auditor",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 13,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 13,
                                    "offset": 12
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "Storage",
                        "class_def_line_num": 13,
                        "field_name": "auditor",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Not Pii",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "a8070446202c2c36d41f1babf07ab3b9",
                    "artifact_name": "Host@go-test-project/dal.connData.Host#dal/db.go",
                    "code_ref": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 20,
                            "offset": 1
                        },
                        "end": {
                            "line": 20,
                            "offset": 5
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "Host",
                                "field_type": {
                                    "field_type_def": {
                                        "file_path": "dal/host.go",
                                        "start": {
                                            "line": 2,
                                            "offset": 5
                                        },
                                        "end": {
                                            "line": 2,
                                            "offset": 9
                                        },
                                        "snippet": null
                                    },
                                    "field_type_name": "Host",
                                    "field_type_def_package": "go-test-project/dal.Host"
                                },
                                "code_ref": {
                                    "file_path": "dal/db.go",
                                    "start": {
                                        "line": 20,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 20,
                                        "offset": 5
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "go-test-project/dal.connData.Host",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 19,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 19,
                                    "offset": 13
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "connData",
                        "class_def_line_num": 19,
                        "field_name": "Host",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Not Pii",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "a6b52f750752c1f07e020156a7af67a7",
                    "artifact_name": "user@go-test-project/dal.connData.user#dal/db.go",
                    "code_ref": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 21,
                            "offset": 1
                        },
                        "end": {
                            "line": 21,
                            "offset": 5
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "user",
                                "field_type": {
                                    "field_type_def": null,
                                    "field_type_name": "string",
                                    "field_type_def_package": ""
                                },
                                "code_ref": {
                                    "file_path": "dal/db.go",
                                    "start": {
                                        "line": 21,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 21,
                                        "offset": 5
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "go-test-project/dal.connData.user",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 19,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 19,
                                    "offset": 13
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "connData",
                        "class_def_line_num": 19,
                        "field_name": "user",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Not Pii",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "ec8f1fa9e815777bce2f5fe156601ca2",
                    "artifact_name": "pass@go-test-project/dal.connData.pass#dal/db.go",
                    "code_ref": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 22,
                            "offset": 1
                        },
                        "end": {
                            "line": 22,
                            "offset": 5
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "pass",
                                "field_type": {
                                    "field_type_def": null,
                                    "field_type_name": "string",
                                    "field_type_def_package": ""
                                },
                                "code_ref": {
                                    "file_path": "dal/db.go",
                                    "start": {
                                        "line": 22,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 22,
                                        "offset": 5
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "go-test-project/dal.connData.pass",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 19,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 19,
                                    "offset": 13
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "connData",
                        "class_def_line_num": 19,
                        "field_name": "pass",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Not Pii",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "053802c9fbca647097d0d9af839ba99d",
                    "artifact_name": "dbname@go-test-project/dal.connData.dbname#dal/db.go",
                    "code_ref": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 23,
                            "offset": 1
                        },
                        "end": {
                            "line": 23,
                            "offset": 7
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "dbname",
                                "field_type": {
                                    "field_type_def": null,
                                    "field_type_name": "string",
                                    "field_type_def_package": ""
                                },
                                "code_ref": {
                                    "file_path": "dal/db.go",
                                    "start": {
                                        "line": 23,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 23,
                                        "offset": 7
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "go-test-project/dal.connData.dbname",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 19,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 19,
                                    "offset": 13
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "connData",
                        "class_def_line_num": 19,
                        "field_name": "dbname",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Not Pii",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "87bd0ef5f386a1791fcec2fa76775099",
                    "artifact_name": "sslMode@go-test-project/dal.connData.sslMode#dal/db.go",
                    "code_ref": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 24,
                            "offset": 1
                        },
                        "end": {
                            "line": 24,
                            "offset": 8
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "sslMode",
                                "field_type": {
                                    "field_type_def": null,
                                    "field_type_name": "string",
                                    "field_type_def_package": ""
                                },
                                "code_ref": {
                                    "file_path": "dal/db.go",
                                    "start": {
                                        "line": 24,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 24,
                                        "offset": 8
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "go-test-project/dal.connData.sslMode",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 19,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 19,
                                    "offset": 13
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "connData",
                        "class_def_line_num": 19,
                        "field_name": "sslMode",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Not Pii",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "9aaf850b2e5357b6918e384a208a5d6d",
                    "artifact_name": "Position@go-test-project/model.Profile.Position#model/user.go",
                    "code_ref": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 20,
                            "offset": 1
                        },
                        "end": {
                            "line": 20,
                            "offset": 9
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "Position",
                                "field_type": {
                                    "field_type_def": null,
                                    "field_type_name": "string",
                                    "field_type_def_package": ""
                                },
                                "code_ref": {
                                    "file_path": "model/user.go",
                                    "start": {
                                        "line": 20,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 20,
                                        "offset": 9
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "go-test-project/model.Profile.Position",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 19,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 19,
                                    "offset": 12
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "Profile",
                        "class_def_line_num": 19,
                        "field_name": "Position",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Not Pii",
                        "package": "",
                        "field_type_information": []
                    }
                }
            ],
            "filtered_by_type_definition": []
        }
    },
    "engines": [
        "class_members",
        "container",
        "rest_api",
        "functions",
        "TaintEngine",
        "persistency",
        "sensitivity_scorer",
        "GitURLEngine",
        "GitBlameEngine"
    ],
    "messages": []
}
