{
    "scan_id": "0",
    "start_time": 1703574241927,
    "modified_time": 1703574563868.21,
    "status_msg": "",
    "progress_percentage": 100,
    "scanned_number_of_files": 0,
    "total_number_of_files": 0,
    "num_developers": 7,
    "failure_reason": "",
    "compressed": false,
    "scanner_version": "0.4",
    "git_url": "https://github.com/piiano/code-scanner-test.git",
    "working_project_location": "/Users/yossilavi/PycharmProjects/code-scan-engine/temp/code-scanner-test-go_62d64/go/go-test-project/source/",
    "project_location": "test_resources/projects/code-scanner-test-go",
    "project_name": "code-scanner-test",
    "language": "go",
    "active_branch_name": "main",
    "last_commit_date": 1703431831,
    "status": "Completed",
    "project_metadata": {
        "classes": [
            {
                "name": "Auditor",
                "path": "audit/auditor.go",
                "fields": [
                    "UserEmail",
                    "AddedTime",
                    "logger"
                ],
                "field_types": [
                    "",
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "UserEmail",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "audit/auditor.go",
                                "start": {
                                    "line": 7,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 7,
                                    "offset": 10
                                },
                                "snippet": null
                            },
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "audit/auditor.go",
                            "start": {
                                "line": 7,
                                "offset": 1
                            },
                            "end": {
                                "line": 7,
                                "offset": 10
                            },
                            "snippet": {
                                "lines_before": [
                                    ")\n",
                                    "\n",
                                    "type Auditor struct {\n"
                                ],
                                "lines": [
                                    "\tUserEmail string\n"
                                ],
                                "lines_after": [
                                    "\tAddedTime time.Time\n",
                                    "\tlogger    Logger\n",
                                    "}\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    },
                    {
                        "field_name": "AddedTime",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "audit/auditor.go",
                                "start": {
                                    "line": 8,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 8,
                                    "offset": 10
                                },
                                "snippet": null
                            },
                            "field_type_name": "Time",
                            "field_type_def_package": "time"
                        },
                        "code_ref": {
                            "file_path": "audit/auditor.go",
                            "start": {
                                "line": 8,
                                "offset": 1
                            },
                            "end": {
                                "line": 8,
                                "offset": 10
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "time",
                        "generic_types": []
                    },
                    {
                        "field_name": "logger",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "audit/logger.go",
                                "start": {
                                    "line": 6,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 6,
                                    "offset": 11
                                },
                                "snippet": null
                            },
                            "field_type_name": "Logger",
                            "field_type_def_package": "audit"
                        },
                        "code_ref": {
                            "file_path": "audit/auditor.go",
                            "start": {
                                "line": 9,
                                "offset": 1
                            },
                            "end": {
                                "line": 9,
                                "offset": 7
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/audit",
                        "generic_types": []
                    }
                ]
            },
            {
                "name": "ContextInjector",
                "path": "main.go",
                "fields": [
                    "ctx",
                    "h"
                ],
                "field_types": [
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "ctx",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "main.go",
                                "start": {
                                    "line": 14,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 14,
                                    "offset": 4
                                },
                                "snippet": null
                            },
                            "field_type_name": "Context",
                            "field_type_def_package": "context"
                        },
                        "code_ref": {
                            "file_path": "main.go",
                            "start": {
                                "line": 14,
                                "offset": 1
                            },
                            "end": {
                                "line": 14,
                                "offset": 4
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "context",
                        "generic_types": []
                    },
                    {
                        "field_name": "h",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "main.go",
                                "start": {
                                    "line": 15,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 15,
                                    "offset": 2
                                },
                                "snippet": null
                            },
                            "field_type_name": "Handler",
                            "field_type_def_package": "http"
                        },
                        "code_ref": {
                            "file_path": "main.go",
                            "start": {
                                "line": 15,
                                "offset": 1
                            },
                            "end": {
                                "line": 15,
                                "offset": 2
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "net/http",
                        "generic_types": []
                    }
                ]
            },
            {
                "name": "Host",
                "path": "dal/host.go",
                "fields": [
                    "host",
                    "port"
                ],
                "field_types": [
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "host",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "dal/host.go",
                                "start": {
                                    "line": 3,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 3,
                                    "offset": 5
                                },
                                "snippet": null
                            },
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "dal/host.go",
                            "start": {
                                "line": 3,
                                "offset": 1
                            },
                            "end": {
                                "line": 3,
                                "offset": 5
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    },
                    {
                        "field_name": "port",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "dal/host.go",
                                "start": {
                                    "line": 4,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 4,
                                    "offset": 5
                                },
                                "snippet": null
                            },
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "dal/host.go",
                            "start": {
                                "line": 4,
                                "offset": 1
                            },
                            "end": {
                                "line": 4,
                                "offset": 5
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    }
                ]
            },
            {
                "name": "Storage",
                "path": "dal/db.go",
                "fields": [
                    "DB",
                    "Name",
                    "auditor"
                ],
                "field_types": [
                    "",
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "DB",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 14,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 14,
                                    "offset": 3
                                },
                                "snippet": null
                            },
                            "field_type_name": "DB",
                            "field_type_def_package": "sql"
                        },
                        "code_ref": {
                            "file_path": "dal/db.go",
                            "start": {
                                "line": 14,
                                "offset": 1
                            },
                            "end": {
                                "line": 14,
                                "offset": 3
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "database/sql",
                        "generic_types": []
                    },
                    {
                        "field_name": "Name",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 15,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 15,
                                    "offset": 5
                                },
                                "snippet": null
                            },
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "dal/db.go",
                            "start": {
                                "line": 15,
                                "offset": 1
                            },
                            "end": {
                                "line": 15,
                                "offset": 5
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    },
                    {
                        "field_name": "auditor",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "audit/auditor.go",
                                "start": {
                                    "line": 6,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 6,
                                    "offset": 12
                                },
                                "snippet": null
                            },
                            "field_type_name": "Auditor",
                            "field_type_def_package": "audit"
                        },
                        "code_ref": {
                            "file_path": "dal/db.go",
                            "start": {
                                "line": 16,
                                "offset": 1
                            },
                            "end": {
                                "line": 16,
                                "offset": 8
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/audit",
                        "generic_types": []
                    }
                ]
            },
            {
                "name": "connData",
                "path": "dal/host.go",
                "fields": [
                    "host",
                    "port"
                ],
                "field_types": [
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "host",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "dal/host.go",
                                "start": {
                                    "line": 3,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 3,
                                    "offset": 5
                                },
                                "snippet": null
                            },
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "dal/host.go",
                            "start": {
                                "line": 3,
                                "offset": 1
                            },
                            "end": {
                                "line": 3,
                                "offset": 5
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    },
                    {
                        "field_name": "port",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "dal/host.go",
                                "start": {
                                    "line": 4,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 4,
                                    "offset": 5
                                },
                                "snippet": null
                            },
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "dal/host.go",
                            "start": {
                                "line": 4,
                                "offset": 1
                            },
                            "end": {
                                "line": 4,
                                "offset": 5
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    }
                ]
            },
            {
                "name": "connData",
                "path": "dal/db.go",
                "fields": [
                    "Host",
                    "user",
                    "pass",
                    "dbname",
                    "sslMode"
                ],
                "field_types": [
                    "",
                    "",
                    "",
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    [],
                    [],
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "Host",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "dal/host.go",
                                "start": {
                                    "line": 2,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 2,
                                    "offset": 9
                                },
                                "snippet": null
                            },
                            "field_type_name": "Host",
                            "field_type_def_package": "dal"
                        },
                        "code_ref": {
                            "file_path": "dal/db.go",
                            "start": {
                                "line": 20,
                                "offset": 1
                            },
                            "end": {
                                "line": 20,
                                "offset": 5
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/dal",
                        "generic_types": []
                    },
                    {
                        "field_name": "user",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 21,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 21,
                                    "offset": 5
                                },
                                "snippet": null
                            },
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "dal/db.go",
                            "start": {
                                "line": 21,
                                "offset": 1
                            },
                            "end": {
                                "line": 21,
                                "offset": 5
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    },
                    {
                        "field_name": "pass",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 22,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 22,
                                    "offset": 5
                                },
                                "snippet": null
                            },
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "dal/db.go",
                            "start": {
                                "line": 22,
                                "offset": 1
                            },
                            "end": {
                                "line": 22,
                                "offset": 5
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    },
                    {
                        "field_name": "dbname",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 23,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 23,
                                    "offset": 7
                                },
                                "snippet": null
                            },
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "dal/db.go",
                            "start": {
                                "line": 23,
                                "offset": 1
                            },
                            "end": {
                                "line": 23,
                                "offset": 7
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    },
                    {
                        "field_name": "sslMode",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 24,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 24,
                                    "offset": 8
                                },
                                "snippet": null
                            },
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "dal/db.go",
                            "start": {
                                "line": 24,
                                "offset": 1
                            },
                            "end": {
                                "line": 24,
                                "offset": 8
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    }
                ]
            },
            {
                "name": "HostError",
                "path": "util/error.go",
                "fields": [
                    "Logger",
                    "error"
                ],
                "field_types": [
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "Logger",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "util/error.go",
                                "start": {
                                    "line": 5,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 5,
                                    "offset": 11
                                },
                                "snippet": null
                            },
                            "field_type_name": "Logger",
                            "field_type_def_package": "log"
                        },
                        "code_ref": {
                            "file_path": "util/error.go",
                            "start": {
                                "line": 5,
                                "offset": 5
                            },
                            "end": {
                                "line": 5,
                                "offset": 11
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "log",
                        "generic_types": []
                    },
                    {
                        "field_name": "error",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "util/error.go",
                                "start": {
                                    "line": 6,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 6,
                                    "offset": 6
                                },
                                "snippet": null
                            },
                            "field_type_name": "error",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "util/error.go",
                            "start": {
                                "line": 6,
                                "offset": 1
                            },
                            "end": {
                                "line": 6,
                                "offset": 6
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    }
                ]
            },
            {
                "name": "User",
                "path": "model/user.go",
                "fields": [
                    "ID",
                    "Name",
                    "Email",
                    "Password",
                    "Profile"
                ],
                "field_types": [
                    "",
                    "",
                    "",
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    [],
                    [],
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "ID",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 12,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 12,
                                    "offset": 3
                                },
                                "snippet": null
                            },
                            "field_type_name": "int",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 12,
                                "offset": 1
                            },
                            "end": {
                                "line": 12,
                                "offset": 3
                            },
                            "snippet": {
                                "lines_before": [
                                    "}\n",
                                    "\n",
                                    "type User struct {\n"
                                ],
                                "lines": [
                                    "\tID       int     `json:\"id\"`\n"
                                ],
                                "lines_after": [
                                    "\tName     string  `json:\"name\"`\n",
                                    "\tEmail    string  `json:\"email\"`\n",
                                    "\tPassword string  `json:\"password\"`\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    },
                    {
                        "field_name": "Name",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 13,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 13,
                                    "offset": 5
                                },
                                "snippet": null
                            },
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 13,
                                "offset": 1
                            },
                            "end": {
                                "line": 13,
                                "offset": 5
                            },
                            "snippet": {
                                "lines_before": [
                                    "\n",
                                    "type User struct {\n",
                                    "\tID       int     `json:\"id\"`\n"
                                ],
                                "lines": [
                                    "\tName     string  `json:\"name\"`\n"
                                ],
                                "lines_after": [
                                    "\tEmail    string  `json:\"email\"`\n",
                                    "\tPassword string  `json:\"password\"`\n",
                                    "\tProfile  Profile `json:\"profile\"`\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    },
                    {
                        "field_name": "Email",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 14,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 14,
                                    "offset": 6
                                },
                                "snippet": null
                            },
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 14,
                                "offset": 1
                            },
                            "end": {
                                "line": 14,
                                "offset": 6
                            },
                            "snippet": {
                                "lines_before": [
                                    "type User struct {\n",
                                    "\tID       int     `json:\"id\"`\n",
                                    "\tName     string  `json:\"name\"`\n"
                                ],
                                "lines": [
                                    "\tEmail    string  `json:\"email\"`\n"
                                ],
                                "lines_after": [
                                    "\tPassword string  `json:\"password\"`\n",
                                    "\tProfile  Profile `json:\"profile\"`\n",
                                    "}\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    },
                    {
                        "field_name": "Password",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 15,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 15,
                                    "offset": 9
                                },
                                "snippet": null
                            },
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 15,
                                "offset": 1
                            },
                            "end": {
                                "line": 15,
                                "offset": 9
                            },
                            "snippet": {
                                "lines_before": [
                                    "\tID       int     `json:\"id\"`\n",
                                    "\tName     string  `json:\"name\"`\n",
                                    "\tEmail    string  `json:\"email\"`\n"
                                ],
                                "lines": [
                                    "\tPassword string  `json:\"password\"`\n"
                                ],
                                "lines_after": [
                                    "\tProfile  Profile `json:\"profile\"`\n",
                                    "}\n",
                                    "\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    },
                    {
                        "field_name": "Profile",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 19,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 19,
                                    "offset": 12
                                },
                                "snippet": null
                            },
                            "field_type_name": "Profile",
                            "field_type_def_package": "model"
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 16,
                                "offset": 1
                            },
                            "end": {
                                "line": 16,
                                "offset": 8
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/model",
                        "generic_types": []
                    }
                ]
            },
            {
                "name": "Profile",
                "path": "model/user.go",
                "fields": [
                    "Position",
                    "Phone",
                    "Address"
                ],
                "field_types": [
                    "",
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "Position",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 20,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 20,
                                    "offset": 9
                                },
                                "snippet": null
                            },
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 20,
                                "offset": 1
                            },
                            "end": {
                                "line": 20,
                                "offset": 9
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    },
                    {
                        "field_name": "Phone",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 21,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 21,
                                    "offset": 6
                                },
                                "snippet": null
                            },
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 21,
                                "offset": 1
                            },
                            "end": {
                                "line": 21,
                                "offset": 6
                            },
                            "snippet": {
                                "lines_before": [
                                    "\n",
                                    "type Profile struct {\n",
                                    "\tPosition string `json:\"position\"`\n"
                                ],
                                "lines": [
                                    "\tPhone    string `json:\"phone\"`\n"
                                ],
                                "lines_after": [
                                    "\tAddress  Addr   `json:\"address\"`\n",
                                    "}\n",
                                    "\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    },
                    {
                        "field_name": "Address",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 25,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 25,
                                    "offset": 9
                                },
                                "snippet": null
                            },
                            "field_type_name": "Addr",
                            "field_type_def_package": "model"
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 22,
                                "offset": 1
                            },
                            "end": {
                                "line": 22,
                                "offset": 8
                            },
                            "snippet": null
                        },
                        "field_fully_qualified_name": "go-test-project/model",
                        "generic_types": []
                    }
                ]
            },
            {
                "name": "Addr",
                "path": "model/user.go",
                "fields": [
                    "Street",
                    "City",
                    "Country"
                ],
                "field_types": [
                    "",
                    "",
                    ""
                ],
                "field_types_information": [
                    [],
                    [],
                    []
                ],
                "fields_information": [
                    {
                        "field_name": "Street",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 26,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 26,
                                    "offset": 7
                                },
                                "snippet": null
                            },
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 26,
                                "offset": 1
                            },
                            "end": {
                                "line": 26,
                                "offset": 7
                            },
                            "snippet": {
                                "lines_before": [
                                    "}\n",
                                    "\n",
                                    "type Addr struct {\n"
                                ],
                                "lines": [
                                    "\tStreet  string `json:\"street\"`\n"
                                ],
                                "lines_after": [
                                    "\tCity    string `json:\"city\"`\n",
                                    "\tCountry string `json:\"country\"`\n",
                                    "}\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    },
                    {
                        "field_name": "City",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 27,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 27,
                                    "offset": 5
                                },
                                "snippet": null
                            },
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 27,
                                "offset": 1
                            },
                            "end": {
                                "line": 27,
                                "offset": 5
                            },
                            "snippet": {
                                "lines_before": [
                                    "\n",
                                    "type Addr struct {\n",
                                    "\tStreet  string `json:\"street\"`\n"
                                ],
                                "lines": [
                                    "\tCity    string `json:\"city\"`\n"
                                ],
                                "lines_after": [
                                    "\tCountry string `json:\"country\"`\n",
                                    "}\n",
                                    "\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    },
                    {
                        "field_name": "Country",
                        "field_type": {
                            "field_type_def": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 28,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 28,
                                    "offset": 8
                                },
                                "snippet": null
                            },
                            "field_type_name": "string",
                            "field_type_def_package": ""
                        },
                        "code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 28,
                                "offset": 1
                            },
                            "end": {
                                "line": 28,
                                "offset": 8
                            },
                            "snippet": {
                                "lines_before": [
                                    "type Addr struct {\n",
                                    "\tStreet  string `json:\"street\"`\n",
                                    "\tCity    string `json:\"city\"`\n"
                                ],
                                "lines": [
                                    "\tCountry string `json:\"country\"`\n"
                                ],
                                "lines_after": [
                                    "}\n",
                                    "\n",
                                    "func CreateUserTable(db *sql.DB, name string) {\n"
                                ]
                            }
                        },
                        "field_fully_qualified_name": "",
                        "generic_types": []
                    }
                ]
            }
        ],
        "containers_hierarchy": {
            "f2e166219d8780ba31e73b5d5203b02c": {},
            "d46bd02620d1e8a9f4ca55e3f2570156": {},
            "f1fd4aa0048d2789395e319af3caa82f": {},
            "613a910946d28c4d2dbc39e5876e47de": {},
            "cd922cd9e06aba5943de1f6f58e9141d": {},
            "cef83ac876ca3ef5eba30f6b1eeb8c72": {}
        }
    },
    "results": {
        "artifacts": [
            {
                "artifact_id": "904fbf2835154b02863d3c0de5e3bfa1",
                "artifact_name": "UserEmail@#audit/auditor.go",
                "code_ref": {
                    "file_path": "audit/auditor.go",
                    "start": {
                        "line": 7,
                        "offset": 1
                    },
                    "end": {
                        "line": 7,
                        "offset": 10
                    },
                    "snippet": {
                        "lines_before": [
                            ")\n",
                            "\n",
                            "type Auditor struct {\n"
                        ],
                        "lines": [
                            "\tUserEmail string\n"
                        ],
                        "lines_after": [
                            "\tAddedTime time.Time\n",
                            "\tlogger    Logger\n",
                            "}\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 2.5,
                    "values": {
                        "field_data": {
                            "field_name": "UserEmail",
                            "field_type": {
                                "field_type_def": {
                                    "file_path": "audit/auditor.go",
                                    "start": {
                                        "line": 7,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 7,
                                        "offset": 10
                                    },
                                    "snippet": null
                                },
                                "field_type_name": "string",
                                "field_type_def_package": ""
                            },
                            "code_ref": {
                                "file_path": "audit/auditor.go",
                                "start": {
                                    "line": 7,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 7,
                                    "offset": 10
                                },
                                "snippet": {
                                    "lines_before": [
                                        ")\n",
                                        "\n",
                                        "type Auditor struct {\n"
                                    ],
                                    "lines": [
                                        "\tUserEmail string\n"
                                    ],
                                    "lines_after": [
                                        "\tAddedTime time.Time\n",
                                        "\tlogger    Logger\n",
                                        "}\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "audit/auditor.go",
                            "start": {
                                "line": 6,
                                "offset": 5
                            },
                            "end": {
                                "line": 6,
                                "offset": 12
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "Auditor",
                    "class_def_line_num": 6,
                    "field_name": "UserEmail",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Email",
                    "package": "audit",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "04ec771d7d5e18792757fedbaad33c22",
                "artifact_name": "ID@#model/user.go",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 12,
                        "offset": 1
                    },
                    "end": {
                        "line": 12,
                        "offset": 3
                    },
                    "snippet": {
                        "lines_before": [
                            "}\n",
                            "\n",
                            "type User struct {\n"
                        ],
                        "lines": [
                            "\tID       int     `json:\"id\"`\n"
                        ],
                        "lines_after": [
                            "\tName     string  `json:\"name\"`\n",
                            "\tEmail    string  `json:\"email\"`\n",
                            "\tPassword string  `json:\"password\"`\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 1.0,
                    "values": {
                        "field_data": {
                            "field_name": "ID",
                            "field_type": {
                                "field_type_def": {
                                    "file_path": "model/user.go",
                                    "start": {
                                        "line": 12,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 12,
                                        "offset": 3
                                    },
                                    "snippet": null
                                },
                                "field_type_name": "int",
                                "field_type_def_package": ""
                            },
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 12,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 12,
                                    "offset": 3
                                },
                                "snippet": {
                                    "lines_before": [
                                        "}\n",
                                        "\n",
                                        "type User struct {\n"
                                    ],
                                    "lines": [
                                        "\tID       int     `json:\"id\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tName     string  `json:\"name\"`\n",
                                        "\tEmail    string  `json:\"email\"`\n",
                                        "\tPassword string  `json:\"password\"`\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 11,
                                "offset": 5
                            },
                            "end": {
                                "line": 11,
                                "offset": 9
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "User",
                    "class_def_line_num": 11,
                    "field_name": "ID",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Digital",
                    "package": "model",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "57270c8af19b2d0371af726a299a1a59",
                "artifact_name": "Name@#model/user.go",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 13,
                        "offset": 1
                    },
                    "end": {
                        "line": 13,
                        "offset": 5
                    },
                    "snippet": {
                        "lines_before": [
                            "\n",
                            "type User struct {\n",
                            "\tID       int     `json:\"id\"`\n"
                        ],
                        "lines": [
                            "\tName     string  `json:\"name\"`\n"
                        ],
                        "lines_after": [
                            "\tEmail    string  `json:\"email\"`\n",
                            "\tPassword string  `json:\"password\"`\n",
                            "\tProfile  Profile `json:\"profile\"`\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 5.0,
                    "values": {
                        "field_data": {
                            "field_name": "Name",
                            "field_type": {
                                "field_type_def": {
                                    "file_path": "model/user.go",
                                    "start": {
                                        "line": 13,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 13,
                                        "offset": 5
                                    },
                                    "snippet": null
                                },
                                "field_type_name": "string",
                                "field_type_def_package": ""
                            },
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 13,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 13,
                                    "offset": 5
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "type User struct {\n",
                                        "\tID       int     `json:\"id\"`\n"
                                    ],
                                    "lines": [
                                        "\tName     string  `json:\"name\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tEmail    string  `json:\"email\"`\n",
                                        "\tPassword string  `json:\"password\"`\n",
                                        "\tProfile  Profile `json:\"profile\"`\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 11,
                                "offset": 5
                            },
                            "end": {
                                "line": 11,
                                "offset": 9
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "User",
                    "class_def_line_num": 11,
                    "field_name": "Name",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Name",
                    "package": "model",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "148f94fc263dfc40c1fd7cf45e3553dd",
                "artifact_name": "Email@#model/user.go",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 14,
                        "offset": 1
                    },
                    "end": {
                        "line": 14,
                        "offset": 6
                    },
                    "snippet": {
                        "lines_before": [
                            "type User struct {\n",
                            "\tID       int     `json:\"id\"`\n",
                            "\tName     string  `json:\"name\"`\n"
                        ],
                        "lines": [
                            "\tEmail    string  `json:\"email\"`\n"
                        ],
                        "lines_after": [
                            "\tPassword string  `json:\"password\"`\n",
                            "\tProfile  Profile `json:\"profile\"`\n",
                            "}\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 2.5,
                    "values": {
                        "field_data": {
                            "field_name": "Email",
                            "field_type": {
                                "field_type_def": {
                                    "file_path": "model/user.go",
                                    "start": {
                                        "line": 14,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 14,
                                        "offset": 6
                                    },
                                    "snippet": null
                                },
                                "field_type_name": "string",
                                "field_type_def_package": ""
                            },
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 14,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 14,
                                    "offset": 6
                                },
                                "snippet": {
                                    "lines_before": [
                                        "type User struct {\n",
                                        "\tID       int     `json:\"id\"`\n",
                                        "\tName     string  `json:\"name\"`\n"
                                    ],
                                    "lines": [
                                        "\tEmail    string  `json:\"email\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tPassword string  `json:\"password\"`\n",
                                        "\tProfile  Profile `json:\"profile\"`\n",
                                        "}\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 11,
                                "offset": 5
                            },
                            "end": {
                                "line": 11,
                                "offset": 9
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "User",
                    "class_def_line_num": 11,
                    "field_name": "Email",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Email",
                    "package": "model",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "77e8eb310ccfec007df901404282eca8",
                "artifact_name": "Password@#model/user.go",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 15,
                        "offset": 1
                    },
                    "end": {
                        "line": 15,
                        "offset": 9
                    },
                    "snippet": {
                        "lines_before": [
                            "\tID       int     `json:\"id\"`\n",
                            "\tName     string  `json:\"name\"`\n",
                            "\tEmail    string  `json:\"email\"`\n"
                        ],
                        "lines": [
                            "\tPassword string  `json:\"password\"`\n"
                        ],
                        "lines_after": [
                            "\tProfile  Profile `json:\"profile\"`\n",
                            "}\n",
                            "\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 5.0,
                    "values": {
                        "field_data": {
                            "field_name": "Password",
                            "field_type": {
                                "field_type_def": {
                                    "file_path": "model/user.go",
                                    "start": {
                                        "line": 15,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 15,
                                        "offset": 9
                                    },
                                    "snippet": null
                                },
                                "field_type_name": "string",
                                "field_type_def_package": ""
                            },
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 15,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 15,
                                    "offset": 9
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tID       int     `json:\"id\"`\n",
                                        "\tName     string  `json:\"name\"`\n",
                                        "\tEmail    string  `json:\"email\"`\n"
                                    ],
                                    "lines": [
                                        "\tPassword string  `json:\"password\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tProfile  Profile `json:\"profile\"`\n",
                                        "}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 11,
                                "offset": 5
                            },
                            "end": {
                                "line": 11,
                                "offset": 9
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "User",
                    "class_def_line_num": 11,
                    "field_name": "Password",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Credentials",
                    "package": "model",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "4b7eb17a05d4d2209745c9dabd41770e",
                "artifact_name": "Phone@#model/user.go",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 21,
                        "offset": 1
                    },
                    "end": {
                        "line": 21,
                        "offset": 6
                    },
                    "snippet": {
                        "lines_before": [
                            "\n",
                            "type Profile struct {\n",
                            "\tPosition string `json:\"position\"`\n"
                        ],
                        "lines": [
                            "\tPhone    string `json:\"phone\"`\n"
                        ],
                        "lines_after": [
                            "\tAddress  Addr   `json:\"address\"`\n",
                            "}\n",
                            "\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 5.0,
                    "values": {
                        "field_data": {
                            "field_name": "Phone",
                            "field_type": {
                                "field_type_def": {
                                    "file_path": "model/user.go",
                                    "start": {
                                        "line": 21,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 21,
                                        "offset": 6
                                    },
                                    "snippet": null
                                },
                                "field_type_name": "string",
                                "field_type_def_package": ""
                            },
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 21,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 21,
                                    "offset": 6
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "type Profile struct {\n",
                                        "\tPosition string `json:\"position\"`\n"
                                    ],
                                    "lines": [
                                        "\tPhone    string `json:\"phone\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tAddress  Addr   `json:\"address\"`\n",
                                        "}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 19,
                                "offset": 5
                            },
                            "end": {
                                "line": 19,
                                "offset": 12
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "Profile",
                    "class_def_line_num": 19,
                    "field_name": "Phone",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Phone",
                    "package": "model",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "161fabb0ee5aa67fda5eb56b45f94275",
                "artifact_name": "Street@#model/user.go",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 26,
                        "offset": 1
                    },
                    "end": {
                        "line": 26,
                        "offset": 7
                    },
                    "snippet": {
                        "lines_before": [
                            "}\n",
                            "\n",
                            "type Addr struct {\n"
                        ],
                        "lines": [
                            "\tStreet  string `json:\"street\"`\n"
                        ],
                        "lines_after": [
                            "\tCity    string `json:\"city\"`\n",
                            "\tCountry string `json:\"country\"`\n",
                            "}\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 2.5,
                    "values": {
                        "field_data": {
                            "field_name": "Street",
                            "field_type": {
                                "field_type_def": {
                                    "file_path": "model/user.go",
                                    "start": {
                                        "line": 26,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 26,
                                        "offset": 7
                                    },
                                    "snippet": null
                                },
                                "field_type_name": "string",
                                "field_type_def_package": ""
                            },
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 26,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 26,
                                    "offset": 7
                                },
                                "snippet": {
                                    "lines_before": [
                                        "}\n",
                                        "\n",
                                        "type Addr struct {\n"
                                    ],
                                    "lines": [
                                        "\tStreet  string `json:\"street\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tCity    string `json:\"city\"`\n",
                                        "\tCountry string `json:\"country\"`\n",
                                        "}\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 25,
                                "offset": 5
                            },
                            "end": {
                                "line": 25,
                                "offset": 9
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "Addr",
                    "class_def_line_num": 25,
                    "field_name": "Street",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Address",
                    "package": "model",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "60f72f710b52129b89f8ee90cab5c0e1",
                "artifact_name": "City@#model/user.go",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 27,
                        "offset": 1
                    },
                    "end": {
                        "line": 27,
                        "offset": 5
                    },
                    "snippet": {
                        "lines_before": [
                            "\n",
                            "type Addr struct {\n",
                            "\tStreet  string `json:\"street\"`\n"
                        ],
                        "lines": [
                            "\tCity    string `json:\"city\"`\n"
                        ],
                        "lines_after": [
                            "\tCountry string `json:\"country\"`\n",
                            "}\n",
                            "\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 2.5,
                    "values": {
                        "field_data": {
                            "field_name": "City",
                            "field_type": {
                                "field_type_def": {
                                    "file_path": "model/user.go",
                                    "start": {
                                        "line": 27,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 27,
                                        "offset": 5
                                    },
                                    "snippet": null
                                },
                                "field_type_name": "string",
                                "field_type_def_package": ""
                            },
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 27,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 27,
                                    "offset": 5
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "type Addr struct {\n",
                                        "\tStreet  string `json:\"street\"`\n"
                                    ],
                                    "lines": [
                                        "\tCity    string `json:\"city\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tCountry string `json:\"country\"`\n",
                                        "}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 25,
                                "offset": 5
                            },
                            "end": {
                                "line": 25,
                                "offset": 9
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "Addr",
                    "class_def_line_num": 25,
                    "field_name": "City",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Address",
                    "package": "model",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "3d194d0bcff5eaef50f3e4d57000195d",
                "artifact_name": "Country@#model/user.go",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 28,
                        "offset": 1
                    },
                    "end": {
                        "line": 28,
                        "offset": 8
                    },
                    "snippet": {
                        "lines_before": [
                            "type Addr struct {\n",
                            "\tStreet  string `json:\"street\"`\n",
                            "\tCity    string `json:\"city\"`\n"
                        ],
                        "lines": [
                            "\tCountry string `json:\"country\"`\n"
                        ],
                        "lines_after": [
                            "}\n",
                            "\n",
                            "func CreateUserTable(db *sql.DB, name string) {\n"
                        ]
                    }
                },
                "artifact_type": "class_members",
                "metadata": {
                    "sensitivity": 2.5,
                    "values": {
                        "field_data": {
                            "field_name": "Country",
                            "field_type": {
                                "field_type_def": {
                                    "file_path": "model/user.go",
                                    "start": {
                                        "line": 28,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 28,
                                        "offset": 8
                                    },
                                    "snippet": null
                                },
                                "field_type_name": "string",
                                "field_type_def_package": ""
                            },
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 28,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 28,
                                    "offset": 8
                                },
                                "snippet": {
                                    "lines_before": [
                                        "type Addr struct {\n",
                                        "\tStreet  string `json:\"street\"`\n",
                                        "\tCity    string `json:\"city\"`\n"
                                    ],
                                    "lines": [
                                        "\tCountry string `json:\"country\"`\n"
                                    ],
                                    "lines_after": [
                                        "}\n",
                                        "\n",
                                        "func CreateUserTable(db *sql.DB, name string) {\n"
                                    ]
                                }
                            },
                            "field_fully_qualified_name": "",
                            "generic_types": []
                        },
                        "class_code_ref": {
                            "file_path": "model/user.go",
                            "start": {
                                "line": 25,
                                "offset": 5
                            },
                            "end": {
                                "line": 25,
                                "offset": 9
                            },
                            "snippet": null
                        }
                    },
                    "class_name": "Addr",
                    "class_def_line_num": 25,
                    "field_name": "Country",
                    "field_type": "",
                    "outer_classes": [],
                    "cluster_id": -1,
                    "cluster_label": "Address",
                    "package": "model",
                    "field_type_information": []
                }
            },
            {
                "artifact_id": "f2e166219d8780ba31e73b5d5203b02c",
                "artifact_name": "Auditor",
                "code_ref": {
                    "file_path": "audit/auditor.go",
                    "start": {
                        "line": 6,
                        "offset": 5
                    },
                    "end": {
                        "line": 6,
                        "offset": 12
                    },
                    "snippet": null
                },
                "artifact_type": "container",
                "metadata": {
                    "sensitivity": 2.5,
                    "values": {
                        "fully_qualified_name": "go-test-project/audit.Auditor"
                    },
                    "selectedLocation": {
                        "file_path": "audit/auditor.go",
                        "start": {
                            "line": 6,
                            "offset": 5
                        },
                        "end": {
                            "line": 6,
                            "offset": 12
                        },
                        "snippet": null
                    },
                    "artifact_ids_used": [
                        "8123f10d32ab7d0877965b6c702a3aaf",
                        "7a7ae0f77c1df0e19878144a94c3b3b0",
                        "904fbf2835154b02863d3c0de5e3bfa1"
                    ],
                    "cluster_labels": [
                        "Email"
                    ],
                    "package": "audit",
                    "outer_classes": []
                }
            },
            {
                "artifact_id": "613a910946d28c4d2dbc39e5876e47de",
                "artifact_name": "User",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 11,
                        "offset": 5
                    },
                    "end": {
                        "line": 11,
                        "offset": 9
                    },
                    "snippet": null
                },
                "artifact_type": "container",
                "metadata": {
                    "sensitivity": 5.0,
                    "values": {
                        "fully_qualified_name": "go-test-project/model.User"
                    },
                    "selectedLocation": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 11,
                            "offset": 5
                        },
                        "end": {
                            "line": 11,
                            "offset": 9
                        },
                        "snippet": null
                    },
                    "artifact_ids_used": [
                        "148f94fc263dfc40c1fd7cf45e3553dd",
                        "77e8eb310ccfec007df901404282eca8",
                        "57270c8af19b2d0371af726a299a1a59",
                        "a5c0ef4ab6925a246fcdf67ead10609f",
                        "04ec771d7d5e18792757fedbaad33c22"
                    ],
                    "cluster_labels": [
                        "Digital",
                        "Email",
                        "Name",
                        "Credentials"
                    ],
                    "package": "model",
                    "outer_classes": []
                }
            },
            {
                "artifact_id": "cd922cd9e06aba5943de1f6f58e9141d",
                "artifact_name": "Profile",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 19,
                        "offset": 5
                    },
                    "end": {
                        "line": 19,
                        "offset": 12
                    },
                    "snippet": null
                },
                "artifact_type": "container",
                "metadata": {
                    "sensitivity": 5.0,
                    "values": {
                        "fully_qualified_name": "go-test-project/model.Profile"
                    },
                    "selectedLocation": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 19,
                            "offset": 5
                        },
                        "end": {
                            "line": 19,
                            "offset": 12
                        },
                        "snippet": null
                    },
                    "artifact_ids_used": [
                        "7e38500e17d521cffca7370f19ad33c1",
                        "22f726a11eddbe09200e5cdc9282b965",
                        "4b7eb17a05d4d2209745c9dabd41770e"
                    ],
                    "cluster_labels": [
                        "Phone"
                    ],
                    "package": "model",
                    "outer_classes": []
                }
            },
            {
                "artifact_id": "cef83ac876ca3ef5eba30f6b1eeb8c72",
                "artifact_name": "Addr",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 25,
                        "offset": 5
                    },
                    "end": {
                        "line": 25,
                        "offset": 9
                    },
                    "snippet": null
                },
                "artifact_type": "container",
                "metadata": {
                    "sensitivity": 2.5,
                    "values": {
                        "fully_qualified_name": "go-test-project/model.Addr"
                    },
                    "selectedLocation": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 25,
                            "offset": 5
                        },
                        "end": {
                            "line": 25,
                            "offset": 9
                        },
                        "snippet": null
                    },
                    "artifact_ids_used": [
                        "60f72f710b52129b89f8ee90cab5c0e1",
                        "3d194d0bcff5eaef50f3e4d57000195d",
                        "161fabb0ee5aa67fda5eb56b45f94275"
                    ],
                    "cluster_labels": [
                        "Address"
                    ],
                    "package": "model",
                    "outer_classes": []
                }
            },
            {
                "artifact_id": "d46bd02620d1e8a9f4ca55e3f2570156",
                "artifact_name": "Storage",
                "code_ref": {
                    "file_path": "dal/db.go",
                    "start": {
                        "line": 13,
                        "offset": 5
                    },
                    "end": {
                        "line": 13,
                        "offset": 12
                    },
                    "snippet": null
                },
                "artifact_type": "container",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {
                        "fully_qualified_name": "go-test-project/dal.Storage"
                    },
                    "selectedLocation": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 13,
                            "offset": 5
                        },
                        "end": {
                            "line": 13,
                            "offset": 12
                        },
                        "snippet": null
                    },
                    "artifact_ids_used": [
                        "5f1530568e83029364f8a6bc78225e04",
                        "f2d41866651c993d66c49d307906b073",
                        "59cf3c2b6f3df7ad5d9d02f6cccc6c41"
                    ],
                    "cluster_labels": [],
                    "package": "dal",
                    "outer_classes": []
                }
            },
            {
                "artifact_id": "f1fd4aa0048d2789395e319af3caa82f",
                "artifact_name": "connData",
                "code_ref": {
                    "file_path": "dal/db.go",
                    "start": {
                        "line": 19,
                        "offset": 5
                    },
                    "end": {
                        "line": 19,
                        "offset": 13
                    },
                    "snippet": null
                },
                "artifact_type": "container",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {
                        "fully_qualified_name": "go-test-project/dal.connData"
                    },
                    "selectedLocation": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 19,
                            "offset": 5
                        },
                        "end": {
                            "line": 19,
                            "offset": 13
                        },
                        "snippet": null
                    },
                    "artifact_ids_used": [
                        "6e70364654e05e31f222c17d5ab029ff",
                        "6d5b430332f97fc142965734038b0c7f",
                        "576ccbc4dac05eeb5197ae5a53032ea3",
                        "575f50e3318d4cbb813970fd6bd4230b",
                        "ae6e56a4a414b5d48a94460bab3c961b"
                    ],
                    "cluster_labels": [],
                    "package": "dal",
                    "outer_classes": []
                }
            },
            {
                "artifact_id": "0f0266380c3a3778d70dd853009c7a5a",
                "artifact_name": "UserHandler",
                "code_ref": {
                    "file_path": "routes/routes.go",
                    "start": {
                        "line": 14,
                        "offset": 0
                    },
                    "end": {
                        "line": 21,
                        "offset": 1
                    },
                    "snippet": {
                        "lines_before": [],
                        "lines": [
                            "func UserHandler(w http.ResponseWriter, r *http.Request) {",
                            "\tswitch r.Method {",
                            "\tcase \"GET\":",
                            "\t\tUserList(w, r)",
                            "\tcase \"POST\":",
                            "\t\tUserAdd(w, r)",
                            "\t}",
                            "}"
                        ],
                        "lines_after": []
                    }
                },
                "artifact_type": "rest_api",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserHandler",
                    "return_statement": "",
                    "return_var": "",
                    "class_name": "",
                    "package": "routes",
                    "params_list": "",
                    "context_funcs": [],
                    "context_params": [
                        "r"
                    ],
                    "content": "",
                    "http_method": ""
                }
            },
            {
                "artifact_id": "564083e5fe4c413718bf9a662dc0cd1c",
                "artifact_name": "UserList",
                "code_ref": {
                    "file_path": "routes/routes.go",
                    "start": {
                        "line": 23,
                        "offset": 0
                    },
                    "end": {
                        "line": 27,
                        "offset": 1
                    },
                    "snippet": {
                        "lines_before": [],
                        "lines": [
                            "func UserList(w http.ResponseWriter, r *http.Request) {",
                            "\tdb := r.Context().Value(\"db\").(*sql.DB)",
                            "\tmodel.UserObj{}.ReadAll(db)",
                            "\tw.Write([]byte(\"ok\\n\"))",
                            "}"
                        ],
                        "lines_after": []
                    }
                },
                "artifact_type": "rest_api",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserList",
                    "return_statement": "",
                    "return_var": "",
                    "class_name": "",
                    "package": "routes",
                    "params_list": "",
                    "context_funcs": [],
                    "context_params": [
                        "r"
                    ],
                    "content": "",
                    "http_method": ""
                }
            },
            {
                "artifact_id": "65330e995e009871db0a2799415b2df9",
                "artifact_name": "UserAdd",
                "code_ref": {
                    "file_path": "routes/routes.go",
                    "start": {
                        "line": 29,
                        "offset": 0
                    },
                    "end": {
                        "line": 56,
                        "offset": 1
                    },
                    "snippet": {
                        "lines_before": [],
                        "lines": [
                            "func UserAdd(w http.ResponseWriter, r *http.Request) {",
                            "\tdb := r.Context().Value(\"db\").(*sql.DB)",
                            "",
                            "\tbody, err := ioutil.ReadAll(r.Body)",
                            "\tif err != nil {",
                            "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)",
                            "\t\treturn",
                            "\t}",
                            "",
                            "\tvar user model.User",
                            "\tif err := json.Unmarshal(body, &user); err != nil {",
                            "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)",
                            "\t\treturn",
                            "\t}",
                            "\tif util.StringLength(user.Password) < 8 {",
                            "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)",
                            "\t\treturn",
                            "\t}",
                            "",
                            "\tmodel.UserObj{}.Add(db, user)",
                            "\tw.Write([]byte(\"ok\\n\"))",
                            "",
                            "\tauditor := audit.Auditor{",
                            "\t\tUserEmail: user.Email,",
                            "\t\tAddedTime: time.Now(),",
                            "\t}",
                            "\tauditor.Audit()",
                            "}"
                        ],
                        "lines_after": []
                    }
                },
                "artifact_type": "rest_api",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserAdd",
                    "return_statement": "",
                    "return_var": "",
                    "class_name": "",
                    "package": "routes",
                    "params_list": [
                        "user"
                    ],
                    "context_funcs": [
                        "ReadAll"
                    ],
                    "context_params": [
                        "r"
                    ],
                    "content": "",
                    "http_method": ""
                }
            },
            {
                "artifact_id": "4ddbc4e93357d350eebbd0073b7bbeee",
                "artifact_name": "NewStorage",
                "code_ref": {
                    "file_path": "dal/db.go",
                    "start": {
                        "line": 27,
                        "offset": 0
                    },
                    "end": {
                        "line": 36,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "NewStorage",
                    "params_input": [],
                    "params_output": [],
                    "cluster_labels": [],
                    "class_name": "",
                    "class_def": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 27,
                            "offset": 5
                        },
                        "end": {
                            "line": 27,
                            "offset": 15
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 27,
                            "offset": 0
                        },
                        "end": {
                            "line": 36,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 27,
                            "offset": 26
                        },
                        "end": {
                            "line": 36,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "dal"
                }
            },
            {
                "artifact_id": "9cd97f5acfb54d5693402a1d9bedef66",
                "artifact_name": "getENV",
                "code_ref": {
                    "file_path": "dal/db.go",
                    "start": {
                        "line": 49,
                        "offset": 0
                    },
                    "end": {
                        "line": 79,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "getENV",
                    "params_input": [],
                    "params_output": [],
                    "cluster_labels": [],
                    "class_name": "",
                    "class_def": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 49,
                            "offset": 5
                        },
                        "end": {
                            "line": 49,
                            "offset": 11
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 49,
                            "offset": 0
                        },
                        "end": {
                            "line": 79,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 49,
                            "offset": 23
                        },
                        "end": {
                            "line": 79,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "dal"
                }
            },
            {
                "artifact_id": "7391805af1a867980a1b2a37db97ebbb",
                "artifact_name": "Audit",
                "code_ref": {
                    "file_path": "audit/auditor.go",
                    "start": {
                        "line": 12,
                        "offset": 0
                    },
                    "end": {
                        "line": 14,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "Audit",
                    "params_input": [],
                    "params_output": [],
                    "cluster_labels": [],
                    "class_name": "Auditor",
                    "class_def": {
                        "file_path": "audit/auditor.go",
                        "start": {
                            "line": 12,
                            "offset": 17
                        },
                        "end": {
                            "line": 12,
                            "offset": 22
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "audit/auditor.go",
                        "start": {
                            "line": 12,
                            "offset": 0
                        },
                        "end": {
                            "line": 14,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "audit/auditor.go",
                        "start": {
                            "line": 12,
                            "offset": 25
                        },
                        "end": {
                            "line": 14,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "audit"
                }
            },
            {
                "artifact_id": "fd1f8d2c1ea8d18e8c9b1f2893a2dc6f",
                "artifact_name": "connect",
                "code_ref": {
                    "file_path": "dal/db.go",
                    "start": {
                        "line": 38,
                        "offset": 0
                    },
                    "end": {
                        "line": 47,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "connect",
                    "params_input": [],
                    "params_output": [],
                    "cluster_labels": [],
                    "class_name": "Storage",
                    "class_def": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 38,
                            "offset": 18
                        },
                        "end": {
                            "line": 38,
                            "offset": 25
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 38,
                            "offset": 0
                        },
                        "end": {
                            "line": 47,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 38,
                            "offset": 28
                        },
                        "end": {
                            "line": 47,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "dal"
                }
            },
            {
                "artifact_id": "b85fe689476dc76426ca762489c2c0ed",
                "artifact_name": "UserAdd",
                "code_ref": {
                    "file_path": "routes/routes.go",
                    "start": {
                        "line": 29,
                        "offset": 0
                    },
                    "end": {
                        "line": 56,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 5.0,
                    "values": {},
                    "function_name": "UserAdd",
                    "params_input": [
                        {
                            "param_name": "r",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/routes.go",
                                "start": {
                                    "line": 29,
                                    "offset": 36
                                },
                                "end": {
                                    "line": 29,
                                    "offset": 37
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "w",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/routes.go",
                                "start": {
                                    "line": 29,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 29,
                                    "offset": 14
                                },
                                "snippet": null
                            },
                            "cluster_label": "Credentials",
                            "metadata": {}
                        },
                        {
                            "param_name": "user",
                            "param_type": "",
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/routes.go",
                                "start": {
                                    "line": 29,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 56,
                                    "offset": 1
                                },
                                "snippet": {
                                    "lines_before": [],
                                    "lines": [
                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {",
                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)",
                                        "",
                                        "\tbody, err := ioutil.ReadAll(r.Body)",
                                        "\tif err != nil {",
                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)",
                                        "\t\treturn",
                                        "\t}",
                                        "",
                                        "\tvar user model.User",
                                        "\tif err := json.Unmarshal(body, &user); err != nil {",
                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)",
                                        "\t\treturn",
                                        "\t}",
                                        "\tif util.StringLength(user.Password) < 8 {",
                                        "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)",
                                        "\t\treturn",
                                        "\t}",
                                        "",
                                        "\tmodel.UserObj{}.Add(db, user)",
                                        "\tw.Write([]byte(\"ok\\n\"))",
                                        "",
                                        "\tauditor := audit.Auditor{",
                                        "\t\tUserEmail: user.Email,",
                                        "\t\tAddedTime: time.Now(),",
                                        "\t}",
                                        "\tauditor.Audit()",
                                        "}"
                                    ],
                                    "lines_after": []
                                }
                            },
                            "cluster_label": "Container Pii",
                            "metadata": {
                                "context_param": "r",
                                "extractor_func": "ReadAll"
                            }
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Credentials",
                        "Container Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "routes/routes.go",
                        "start": {
                            "line": 29,
                            "offset": 5
                        },
                        "end": {
                            "line": 29,
                            "offset": 12
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "routes/routes.go",
                        "start": {
                            "line": 29,
                            "offset": 0
                        },
                        "end": {
                            "line": 56,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "routes/routes.go",
                        "start": {
                            "line": 29,
                            "offset": 53
                        },
                        "end": {
                            "line": 56,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "routes"
                }
            },
            {
                "artifact_id": "04697ffd049cbcb2f155132c99d60501",
                "artifact_name": "CreateUserTable",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 31,
                        "offset": 0
                    },
                    "end": {
                        "line": 38,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "CreateUserTable",
                    "params_input": [
                        {
                            "param_name": "db",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 31,
                                    "offset": 21
                                },
                                "end": {
                                    "line": 31,
                                    "offset": 23
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "name",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 31,
                                    "offset": 33
                                },
                                "end": {
                                    "line": 31,
                                    "offset": 37
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Not Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 31,
                            "offset": 5
                        },
                        "end": {
                            "line": 31,
                            "offset": 20
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 31,
                            "offset": 0
                        },
                        "end": {
                            "line": 38,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 31,
                            "offset": 46
                        },
                        "end": {
                            "line": 38,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "model"
                }
            },
            {
                "artifact_id": "67ab575f25275749b01673adb6aabdde",
                "artifact_name": "UserHandler",
                "code_ref": {
                    "file_path": "routes/routes.go",
                    "start": {
                        "line": 14,
                        "offset": 0
                    },
                    "end": {
                        "line": 21,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "UserHandler",
                    "params_input": [
                        {
                            "param_name": "r",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/routes.go",
                                "start": {
                                    "line": 14,
                                    "offset": 40
                                },
                                "end": {
                                    "line": 14,
                                    "offset": 41
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "w",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/routes.go",
                                "start": {
                                    "line": 14,
                                    "offset": 17
                                },
                                "end": {
                                    "line": 14,
                                    "offset": 18
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Container Not Pii",
                        "Not Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "routes/routes.go",
                        "start": {
                            "line": 14,
                            "offset": 5
                        },
                        "end": {
                            "line": 14,
                            "offset": 16
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "routes/routes.go",
                        "start": {
                            "line": 14,
                            "offset": 0
                        },
                        "end": {
                            "line": 21,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "routes/routes.go",
                        "start": {
                            "line": 14,
                            "offset": 57
                        },
                        "end": {
                            "line": 21,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "routes"
                }
            },
            {
                "artifact_id": "e46de881379f956fdcdeb0242b2b55cc",
                "artifact_name": "UserList",
                "code_ref": {
                    "file_path": "routes/routes.go",
                    "start": {
                        "line": 23,
                        "offset": 0
                    },
                    "end": {
                        "line": 27,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 5.0,
                    "values": {},
                    "function_name": "UserList",
                    "params_input": [
                        {
                            "param_name": "r",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/routes.go",
                                "start": {
                                    "line": 23,
                                    "offset": 37
                                },
                                "end": {
                                    "line": 23,
                                    "offset": 38
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "w",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "routes/routes.go",
                                "start": {
                                    "line": 23,
                                    "offset": 14
                                },
                                "end": {
                                    "line": 23,
                                    "offset": 15
                                },
                                "snippet": null
                            },
                            "cluster_label": "Credentials",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Credentials",
                        "Container Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "routes/routes.go",
                        "start": {
                            "line": 23,
                            "offset": 5
                        },
                        "end": {
                            "line": 23,
                            "offset": 13
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "routes/routes.go",
                        "start": {
                            "line": 23,
                            "offset": 0
                        },
                        "end": {
                            "line": 27,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "routes/routes.go",
                        "start": {
                            "line": 23,
                            "offset": 54
                        },
                        "end": {
                            "line": 27,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "routes"
                }
            },
            {
                "artifact_id": "56a7e8f65dda0ab9378dde3d9770bb8e",
                "artifact_name": "createAddress",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 58,
                        "offset": 0
                    },
                    "end": {
                        "line": 72,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "createAddress",
                    "params_input": [
                        {
                            "param_name": "db",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 58,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 58,
                                    "offset": 21
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Container Not Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 58,
                            "offset": 5
                        },
                        "end": {
                            "line": 58,
                            "offset": 18
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 58,
                            "offset": 0
                        },
                        "end": {
                            "line": 72,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 58,
                            "offset": 31
                        },
                        "end": {
                            "line": 72,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "model"
                }
            },
            {
                "artifact_id": "431e4643774dd3ebe364efc7f14e966a",
                "artifact_name": "createUsers",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 40,
                        "offset": 0
                    },
                    "end": {
                        "line": 56,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "createUsers",
                    "params_input": [
                        {
                            "param_name": "db",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 40,
                                    "offset": 17
                                },
                                "end": {
                                    "line": 40,
                                    "offset": 19
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Container Not Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 40,
                            "offset": 5
                        },
                        "end": {
                            "line": 40,
                            "offset": 16
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 40,
                            "offset": 0
                        },
                        "end": {
                            "line": 56,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 40,
                            "offset": 29
                        },
                        "end": {
                            "line": 56,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "model"
                }
            },
            {
                "artifact_id": "ef1dd1b83980824bd85d2dad08f974af",
                "artifact_name": "info",
                "code_ref": {
                    "file_path": "audit/logger.go",
                    "start": {
                        "line": 8,
                        "offset": 0
                    },
                    "end": {
                        "line": 10,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "info",
                    "params_input": [
                        {
                            "param_name": "l",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "audit/logger.go",
                                "start": {
                                    "line": 8,
                                    "offset": 6
                                },
                                "end": {
                                    "line": 8,
                                    "offset": 7
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Not Pii"
                    ],
                    "class_name": "Logger",
                    "class_def": {
                        "file_path": "audit/logger.go",
                        "start": {
                            "line": 8,
                            "offset": 16
                        },
                        "end": {
                            "line": 8,
                            "offset": 20
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "audit/logger.go",
                        "start": {
                            "line": 8,
                            "offset": 0
                        },
                        "end": {
                            "line": 10,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "audit/logger.go",
                        "start": {
                            "line": 8,
                            "offset": 31
                        },
                        "end": {
                            "line": 10,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "audit"
                }
            },
            {
                "artifact_id": "5f1137d4c0511f375a3fe07496c11019",
                "artifact_name": "error",
                "code_ref": {
                    "file_path": "audit/logger.go",
                    "start": {
                        "line": 12,
                        "offset": 0
                    },
                    "end": {
                        "line": 14,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "error",
                    "params_input": [
                        {
                            "param_name": "l",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "audit/logger.go",
                                "start": {
                                    "line": 12,
                                    "offset": 6
                                },
                                "end": {
                                    "line": 12,
                                    "offset": 7
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Container Not Pii"
                    ],
                    "class_name": "Logger",
                    "class_def": {
                        "file_path": "audit/logger.go",
                        "start": {
                            "line": 12,
                            "offset": 16
                        },
                        "end": {
                            "line": 12,
                            "offset": 21
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "audit/logger.go",
                        "start": {
                            "line": 12,
                            "offset": 0
                        },
                        "end": {
                            "line": 14,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "audit/logger.go",
                        "start": {
                            "line": 12,
                            "offset": 32
                        },
                        "end": {
                            "line": 14,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "audit"
                }
            },
            {
                "artifact_id": "589b31b181b23994b50d46bdb71de39e",
                "artifact_name": "StringLength",
                "code_ref": {
                    "file_path": "util/strings.go",
                    "start": {
                        "line": 2,
                        "offset": 0
                    },
                    "end": {
                        "line": 4,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "StringLength",
                    "params_input": [
                        {
                            "param_name": "s",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "util/strings.go",
                                "start": {
                                    "line": 2,
                                    "offset": 18
                                },
                                "end": {
                                    "line": 2,
                                    "offset": 19
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Container Not Pii"
                    ],
                    "class_name": "",
                    "class_def": {
                        "file_path": "util/strings.go",
                        "start": {
                            "line": 2,
                            "offset": 5
                        },
                        "end": {
                            "line": 2,
                            "offset": 17
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "util/strings.go",
                        "start": {
                            "line": 2,
                            "offset": 0
                        },
                        "end": {
                            "line": 4,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "util/strings.go",
                        "start": {
                            "line": 2,
                            "offset": 32
                        },
                        "end": {
                            "line": 4,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "util"
                }
            },
            {
                "artifact_id": "6e4fb048e48027f5345ddb01fb2f113f",
                "artifact_name": "Read",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 74,
                        "offset": 0
                    },
                    "end": {
                        "line": 110,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "Read",
                    "params_input": [
                        {
                            "param_name": "db",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 74,
                                    "offset": 22
                                },
                                "end": {
                                    "line": 74,
                                    "offset": 24
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "id",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 74,
                                    "offset": 34
                                },
                                "end": {
                                    "line": 74,
                                    "offset": 36
                                },
                                "snippet": null
                            },
                            "cluster_label": "Not Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "u",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 74,
                                    "offset": 6
                                },
                                "end": {
                                    "line": 74,
                                    "offset": 7
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Container Not Pii",
                        "Not Pii"
                    ],
                    "class_name": "UserObj",
                    "class_def": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 74,
                            "offset": 17
                        },
                        "end": {
                            "line": 74,
                            "offset": 21
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 74,
                            "offset": 0
                        },
                        "end": {
                            "line": 110,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 74,
                            "offset": 59
                        },
                        "end": {
                            "line": 110,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "model"
                }
            },
            {
                "artifact_id": "f0d9910b4ccdb6c4e22f76ffe931a0a1",
                "artifact_name": "ReadAll",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 112,
                        "offset": 0
                    },
                    "end": {
                        "line": 134,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 0.0,
                    "values": {},
                    "function_name": "ReadAll",
                    "params_input": [
                        {
                            "param_name": "u",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 112,
                                    "offset": 6
                                },
                                "end": {
                                    "line": 112,
                                    "offset": 7
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "db",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 112,
                                    "offset": 25
                                },
                                "end": {
                                    "line": 112,
                                    "offset": 27
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Container Not Pii"
                    ],
                    "class_name": "UserObj",
                    "class_def": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 112,
                            "offset": 17
                        },
                        "end": {
                            "line": 112,
                            "offset": 24
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 112,
                            "offset": 0
                        },
                        "end": {
                            "line": 134,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 112,
                            "offset": 44
                        },
                        "end": {
                            "line": 134,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "model"
                }
            },
            {
                "artifact_id": "8c228e1d0615cd5d36174d09b7c6b5a7",
                "artifact_name": "Add",
                "code_ref": {
                    "file_path": "model/user.go",
                    "start": {
                        "line": 136,
                        "offset": 0
                    },
                    "end": {
                        "line": 149,
                        "offset": 1
                    },
                    "snippet": null
                },
                "artifact_type": "functions",
                "metadata": {
                    "sensitivity": 5.0,
                    "values": {},
                    "function_name": "Add",
                    "params_input": [
                        {
                            "param_name": "u",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 136,
                                    "offset": 6
                                },
                                "end": {
                                    "line": 136,
                                    "offset": 7
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "db",
                            "param_type": null,
                            "artifact_id": null,
                            "is_container": false,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 136,
                                    "offset": 21
                                },
                                "end": {
                                    "line": 136,
                                    "offset": 23
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Not Pii",
                            "metadata": {}
                        },
                        {
                            "param_name": "user",
                            "param_type": "User",
                            "artifact_id": "613a910946d28c4d2dbc39e5876e47de",
                            "is_container": true,
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 136,
                                    "offset": 33
                                },
                                "end": {
                                    "line": 136,
                                    "offset": 37
                                },
                                "snippet": null
                            },
                            "cluster_label": "Container Pii",
                            "metadata": {}
                        }
                    ],
                    "params_output": [],
                    "cluster_labels": [
                        "Container Not Pii",
                        "Container Pii"
                    ],
                    "class_name": "UserObj",
                    "class_def": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 136,
                            "offset": 17
                        },
                        "end": {
                            "line": 136,
                            "offset": 20
                        },
                        "snippet": null
                    },
                    "method_declaration": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 136,
                            "offset": 0
                        },
                        "end": {
                            "line": 149,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "body": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 136,
                            "offset": 44
                        },
                        "end": {
                            "line": 149,
                            "offset": 1
                        },
                        "snippet": null
                    },
                    "outer_classes": [],
                    "package": "model"
                }
            }
        ],
        "projections": [],
        "flows_result": {
            "flow_summaries": {},
            "flows_artifacts": {
                "Name": {
                    "sensitive-info-to-log": [
                        {
                            "artifact_id": "26fe6eb8ce92ee62992826bb4debc179",
                            "artifact_name": "TaintEngine_sensitive-info-to-log_model/user.go#13/1_->model/user.go#103/29_57270c8af19b2d0371af726a299a1a59",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 103,
                                    "offset": 29
                                },
                                "end": {
                                    "line": 103,
                                    "offset": 38
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position = position\n",
                                        "\t\tuser.Profile.Phone = phone\n",
                                        "\n"
                                    ],
                                    "lines": [
                                        "\t\tlog.Println(\"read name: \", user.Name)\n"
                                    ],
                                    "lines_after": [
                                        "\t\tlog.Println(\"read email: \", user.Email)\n",
                                        "\n",
                                        "\t\treturn user, nil\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "sensitive-info-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L104-L104",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L104-L104",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "57270c8af19b2d0371af726a299a1a59"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-log",
                                "flow_type": "sensitive-info-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 13,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 13,
                                            "offset": 5
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines": [
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 103,
                                            "offset": 29
                                        },
                                        "end": {
                                            "line": 103,
                                            "offset": 38
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position = position\n",
                                                "\t\tuser.Profile.Phone = phone\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "\t\tlog.Println(\"read name: \", user.Name)\n"
                                            ],
                                            "lines_after": [
                                                "\t\tlog.Println(\"read email: \", user.Email)\n",
                                                "\n",
                                                "\t\treturn user, nil\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 103,
                                                "offset": 29
                                            },
                                            "end": {
                                                "line": 103,
                                                "offset": 38
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position = position\n",
                                                    "\t\tuser.Profile.Phone = phone\n",
                                                    "\n"
                                                ],
                                                "lines": [
                                                    "\t\tlog.Println(\"read name: \", user.Name)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\tlog.Println(\"read email: \", user.Email)\n",
                                                    "\n",
                                                    "\t\treturn user, nil\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 103,
                                                "offset": 29
                                            },
                                            "end": {
                                                "line": 103,
                                                "offset": 38
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": []
                            }
                        },
                        {
                            "artifact_id": "9c147c91bf906c4067a6a47236aa4b09",
                            "artifact_name": "TaintEngine_sensitive-info-to-log_model/user.go#13/1_->model/user.go#144/13_57270c8af19b2d0371af726a299a1a59",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 144,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 144,
                                    "offset": 16
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position,\n",
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n"
                                    ],
                                    "lines": [
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\t_, err := db.Exec(sql)\n",
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "sensitive-info-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                },
                                "artifact_ids_used": [
                                    "57270c8af19b2d0371af726a299a1a59"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-log",
                                "flow_type": "sensitive-info-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 13,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 13,
                                            "offset": 5
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines": [
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 144,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 144,
                                            "offset": 16
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position,\n",
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n"
                                            ],
                                            "lines": [
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\t_, err := db.Exec(sql)\n",
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position,\n",
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n"
                                                ],
                                                "lines": [
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\t_, err := db.Exec(sql)\n",
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 144,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 144,
                                                    "offset": 16
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines": [
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "sensitive-info-to-external-functions": [
                        {
                            "artifact_id": "d6e209a0428ff71076db8362c9ceacf9",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#13/1_->model/user.go#145/19_57270c8af19b2d0371af726a299a1a59",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 145,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 145,
                                    "offset": 22
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n",
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines": [
                                        "\t_, err := db.Exec(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                },
                                "artifact_ids_used": [
                                    "57270c8af19b2d0371af726a299a1a59"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 13,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 13,
                                            "offset": 5
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines": [
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 145,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 145,
                                            "offset": 22
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n",
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines": [
                                                "\t_, err := db.Exec(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n",
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines": [
                                                    "\t_, err := db.Exec(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": null
                                        },
                                        "message": "sql"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 145,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 145,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines": [
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "c944186bbd800e25863d171a152dbe41",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#13/1_->model/user.go#125/9_57270c8af19b2d0371af726a299a1a59",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 125,
                                    "offset": 9
                                },
                                "end": {
                                    "line": 125,
                                    "offset": 104
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tfor rows.Next() {\n",
                                        "\t\tvar user User\n",
                                        "\t\tvar profile Profile\n"
                                    ],
                                    "lines": [
                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                    ],
                                    "lines_after": [
                                        "\t\tif err != nil {\n",
                                        "\t\t\tlog.Println(err)\n",
                                        "\t\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "57270c8af19b2d0371af726a299a1a59"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 13,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 13,
                                            "offset": 5
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines": [
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 125,
                                            "offset": 9
                                        },
                                        "end": {
                                            "line": 125,
                                            "offset": 104
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tfor rows.Next() {\n",
                                                "\t\tvar user User\n",
                                                "\t\tvar profile Profile\n"
                                            ],
                                            "lines": [
                                                "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                            ],
                                            "lines_after": [
                                                "\t\tif err != nil {\n",
                                                "\t\t\tlog.Println(err)\n",
                                                "\t\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\tfor rows.Next() {\n",
                                                    "\t\tvar user User\n",
                                                    "\t\tvar profile Profile\n"
                                                ],
                                                "lines": [
                                                    "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\tif err != nil {\n",
                                                    "\t\t\tlog.Println(err)\n",
                                                    "\t\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": null
                                        },
                                        "message": "\\[\\]type{{args}}"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 30
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 39
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 39
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "jdbc-to-member": [
                        {
                            "artifact_id": "0349d27c11f9fe12a04f10feea520121",
                            "artifact_name": "TaintEngine_jdbc-to-member_model/user.go#76/1_->model/user.go#13/1_57270c8af19b2d0371af726a299a1a59",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 13,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 13,
                                    "offset": 5
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "type User struct {\n",
                                        "\tID       int     `json:\"id\"`\n"
                                    ],
                                    "lines": [
                                        "\tName     string  `json:\"name\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tEmail    string  `json:\"email\"`\n",
                                        "\tPassword string  `json:\"password\"`\n",
                                        "\tProfile  Profile `json:\"profile\"`\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "jdbc-to-member",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L14-L14",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "57270c8af19b2d0371af726a299a1a59"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "jdbc-to-member",
                                "flow_type": "jdbc-to-member",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 76,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 76,
                                            "offset": 27
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                            ],
                                            "lines": [
                                                "\trows, err := db.Query(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t\treturn User{}, err\n"
                                            ]
                                        }
                                    },
                                    "type": 8,
                                    "metadata": {}
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 13,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 13,
                                            "offset": 5
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines": [
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Name",
                                        "message": "model/user.go,User,Name"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 76,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 76,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                        "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                                    ],
                                                    "lines": [
                                                        "\trows, err := db.Query(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t\treturn User{}, err\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 13
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 24
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 97,
                                                    "offset": 14
                                                },
                                                "end": {
                                                    "line": 97,
                                                    "offset": 18
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser := User{\n",
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name = name\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email = email\n",
                                                        "\t\tuser.Password = password\n",
                                                        "\t\tuser.Profile.Position = position\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L98-L98"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 94,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 94,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser := User{\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n",
                                                        "\t\tuser.Name = name\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L95-L95"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 97,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 97,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser := User{\n",
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name = name\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email = email\n",
                                                        "\t\tuser.Password = password\n",
                                                        "\t\tuser.Profile.Position = position\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L98-L98"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "jdbc-member-log": [
                        {
                            "artifact_id": "7c5c7b5df964de2b3c54f9968a2a96b4",
                            "artifact_name": "TaintEngine_jdbc-member-log_model/user.go#76/1_->model/user.go#103/29_57270c8af19b2d0371af726a299a1a59",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 103,
                                    "offset": 29
                                },
                                "end": {
                                    "line": 103,
                                    "offset": 38
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position = position\n",
                                        "\t\tuser.Profile.Phone = phone\n",
                                        "\n"
                                    ],
                                    "lines": [
                                        "\t\tlog.Println(\"read name: \", user.Name)\n"
                                    ],
                                    "lines_after": [
                                        "\t\tlog.Println(\"read email: \", user.Email)\n",
                                        "\n",
                                        "\t\treturn user, nil\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "jdbc-member-log",
                                    "persistent": true,
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L104-L104",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L104-L104",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "57270c8af19b2d0371af726a299a1a59"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Name",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "jdbc-member-log",
                                "flow_type": "jdbc-member-log",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 76,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 76,
                                            "offset": 27
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                            ],
                                            "lines": [
                                                "\trows, err := db.Query(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t\treturn User{}, err\n"
                                            ]
                                        }
                                    },
                                    "type": 8,
                                    "metadata": {}
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 103,
                                            "offset": 29
                                        },
                                        "end": {
                                            "line": 103,
                                            "offset": 38
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position = position\n",
                                                "\t\tuser.Profile.Phone = phone\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "\t\tlog.Println(\"read name: \", user.Name)\n"
                                            ],
                                            "lines_after": [
                                                "\t\tlog.Println(\"read email: \", user.Email)\n",
                                                "\n",
                                                "\t\treturn user, nil\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 103,
                                                "offset": 29
                                            },
                                            "end": {
                                                "line": 103,
                                                "offset": 38
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position = position\n",
                                                    "\t\tuser.Profile.Phone = phone\n",
                                                    "\n"
                                                ],
                                                "lines": [
                                                    "\t\tlog.Println(\"read name: \", user.Name)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\tlog.Println(\"read email: \", user.Email)\n",
                                                    "\n",
                                                    "\t\treturn user, nil\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 103,
                                                "offset": 29
                                            },
                                            "end": {
                                                "line": 103,
                                                "offset": 38
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 76,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 76,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                        "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                                    ],
                                                    "lines": [
                                                        "\trows, err := db.Query(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t\treturn User{}, err\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 13
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 24
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 97,
                                                    "offset": 14
                                                },
                                                "end": {
                                                    "line": 97,
                                                    "offset": 18
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser := User{\n",
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name = name\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email = email\n",
                                                        "\t\tuser.Password = password\n",
                                                        "\t\tuser.Profile.Position = position\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L98-L98"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 94,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 94,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser := User{\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n",
                                                        "\t\tuser.Name = name\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L95-L95"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 103,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 103,
                                                    "offset": 38
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position = position\n",
                                                        "\t\tuser.Profile.Phone = phone\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tlog.Println(\"read name: \", user.Name)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tlog.Println(\"read email: \", user.Email)\n",
                                                        "\n",
                                                        "\t\treturn user, nil\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L104-L104"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "Email": {
                    "sensitive-info-to-log": [
                        {
                            "artifact_id": "650c103940e76a2755c4b0704ec046f3",
                            "artifact_name": "TaintEngine_sensitive-info-to-log_model/user.go#14/1_->model/user.go#104/30_148f94fc263dfc40c1fd7cf45e3553dd",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 104,
                                    "offset": 30
                                },
                                "end": {
                                    "line": 104,
                                    "offset": 40
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone = phone\n",
                                        "\n",
                                        "\t\tlog.Println(\"read name: \", user.Name)\n"
                                    ],
                                    "lines": [
                                        "\t\tlog.Println(\"read email: \", user.Email)\n"
                                    ],
                                    "lines_after": [
                                        "\n",
                                        "\t\treturn user, nil\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 1.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L105-L105",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L15-L15",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L105-L105",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "148f94fc263dfc40c1fd7cf45e3553dd"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Email",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-log",
                                "flow_type": "sensitive-info-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 14,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 14,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines": [
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Email"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 104,
                                            "offset": 30
                                        },
                                        "end": {
                                            "line": 104,
                                            "offset": 40
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone = phone\n",
                                                "\n",
                                                "\t\tlog.Println(\"read name: \", user.Name)\n"
                                            ],
                                            "lines": [
                                                "\t\tlog.Println(\"read email: \", user.Email)\n"
                                            ],
                                            "lines_after": [
                                                "\n",
                                                "\t\treturn user, nil\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 104,
                                                "offset": 30
                                            },
                                            "end": {
                                                "line": 104,
                                                "offset": 40
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone = phone\n",
                                                    "\n",
                                                    "\t\tlog.Println(\"read name: \", user.Name)\n"
                                                ],
                                                "lines": [
                                                    "\t\tlog.Println(\"read email: \", user.Email)\n"
                                                ],
                                                "lines_after": [
                                                    "\n",
                                                    "\t\treturn user, nil\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 104,
                                                "offset": 30
                                            },
                                            "end": {
                                                "line": 104,
                                                "offset": 40
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": []
                            }
                        },
                        {
                            "artifact_id": "0c84a36f9d97717cec4ad1b4fa162176",
                            "artifact_name": "TaintEngine_sensitive-info-to-log_model/user.go#14/1_->model/user.go#144/13_148f94fc263dfc40c1fd7cf45e3553dd",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 144,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 144,
                                    "offset": 16
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position,\n",
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n"
                                    ],
                                    "lines": [
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\t_, err := db.Exec(sql)\n",
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 1.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L15-L15",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                },
                                "artifact_ids_used": [
                                    "148f94fc263dfc40c1fd7cf45e3553dd"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Email",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-log",
                                "flow_type": "sensitive-info-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 14,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 14,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines": [
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Email"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 144,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 144,
                                            "offset": 16
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position,\n",
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n"
                                            ],
                                            "lines": [
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\t_, err := db.Exec(sql)\n",
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position,\n",
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n"
                                                ],
                                                "lines": [
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\t_, err := db.Exec(sql)\n",
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 139,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 139,
                                                    "offset": 12
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Email,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L140-L140"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 144,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 144,
                                                    "offset": 16
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines": [
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "3af045fbfcf35250ed1c70216180be7a",
                            "artifact_name": "TaintEngine_sensitive-info-to-log_model/user.go#14/1_->audit/logger.go#9/23_148f94fc263dfc40c1fd7cf45e3553dd",
                            "code_ref": {
                                "file_path": "audit/logger.go",
                                "start": {
                                    "line": 9,
                                    "offset": 23
                                },
                                "end": {
                                    "line": 9,
                                    "offset": 24
                                },
                                "snippet": {
                                    "lines_before": [
                                        "type Logger struct{}\n",
                                        "\n",
                                        "func (l Logger) info(v ...any) {\n"
                                    ],
                                    "lines": [
                                        "\tlog.Default().Println(v...)\n"
                                    ],
                                    "lines_after": [
                                        "}\n",
                                        "\n",
                                        "func (l Logger) error(v ...any) {\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 1.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L15-L15",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "148f94fc263dfc40c1fd7cf45e3553dd"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Email",
                                "function_artifact": "",
                                "package": "audit",
                                "ruleId": "sensitive-info-to-log",
                                "flow_type": "sensitive-info-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 14,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 14,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines": [
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Email"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "audit/logger.go",
                                        "start": {
                                            "line": 9,
                                            "offset": 23
                                        },
                                        "end": {
                                            "line": 9,
                                            "offset": 24
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "type Logger struct{}\n",
                                                "\n",
                                                "func (l Logger) info(v ...any) {\n"
                                            ],
                                            "lines": [
                                                "\tlog.Default().Println(v...)\n"
                                            ],
                                            "lines_after": [
                                                "}\n",
                                                "\n",
                                                "func (l Logger) error(v ...any) {\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "audit/logger.go",
                                            "start": {
                                                "line": 9,
                                                "offset": 23
                                            },
                                            "end": {
                                                "line": 9,
                                                "offset": 24
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "type Logger struct{}\n",
                                                    "\n",
                                                    "func (l Logger) info(v ...any) {\n"
                                                ],
                                                "lines": [
                                                    "\tlog.Default().Println(v...)\n"
                                                ],
                                                "lines_after": [
                                                    "}\n",
                                                    "\n",
                                                    "func (l Logger) error(v ...any) {\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "audit/logger.go",
                                            "start": {
                                                "line": 9,
                                                "offset": 23
                                            },
                                            "end": {
                                                "line": 9,
                                                "offset": 24
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 52,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 52,
                                                    "offset": 23
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "\n",
                                                        "\tauditor := audit.Auditor{\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserEmail: user.Email,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n",
                                                        "\tauditor.Audit()\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L53-L53"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 51,
                                                    "offset": 12
                                                },
                                                "end": {
                                                    "line": 54,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n",
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tauditor := audit.Auditor{\n",
                                                        "\t\tUserEmail: user.Email,\n",
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tauditor.Audit()\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L52-L55"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 51,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 51,
                                                    "offset": 8
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n",
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tauditor := audit.Auditor{\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tUserEmail: user.Email,\n",
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L52-L52"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 8
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tUserEmail: user.Email,\n",
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n"
                                                    ],
                                                    "lines": [
                                                        "\tauditor.Audit()\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/auditor.go",
                                                "start": {
                                                    "line": 12,
                                                    "offset": 6
                                                },
                                                "end": {
                                                    "line": 12,
                                                    "offset": 7
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tlogger    Logger\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (a Auditor) Audit() {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\ta.logger.info(\"Auditor added %v\", a)\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/auditor.go#L13-L13"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/auditor.go",
                                                "start": {
                                                    "line": 13,
                                                    "offset": 35
                                                },
                                                "end": {
                                                    "line": 13,
                                                    "offset": 36
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (a Auditor) Audit() {\n"
                                                    ],
                                                    "lines": [
                                                        "\ta.logger.info(\"Auditor added %v\", a)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/auditor.go#L14-L14"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/auditor.go",
                                                "start": {
                                                    "line": 13,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 13,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (a Auditor) Audit() {\n"
                                                    ],
                                                    "lines": [
                                                        "\ta.logger.info(\"Auditor added %v\", a)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/auditor.go#L14-L14"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/logger.go",
                                                "start": {
                                                    "line": 8,
                                                    "offset": 21
                                                },
                                                "end": {
                                                    "line": 8,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "type Logger struct{}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (l Logger) info(v ...any) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tlog.Default().Println(v...)\n",
                                                        "}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L9-L9"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/logger.go",
                                                "start": {
                                                    "line": 9,
                                                    "offset": 23
                                                },
                                                "end": {
                                                    "line": 9,
                                                    "offset": 24
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "type Logger struct{}\n",
                                                        "\n",
                                                        "func (l Logger) info(v ...any) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tlog.Default().Println(v...)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n",
                                                        "\n",
                                                        "func (l Logger) error(v ...any) {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/logger.go",
                                                "start": {
                                                    "line": 9,
                                                    "offset": 23
                                                },
                                                "end": {
                                                    "line": 9,
                                                    "offset": 24
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "type Logger struct{}\n",
                                                        "\n",
                                                        "func (l Logger) info(v ...any) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tlog.Default().Println(v...)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n",
                                                        "\n",
                                                        "func (l Logger) error(v ...any) {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "sensitive-info-to-external-functions": [
                        {
                            "artifact_id": "9f1548973c404fd099813251f3a05a6c",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#14/1_->model/user.go#125/9_148f94fc263dfc40c1fd7cf45e3553dd",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 125,
                                    "offset": 9
                                },
                                "end": {
                                    "line": 125,
                                    "offset": 104
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tfor rows.Next() {\n",
                                        "\t\tvar user User\n",
                                        "\t\tvar profile Profile\n"
                                    ],
                                    "lines": [
                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                    ],
                                    "lines_after": [
                                        "\t\tif err != nil {\n",
                                        "\t\t\tlog.Println(err)\n",
                                        "\t\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L15-L15",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "148f94fc263dfc40c1fd7cf45e3553dd"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Email",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 14,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 14,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines": [
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Email"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 125,
                                            "offset": 9
                                        },
                                        "end": {
                                            "line": 125,
                                            "offset": 104
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tfor rows.Next() {\n",
                                                "\t\tvar user User\n",
                                                "\t\tvar profile Profile\n"
                                            ],
                                            "lines": [
                                                "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                            ],
                                            "lines_after": [
                                                "\t\tif err != nil {\n",
                                                "\t\t\tlog.Println(err)\n",
                                                "\t\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\tfor rows.Next() {\n",
                                                    "\t\tvar user User\n",
                                                    "\t\tvar profile Profile\n"
                                                ],
                                                "lines": [
                                                    "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\tif err != nil {\n",
                                                    "\t\t\tlog.Println(err)\n",
                                                    "\t\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": null
                                        },
                                        "message": "\\[\\]type{{args}}"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 42
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 52
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 41
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 52
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "b6dca8cf18873fddcd294b60db8947bd",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#14/1_->model/user.go#145/19_148f94fc263dfc40c1fd7cf45e3553dd",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 145,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 145,
                                    "offset": 22
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n",
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines": [
                                        "\t_, err := db.Exec(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L15-L15",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                },
                                "artifact_ids_used": [
                                    "148f94fc263dfc40c1fd7cf45e3553dd"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Email",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 14,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 14,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines": [
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Email"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 145,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 145,
                                            "offset": 22
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n",
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines": [
                                                "\t_, err := db.Exec(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n",
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines": [
                                                    "\t_, err := db.Exec(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": null
                                        },
                                        "message": "sql"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 139,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 139,
                                                    "offset": 12
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Email,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L140-L140"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 145,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 145,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines": [
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "jdbc-to-member": [
                        {
                            "artifact_id": "4995f017d64e8900f30509042209d533",
                            "artifact_name": "TaintEngine_jdbc-to-member_model/user.go#76/1_->model/user.go#14/1_148f94fc263dfc40c1fd7cf45e3553dd",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 14,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 14,
                                    "offset": 6
                                },
                                "snippet": {
                                    "lines_before": [
                                        "type User struct {\n",
                                        "\tID       int     `json:\"id\"`\n",
                                        "\tName     string  `json:\"name\"`\n"
                                    ],
                                    "lines": [
                                        "\tEmail    string  `json:\"email\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tPassword string  `json:\"password\"`\n",
                                        "\tProfile  Profile `json:\"profile\"`\n",
                                        "}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "jdbc-to-member",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L15-L15",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L15-L15",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "148f94fc263dfc40c1fd7cf45e3553dd"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Email",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "jdbc-to-member",
                                "flow_type": "jdbc-to-member",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 76,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 76,
                                            "offset": 27
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                            ],
                                            "lines": [
                                                "\trows, err := db.Query(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t\treturn User{}, err\n"
                                            ]
                                        }
                                    },
                                    "type": 8,
                                    "metadata": {}
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 14,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 14,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "type User struct {\n",
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n"
                                            ],
                                            "lines": [
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tPassword string  `json:\"password\"`\n",
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Email",
                                        "message": "model/user.go,User,Email"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 76,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 76,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                        "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                                    ],
                                                    "lines": [
                                                        "\trows, err := db.Query(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t\treturn User{}, err\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 13
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 31
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 98,
                                                    "offset": 15
                                                },
                                                "end": {
                                                    "line": 98,
                                                    "offset": 20
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n",
                                                        "\t\tuser.Name = name\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Email = email\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Password = password\n",
                                                        "\t\tuser.Profile.Position = position\n",
                                                        "\t\tuser.Profile.Phone = phone\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L99-L99"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 94,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 94,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser := User{\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n",
                                                        "\t\tuser.Name = name\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L95-L95"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 97,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 97,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser := User{\n",
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name = name\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email = email\n",
                                                        "\t\tuser.Password = password\n",
                                                        "\t\tuser.Profile.Position = position\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L98-L98"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "jdbc-member-log": [
                        {
                            "artifact_id": "3e38aba29973432dd604c6fbb7a27dcd",
                            "artifact_name": "TaintEngine_jdbc-member-log_model/user.go#76/1_->model/user.go#104/30_148f94fc263dfc40c1fd7cf45e3553dd",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 104,
                                    "offset": 30
                                },
                                "end": {
                                    "line": 104,
                                    "offset": 40
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone = phone\n",
                                        "\n",
                                        "\t\tlog.Println(\"read name: \", user.Name)\n"
                                    ],
                                    "lines": [
                                        "\t\tlog.Println(\"read email: \", user.Email)\n"
                                    ],
                                    "lines_after": [
                                        "\n",
                                        "\t\treturn user, nil\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "jdbc-member-log",
                                    "persistent": true,
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L105-L105",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L105-L105",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "148f94fc263dfc40c1fd7cf45e3553dd"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Email",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "jdbc-member-log",
                                "flow_type": "jdbc-member-log",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 76,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 76,
                                            "offset": 27
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                            ],
                                            "lines": [
                                                "\trows, err := db.Query(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t\treturn User{}, err\n"
                                            ]
                                        }
                                    },
                                    "type": 8,
                                    "metadata": {}
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 104,
                                            "offset": 30
                                        },
                                        "end": {
                                            "line": 104,
                                            "offset": 40
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone = phone\n",
                                                "\n",
                                                "\t\tlog.Println(\"read name: \", user.Name)\n"
                                            ],
                                            "lines": [
                                                "\t\tlog.Println(\"read email: \", user.Email)\n"
                                            ],
                                            "lines_after": [
                                                "\n",
                                                "\t\treturn user, nil\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 104,
                                                "offset": 30
                                            },
                                            "end": {
                                                "line": 104,
                                                "offset": 40
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone = phone\n",
                                                    "\n",
                                                    "\t\tlog.Println(\"read name: \", user.Name)\n"
                                                ],
                                                "lines": [
                                                    "\t\tlog.Println(\"read email: \", user.Email)\n"
                                                ],
                                                "lines_after": [
                                                    "\n",
                                                    "\t\treturn user, nil\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 104,
                                                "offset": 30
                                            },
                                            "end": {
                                                "line": 104,
                                                "offset": 40
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 76,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 76,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                        "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                                    ],
                                                    "lines": [
                                                        "\trows, err := db.Query(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t\treturn User{}, err\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 13
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 31
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 98,
                                                    "offset": 15
                                                },
                                                "end": {
                                                    "line": 98,
                                                    "offset": 20
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n",
                                                        "\t\tuser.Name = name\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Email = email\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Password = password\n",
                                                        "\t\tuser.Profile.Position = position\n",
                                                        "\t\tuser.Profile.Phone = phone\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L99-L99"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 94,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 94,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser := User{\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n",
                                                        "\t\tuser.Name = name\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L95-L95"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 104,
                                                    "offset": 30
                                                },
                                                "end": {
                                                    "line": 104,
                                                    "offset": 40
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone = phone\n",
                                                        "\n",
                                                        "\t\tlog.Println(\"read name: \", user.Name)\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tlog.Println(\"read email: \", user.Email)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\n",
                                                        "\t\treturn user, nil\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L105-L105"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "Container Pii": {
                    "sensitive-info-to-log": [],
                    "sensitive-info-to-external-functions": [],
                    "function-param-to-log": [
                        {
                            "artifact_id": "399776c195b342751269ca8e2c3522a5",
                            "artifact_name": "TaintEngine_function-param-to-log_routes/routes.go#48/25_->model/user.go#144/13_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 144,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 144,
                                    "offset": 16
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position,\n",
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n"
                                    ],
                                    "lines": [
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\t_, err := db.Exec(sql)\n",
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "function-param-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L49-L49",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "function-param-to-log",
                                "flow_type": "function-param-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 48,
                                            "offset": 25
                                        },
                                        "end": {
                                            "line": 48,
                                            "offset": 29
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines_after": [
                                                "\tw.Write([]byte(\"ok\\n\"))\n",
                                                "\n",
                                                "\tauditor := audit.Auditor{\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "b85fe689476dc76426ca762489c2c0ed"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 144,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 144,
                                            "offset": 16
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position,\n",
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n"
                                            ],
                                            "lines": [
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\t_, err := db.Exec(sql)\n",
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position,\n",
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n"
                                                ],
                                                "lines": [
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\t_, err := db.Exec(sql)\n",
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 48,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 48,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "\n",
                                                        "\tauditor := audit.Auditor{\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L49-L49"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 144,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 144,
                                                    "offset": 16
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines": [
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "6bcc95d64e4f532ab69715500b3b2300",
                            "artifact_name": "TaintEngine_function-param-to-log_routes/routes.go#52/13_->audit/logger.go#9/23_",
                            "code_ref": {
                                "file_path": "audit/logger.go",
                                "start": {
                                    "line": 9,
                                    "offset": 23
                                },
                                "end": {
                                    "line": 9,
                                    "offset": 24
                                },
                                "snippet": {
                                    "lines_before": [
                                        "type Logger struct{}\n",
                                        "\n",
                                        "func (l Logger) info(v ...any) {\n"
                                    ],
                                    "lines": [
                                        "\tlog.Default().Println(v...)\n"
                                    ],
                                    "lines_after": [
                                        "}\n",
                                        "\n",
                                        "func (l Logger) error(v ...any) {\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "function-param-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L53-L53",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "audit",
                                "ruleId": "function-param-to-log",
                                "flow_type": "function-param-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 52,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 52,
                                            "offset": 17
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tw.Write([]byte(\"ok\\n\"))\n",
                                                "\n",
                                                "\tauditor := audit.Auditor{\n"
                                            ],
                                            "lines": [
                                                "\t\tUserEmail: user.Email,\n"
                                            ],
                                            "lines_after": [
                                                "\t\tAddedTime: time.Now(),\n",
                                                "\t}\n",
                                                "\tauditor.Audit()\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "b85fe689476dc76426ca762489c2c0ed"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "audit/logger.go",
                                        "start": {
                                            "line": 9,
                                            "offset": 23
                                        },
                                        "end": {
                                            "line": 9,
                                            "offset": 24
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "type Logger struct{}\n",
                                                "\n",
                                                "func (l Logger) info(v ...any) {\n"
                                            ],
                                            "lines": [
                                                "\tlog.Default().Println(v...)\n"
                                            ],
                                            "lines_after": [
                                                "}\n",
                                                "\n",
                                                "func (l Logger) error(v ...any) {\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "audit/logger.go",
                                            "start": {
                                                "line": 9,
                                                "offset": 23
                                            },
                                            "end": {
                                                "line": 9,
                                                "offset": 24
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "type Logger struct{}\n",
                                                    "\n",
                                                    "func (l Logger) info(v ...any) {\n"
                                                ],
                                                "lines": [
                                                    "\tlog.Default().Println(v...)\n"
                                                ],
                                                "lines_after": [
                                                    "}\n",
                                                    "\n",
                                                    "func (l Logger) error(v ...any) {\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "audit/logger.go",
                                            "start": {
                                                "line": 9,
                                                "offset": 23
                                            },
                                            "end": {
                                                "line": 9,
                                                "offset": 24
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 52,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 52,
                                                    "offset": 17
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "\n",
                                                        "\tauditor := audit.Auditor{\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserEmail: user.Email,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n",
                                                        "\tauditor.Audit()\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L53-L53"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 52,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 52,
                                                    "offset": 23
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "\n",
                                                        "\tauditor := audit.Auditor{\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserEmail: user.Email,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n",
                                                        "\tauditor.Audit()\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L53-L53"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 51,
                                                    "offset": 12
                                                },
                                                "end": {
                                                    "line": 54,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n",
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tauditor := audit.Auditor{\n",
                                                        "\t\tUserEmail: user.Email,\n",
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tauditor.Audit()\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L52-L55"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 51,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 51,
                                                    "offset": 8
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n",
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tauditor := audit.Auditor{\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tUserEmail: user.Email,\n",
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L52-L52"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 8
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tUserEmail: user.Email,\n",
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n"
                                                    ],
                                                    "lines": [
                                                        "\tauditor.Audit()\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/auditor.go",
                                                "start": {
                                                    "line": 12,
                                                    "offset": 6
                                                },
                                                "end": {
                                                    "line": 12,
                                                    "offset": 7
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tlogger    Logger\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (a Auditor) Audit() {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\ta.logger.info(\"Auditor added %v\", a)\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/auditor.go#L13-L13"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/auditor.go",
                                                "start": {
                                                    "line": 13,
                                                    "offset": 35
                                                },
                                                "end": {
                                                    "line": 13,
                                                    "offset": 36
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (a Auditor) Audit() {\n"
                                                    ],
                                                    "lines": [
                                                        "\ta.logger.info(\"Auditor added %v\", a)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/auditor.go#L14-L14"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/auditor.go",
                                                "start": {
                                                    "line": 13,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 13,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (a Auditor) Audit() {\n"
                                                    ],
                                                    "lines": [
                                                        "\ta.logger.info(\"Auditor added %v\", a)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/auditor.go#L14-L14"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/logger.go",
                                                "start": {
                                                    "line": 8,
                                                    "offset": 21
                                                },
                                                "end": {
                                                    "line": 8,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "type Logger struct{}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (l Logger) info(v ...any) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tlog.Default().Println(v...)\n",
                                                        "}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L9-L9"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/logger.go",
                                                "start": {
                                                    "line": 9,
                                                    "offset": 23
                                                },
                                                "end": {
                                                    "line": 9,
                                                    "offset": 24
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "type Logger struct{}\n",
                                                        "\n",
                                                        "func (l Logger) info(v ...any) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tlog.Default().Println(v...)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n",
                                                        "\n",
                                                        "func (l Logger) error(v ...any) {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/logger.go",
                                                "start": {
                                                    "line": 9,
                                                    "offset": 23
                                                },
                                                "end": {
                                                    "line": 9,
                                                    "offset": 24
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "type Logger struct{}\n",
                                                        "\n",
                                                        "func (l Logger) info(v ...any) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tlog.Default().Println(v...)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n",
                                                        "\n",
                                                        "func (l Logger) error(v ...any) {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "9e158a6c09ed03ce1055d754346e836e",
                            "artifact_name": "TaintEngine_function-param-to-log_routes/routes.go#39/33_->model/user.go#144/13_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 144,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 144,
                                    "offset": 16
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position,\n",
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n"
                                    ],
                                    "lines": [
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\t_, err := db.Exec(sql)\n",
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "function-param-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L40-L40",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "function-param-to-log",
                                "flow_type": "function-param-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 39,
                                            "offset": 33
                                        },
                                        "end": {
                                            "line": 39,
                                            "offset": 37
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                "\t\treturn\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "b85fe689476dc76426ca762489c2c0ed"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 144,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 144,
                                            "offset": 16
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position,\n",
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n"
                                            ],
                                            "lines": [
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\t_, err := db.Exec(sql)\n",
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position,\n",
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n"
                                                ],
                                                "lines": [
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\t_, err := db.Exec(sql)\n",
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 32
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 38,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 38,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L39-L39"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 48,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 48,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "\n",
                                                        "\tauditor := audit.Auditor{\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L49-L49"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 144,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 144,
                                                    "offset": 16
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines": [
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "ee306eba3bbf97ee2346262bf871a2eb",
                            "artifact_name": "TaintEngine_function-param-to-log_routes/routes.go#39/33_->audit/logger.go#9/23_",
                            "code_ref": {
                                "file_path": "audit/logger.go",
                                "start": {
                                    "line": 9,
                                    "offset": 23
                                },
                                "end": {
                                    "line": 9,
                                    "offset": 24
                                },
                                "snippet": {
                                    "lines_before": [
                                        "type Logger struct{}\n",
                                        "\n",
                                        "func (l Logger) info(v ...any) {\n"
                                    ],
                                    "lines": [
                                        "\tlog.Default().Println(v...)\n"
                                    ],
                                    "lines_after": [
                                        "}\n",
                                        "\n",
                                        "func (l Logger) error(v ...any) {\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "function-param-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L40-L40",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "audit",
                                "ruleId": "function-param-to-log",
                                "flow_type": "function-param-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 39,
                                            "offset": 33
                                        },
                                        "end": {
                                            "line": 39,
                                            "offset": 37
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                "\t\treturn\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "b85fe689476dc76426ca762489c2c0ed"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "audit/logger.go",
                                        "start": {
                                            "line": 9,
                                            "offset": 23
                                        },
                                        "end": {
                                            "line": 9,
                                            "offset": 24
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "type Logger struct{}\n",
                                                "\n",
                                                "func (l Logger) info(v ...any) {\n"
                                            ],
                                            "lines": [
                                                "\tlog.Default().Println(v...)\n"
                                            ],
                                            "lines_after": [
                                                "}\n",
                                                "\n",
                                                "func (l Logger) error(v ...any) {\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "audit/logger.go",
                                            "start": {
                                                "line": 9,
                                                "offset": 23
                                            },
                                            "end": {
                                                "line": 9,
                                                "offset": 24
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "type Logger struct{}\n",
                                                    "\n",
                                                    "func (l Logger) info(v ...any) {\n"
                                                ],
                                                "lines": [
                                                    "\tlog.Default().Println(v...)\n"
                                                ],
                                                "lines_after": [
                                                    "}\n",
                                                    "\n",
                                                    "func (l Logger) error(v ...any) {\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "audit/logger.go",
                                            "start": {
                                                "line": 9,
                                                "offset": 23
                                            },
                                            "end": {
                                                "line": 9,
                                                "offset": 24
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 32
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 38,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 38,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L39-L39"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 52,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 52,
                                                    "offset": 17
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "\n",
                                                        "\tauditor := audit.Auditor{\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserEmail: user.Email,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n",
                                                        "\tauditor.Audit()\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L53-L53"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 52,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 52,
                                                    "offset": 23
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "\n",
                                                        "\tauditor := audit.Auditor{\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserEmail: user.Email,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n",
                                                        "\tauditor.Audit()\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L53-L53"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 51,
                                                    "offset": 12
                                                },
                                                "end": {
                                                    "line": 54,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n",
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tauditor := audit.Auditor{\n",
                                                        "\t\tUserEmail: user.Email,\n",
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tauditor.Audit()\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L52-L55"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 51,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 51,
                                                    "offset": 8
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n",
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tauditor := audit.Auditor{\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tUserEmail: user.Email,\n",
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L52-L52"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 55,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 55,
                                                    "offset": 8
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tUserEmail: user.Email,\n",
                                                        "\t\tAddedTime: time.Now(),\n",
                                                        "\t}\n"
                                                    ],
                                                    "lines": [
                                                        "\tauditor.Audit()\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L56-L56"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/auditor.go",
                                                "start": {
                                                    "line": 12,
                                                    "offset": 6
                                                },
                                                "end": {
                                                    "line": 12,
                                                    "offset": 7
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tlogger    Logger\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (a Auditor) Audit() {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\ta.logger.info(\"Auditor added %v\", a)\n",
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/auditor.go#L13-L13"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/auditor.go",
                                                "start": {
                                                    "line": 13,
                                                    "offset": 35
                                                },
                                                "end": {
                                                    "line": 13,
                                                    "offset": 36
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (a Auditor) Audit() {\n"
                                                    ],
                                                    "lines": [
                                                        "\ta.logger.info(\"Auditor added %v\", a)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/auditor.go#L14-L14"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/auditor.go",
                                                "start": {
                                                    "line": 13,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 13,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (a Auditor) Audit() {\n"
                                                    ],
                                                    "lines": [
                                                        "\ta.logger.info(\"Auditor added %v\", a)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/auditor.go#L14-L14"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/logger.go",
                                                "start": {
                                                    "line": 8,
                                                    "offset": 21
                                                },
                                                "end": {
                                                    "line": 8,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "type Logger struct{}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (l Logger) info(v ...any) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tlog.Default().Println(v...)\n",
                                                        "}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L9-L9"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/logger.go",
                                                "start": {
                                                    "line": 9,
                                                    "offset": 23
                                                },
                                                "end": {
                                                    "line": 9,
                                                    "offset": 24
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "type Logger struct{}\n",
                                                        "\n",
                                                        "func (l Logger) info(v ...any) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tlog.Default().Println(v...)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n",
                                                        "\n",
                                                        "func (l Logger) error(v ...any) {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "audit/logger.go",
                                                "start": {
                                                    "line": 9,
                                                    "offset": 23
                                                },
                                                "end": {
                                                    "line": 9,
                                                    "offset": 24
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "type Logger struct{}\n",
                                                        "\n",
                                                        "func (l Logger) info(v ...any) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tlog.Default().Println(v...)\n"
                                                    ],
                                                    "lines_after": [
                                                        "}\n",
                                                        "\n",
                                                        "func (l Logger) error(v ...any) {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/audit/logger.go#L10-L10"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "3d2f6610219e1d2381743e8766ee41d4",
                            "artifact_name": "TaintEngine_function-param-to-log_routes/routes.go#23/37_->model/user.go#144/13_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 144,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 144,
                                    "offset": 16
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position,\n",
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n"
                                    ],
                                    "lines": [
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\t_, err := db.Exec(sql)\n",
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "function-param-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L24-L24",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "function-param-to-log",
                                "flow_type": "function-param-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 23,
                                            "offset": 37
                                        },
                                        "end": {
                                            "line": 23,
                                            "offset": 38
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\tmodel.UserObj{}.ReadAll(db)\n",
                                                "\tw.Write([]byte(\"ok\\n\"))\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "r",
                                        "function_name": "UserList",
                                        "param_function_artifact_id": "e46de881379f956fdcdeb0242b2b55cc"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 144,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 144,
                                            "offset": 16
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position,\n",
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n"
                                            ],
                                            "lines": [
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\t_, err := db.Exec(sql)\n",
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position,\n",
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n"
                                                ],
                                                "lines": [
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\t_, err := db.Exec(sql)\n",
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 23,
                                                    "offset": 37
                                                },
                                                "end": {
                                                    "line": 23,
                                                    "offset": 38
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\tmodel.UserObj{}.ReadAll(db)\n",
                                                        "\tw.Write([]byte(\"ok\\n\"))\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L24-L24"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 14,
                                                    "offset": 40
                                                },
                                                "end": {
                                                    "line": 14,
                                                    "offset": 41
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\"go-test-project/util\"\n",
                                                        ")\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserHandler(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tswitch r.Method {\n",
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L15-L15"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 19,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 19,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n",
                                                        "\tcase \"POST\":\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserAdd(w, r)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L20-L20"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 36
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 35
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 36
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 5
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 26
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 32
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 38,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 38,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L39-L39"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 48,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 48,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "\n",
                                                        "\tauditor := audit.Auditor{\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L49-L49"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 144,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 144,
                                                    "offset": 16
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines": [
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "647abc7fdbf076633a2e1cb773150509",
                            "artifact_name": "TaintEngine_function-param-to-log_routes/routes.go#29/36_->model/user.go#144/13_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 144,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 144,
                                    "offset": 16
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position,\n",
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n"
                                    ],
                                    "lines": [
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\t_, err := db.Exec(sql)\n",
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "function-param-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L30-L30",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "function-param-to-log",
                                "flow_type": "function-param-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 29,
                                            "offset": 36
                                        },
                                        "end": {
                                            "line": 29,
                                            "offset": 37
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tw.Write([]byte(\"ok\\n\"))\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "r",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "b85fe689476dc76426ca762489c2c0ed"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 144,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 144,
                                            "offset": 16
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position,\n",
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n"
                                            ],
                                            "lines": [
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\t_, err := db.Exec(sql)\n",
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position,\n",
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n"
                                                ],
                                                "lines": [
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\t_, err := db.Exec(sql)\n",
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 36
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 35
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 36
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 5
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 26
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 32
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 38,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 38,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L39-L39"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 48,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 48,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "\n",
                                                        "\tauditor := audit.Auditor{\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L49-L49"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 144,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 144,
                                                    "offset": 16
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines": [
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "param-to-external": [
                        {
                            "artifact_id": "8fa61425d18ce548385c58e80b4e6517",
                            "artifact_name": "TaintEngine_param-to-external_routes/routes.go#48/25_->model/user.go#145/19_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 145,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 145,
                                    "offset": 22
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n",
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines": [
                                        "\t_, err := db.Exec(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L49-L49",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 48,
                                            "offset": 25
                                        },
                                        "end": {
                                            "line": 48,
                                            "offset": 29
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "\tmodel.UserObj{}.Add(db, user)\n"
                                            ],
                                            "lines_after": [
                                                "\tw.Write([]byte(\"ok\\n\"))\n",
                                                "\n",
                                                "\tauditor := audit.Auditor{\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "b85fe689476dc76426ca762489c2c0ed"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 145,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 145,
                                            "offset": 22
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n",
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines": [
                                                "\t_, err := db.Exec(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n",
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines": [
                                                    "\t_, err := db.Exec(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": null
                                        },
                                        "message": "sql"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 48,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 48,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "\n",
                                                        "\tauditor := audit.Auditor{\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L49-L49"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 145,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 145,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines": [
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "30001600ec8b227c1b240656eef5f43d",
                            "artifact_name": "TaintEngine_param-to-external_routes/routes.go#23/37_->routes/routes.go#32/29_",
                            "code_ref": {
                                "file_path": "routes/routes.go",
                                "start": {
                                    "line": 32,
                                    "offset": 29
                                },
                                "end": {
                                    "line": 32,
                                    "offset": 35
                                },
                                "snippet": {
                                    "lines_before": [
                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                        "\n"
                                    ],
                                    "lines": [
                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                        "\t\treturn\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L24-L24",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 23,
                                            "offset": 37
                                        },
                                        "end": {
                                            "line": 23,
                                            "offset": 38
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\tmodel.UserObj{}.ReadAll(db)\n",
                                                "\tw.Write([]byte(\"ok\\n\"))\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "r",
                                        "function_name": "UserList",
                                        "param_function_artifact_id": "e46de881379f956fdcdeb0242b2b55cc"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 32,
                                            "offset": 29
                                        },
                                        "end": {
                                            "line": 32,
                                            "offset": 35
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                "\t\treturn\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/routes.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 29
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 35
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                    "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                    "\n"
                                                ],
                                                "lines": [
                                                    "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                    "\t\treturn\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/routes.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 29
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 35
                                            },
                                            "snippet": null
                                        },
                                        "message": "selection of Body"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 23,
                                                    "offset": 37
                                                },
                                                "end": {
                                                    "line": 23,
                                                    "offset": 38
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\tmodel.UserObj{}.ReadAll(db)\n",
                                                        "\tw.Write([]byte(\"ok\\n\"))\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L24-L24"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 14,
                                                    "offset": 40
                                                },
                                                "end": {
                                                    "line": 14,
                                                    "offset": 41
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\"go-test-project/util\"\n",
                                                        ")\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserHandler(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tswitch r.Method {\n",
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L15-L15"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 19,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 19,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n",
                                                        "\tcase \"POST\":\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserAdd(w, r)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L20-L20"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 36
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 35
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "ec82c3267826d856f6351fca7793da8d",
                            "artifact_name": "TaintEngine_param-to-external_routes/routes.go#29/36_->routes/routes.go#32/29_",
                            "code_ref": {
                                "file_path": "routes/routes.go",
                                "start": {
                                    "line": 32,
                                    "offset": 29
                                },
                                "end": {
                                    "line": 32,
                                    "offset": 35
                                },
                                "snippet": {
                                    "lines_before": [
                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                        "\n"
                                    ],
                                    "lines": [
                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                        "\t\treturn\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L30-L30",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 29,
                                            "offset": 36
                                        },
                                        "end": {
                                            "line": 29,
                                            "offset": 37
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tw.Write([]byte(\"ok\\n\"))\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "r",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "b85fe689476dc76426ca762489c2c0ed"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 32,
                                            "offset": 29
                                        },
                                        "end": {
                                            "line": 32,
                                            "offset": 35
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                "\t\treturn\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/routes.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 29
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 35
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                    "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                    "\n"
                                                ],
                                                "lines": [
                                                    "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                    "\t\treturn\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/routes.go",
                                            "start": {
                                                "line": 32,
                                                "offset": 29
                                            },
                                            "end": {
                                                "line": 32,
                                                "offset": 35
                                            },
                                            "snippet": null
                                        },
                                        "message": "selection of Body"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 36
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 35
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "557c2e4d15c82ff43945d5b3a2265724",
                            "artifact_name": "TaintEngine_param-to-external_routes/routes.go#39/33_->model/user.go#145/19_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 145,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 145,
                                    "offset": 22
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n",
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines": [
                                        "\t_, err := db.Exec(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L40-L40",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 39,
                                            "offset": 33
                                        },
                                        "end": {
                                            "line": 39,
                                            "offset": 37
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "\n",
                                                "\tvar user model.User\n"
                                            ],
                                            "lines": [
                                                "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                            ],
                                            "lines_after": [
                                                "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                "\t\treturn\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "user",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "b85fe689476dc76426ca762489c2c0ed"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 145,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 145,
                                            "offset": 22
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n",
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines": [
                                                "\t_, err := db.Exec(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n",
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines": [
                                                    "\t_, err := db.Exec(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": null
                                        },
                                        "message": "sql"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 32
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 38,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 38,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L39-L39"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 48,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 48,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "\n",
                                                        "\tauditor := audit.Auditor{\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L49-L49"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 145,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 145,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines": [
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "61e99fd7ee6df516bafa9a7c7801b460",
                            "artifact_name": "TaintEngine_param-to-external_routes/routes.go#29/36_->model/user.go#145/19_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 145,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 145,
                                    "offset": 22
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n",
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines": [
                                        "\t_, err := db.Exec(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L30-L30",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 29,
                                            "offset": 36
                                        },
                                        "end": {
                                            "line": 29,
                                            "offset": 37
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tw.Write([]byte(\"ok\\n\"))\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "r",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "b85fe689476dc76426ca762489c2c0ed"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 145,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 145,
                                            "offset": 22
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n",
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines": [
                                                "\t_, err := db.Exec(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n",
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines": [
                                                    "\t_, err := db.Exec(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": null
                                        },
                                        "message": "sql"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 36
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 35
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 36
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 5
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 26
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 32
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 38,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 38,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L39-L39"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 48,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 48,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "\n",
                                                        "\tauditor := audit.Auditor{\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L49-L49"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 145,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 145,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines": [
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "7c3ac04675227cacc85f06a4430f945e",
                            "artifact_name": "TaintEngine_param-to-external_routes/routes.go#23/37_->model/user.go#145/19_",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 145,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 145,
                                    "offset": 22
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n",
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines": [
                                        "\t_, err := db.Exec(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L24-L24",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Container Pii",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 23,
                                            "offset": 37
                                        },
                                        "end": {
                                            "line": 23,
                                            "offset": 38
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\tmodel.UserObj{}.ReadAll(db)\n",
                                                "\tw.Write([]byte(\"ok\\n\"))\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "r",
                                        "function_name": "UserList",
                                        "param_function_artifact_id": "e46de881379f956fdcdeb0242b2b55cc"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 145,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 145,
                                            "offset": 22
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n",
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines": [
                                                "\t_, err := db.Exec(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n",
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines": [
                                                    "\t_, err := db.Exec(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": null
                                        },
                                        "message": "sql"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 23,
                                                    "offset": 37
                                                },
                                                "end": {
                                                    "line": 23,
                                                    "offset": 38
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\tmodel.UserObj{}.ReadAll(db)\n",
                                                        "\tw.Write([]byte(\"ok\\n\"))\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L24-L24"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 14,
                                                    "offset": 40
                                                },
                                                "end": {
                                                    "line": 14,
                                                    "offset": 41
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\"go-test-project/util\"\n",
                                                        ")\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserHandler(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tswitch r.Method {\n",
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L15-L15"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 19,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 19,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n",
                                                        "\tcase \"POST\":\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserAdd(w, r)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L20-L20"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 36
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 29
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 35
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 36
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 32,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 32,
                                                    "offset": 5
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n",
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L33-L33"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 26
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 30
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 39,
                                                    "offset": 32
                                                },
                                                "end": {
                                                    "line": 39,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "\n",
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L40-L40"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 38,
                                                    "offset": 5
                                                },
                                                "end": {
                                                    "line": 38,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tvar user model.User\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n",
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n",
                                                        "\t\treturn\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L39-L39"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 48,
                                                    "offset": 25
                                                },
                                                "end": {
                                                    "line": 48,
                                                    "offset": 29
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\tmodel.UserObj{}.Add(db, user)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "\n",
                                                        "\tauditor := audit.Auditor{\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L49-L49"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 136,
                                                    "offset": 33
                                                },
                                                "end": {
                                                    "line": 136,
                                                    "offset": 37
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\treturn users\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L137-L137"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 138,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 138,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n",
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L139-L139"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 145,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 145,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines": [
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "Digital": {
                    "sensitive-info-to-external-functions": [
                        {
                            "artifact_id": "eb06aa27619321b017a1542d53cee9a3",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#12/1_->model/user.go#125/9_04ec771d7d5e18792757fedbaad33c22",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 125,
                                    "offset": 9
                                },
                                "end": {
                                    "line": 125,
                                    "offset": 104
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tfor rows.Next() {\n",
                                        "\t\tvar user User\n",
                                        "\t\tvar profile Profile\n"
                                    ],
                                    "lines": [
                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                    ],
                                    "lines_after": [
                                        "\t\tif err != nil {\n",
                                        "\t\t\tlog.Println(err)\n",
                                        "\t\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 1.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L13-L13",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "04ec771d7d5e18792757fedbaad33c22"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Digital",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 12,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 12,
                                            "offset": 3
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "}\n",
                                                "\n",
                                                "type User struct {\n"
                                            ],
                                            "lines": [
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tName     string  `json:\"name\"`\n",
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "ID"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 125,
                                            "offset": 9
                                        },
                                        "end": {
                                            "line": 125,
                                            "offset": 104
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tfor rows.Next() {\n",
                                                "\t\tvar user User\n",
                                                "\t\tvar profile Profile\n"
                                            ],
                                            "lines": [
                                                "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                            ],
                                            "lines_after": [
                                                "\t\tif err != nil {\n",
                                                "\t\t\tlog.Println(err)\n",
                                                "\t\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\tfor rows.Next() {\n",
                                                    "\t\tvar user User\n",
                                                    "\t\tvar profile Profile\n"
                                                ],
                                                "lines": [
                                                    "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\tif err != nil {\n",
                                                    "\t\t\tlog.Println(err)\n",
                                                    "\t\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": null
                                        },
                                        "message": "\\[\\]type{{args}}"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 20
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "jdbc-to-member": [
                        {
                            "artifact_id": "7cdbf31c318e89a293a1e3f9d1c3a14b",
                            "artifact_name": "TaintEngine_jdbc-to-member_model/user.go#76/1_->model/user.go#12/1_04ec771d7d5e18792757fedbaad33c22",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 12,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 12,
                                    "offset": 3
                                },
                                "snippet": {
                                    "lines_before": [
                                        "}\n",
                                        "\n",
                                        "type User struct {\n"
                                    ],
                                    "lines": [
                                        "\tID       int     `json:\"id\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tName     string  `json:\"name\"`\n",
                                        "\tEmail    string  `json:\"email\"`\n",
                                        "\tPassword string  `json:\"password\"`\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 1.0,
                                "values": {
                                    "flow_type": "jdbc-to-member",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L13-L13",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L13-L13",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "04ec771d7d5e18792757fedbaad33c22"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Digital",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "jdbc-to-member",
                                "flow_type": "jdbc-to-member",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 76,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 76,
                                            "offset": 27
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                            ],
                                            "lines": [
                                                "\trows, err := db.Query(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t\treturn User{}, err\n"
                                            ]
                                        }
                                    },
                                    "type": 8,
                                    "metadata": {}
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 12,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 12,
                                            "offset": 3
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "}\n",
                                                "\n",
                                                "type User struct {\n"
                                            ],
                                            "lines": [
                                                "\tID       int     `json:\"id\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tName     string  `json:\"name\"`\n",
                                                "\tEmail    string  `json:\"email\"`\n",
                                                "\tPassword string  `json:\"password\"`\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "ID",
                                        "message": "model/user.go,User,ID"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 76,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 76,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                        "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                                    ],
                                                    "lines": [
                                                        "\trows, err := db.Query(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t\treturn User{}, err\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 13
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 95,
                                                    "offset": 7
                                                },
                                                "end": {
                                                    "line": 95,
                                                    "offset": 9
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t}\n",
                                                        "\n",
                                                        "\t\tuser := User{\n"
                                                    ],
                                                    "lines": [
                                                        "\t\t\tID: id,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\t}\n",
                                                        "\t\tuser.Name = name\n",
                                                        "\t\tuser.Email = email\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L96-L96"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 94,
                                                    "offset": 10
                                                },
                                                "end": {
                                                    "line": 96,
                                                    "offset": 3
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser := User{\n",
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name = name\n",
                                                        "\t\tuser.Email = email\n",
                                                        "\t\tuser.Password = password\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L95-L97"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "Phone": {
                    "sensitive-info-to-log": [
                        {
                            "artifact_id": "8c013d48730565c63d7dc3967e406b82",
                            "artifact_name": "TaintEngine_sensitive-info-to-log_model/user.go#21/1_->model/user.go#144/13_4b7eb17a05d4d2209745c9dabd41770e",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 144,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 144,
                                    "offset": 16
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position,\n",
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n"
                                    ],
                                    "lines": [
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\t_, err := db.Exec(sql)\n",
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "sensitive-info-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L22-L22",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                },
                                "artifact_ids_used": [
                                    "4b7eb17a05d4d2209745c9dabd41770e"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Phone",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-log",
                                "flow_type": "sensitive-info-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 21,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 21,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type Profile struct {\n",
                                                "\tPosition string `json:\"position\"`\n"
                                            ],
                                            "lines": [
                                                "\tPhone    string `json:\"phone\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tAddress  Addr   `json:\"address\"`\n",
                                                "}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "Profile",
                                        "variable_name": "Phone"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 144,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 144,
                                            "offset": 16
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position,\n",
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n"
                                            ],
                                            "lines": [
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\t_, err := db.Exec(sql)\n",
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position,\n",
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n"
                                                ],
                                                "lines": [
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\t_, err := db.Exec(sql)\n",
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 142,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 142,
                                                    "offset": 20
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Profile.Phone,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L143-L143"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 144,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 144,
                                                    "offset": 16
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines": [
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "sensitive-info-to-external-functions": [
                        {
                            "artifact_id": "22f96c7864e8c341b008f75bd223688f",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#21/1_->model/user.go#125/9_4b7eb17a05d4d2209745c9dabd41770e",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 125,
                                    "offset": 9
                                },
                                "end": {
                                    "line": 125,
                                    "offset": 104
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tfor rows.Next() {\n",
                                        "\t\tvar user User\n",
                                        "\t\tvar profile Profile\n"
                                    ],
                                    "lines": [
                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                    ],
                                    "lines_after": [
                                        "\t\tif err != nil {\n",
                                        "\t\t\tlog.Println(err)\n",
                                        "\t\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L22-L22",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "4b7eb17a05d4d2209745c9dabd41770e"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Phone",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 21,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 21,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type Profile struct {\n",
                                                "\tPosition string `json:\"position\"`\n"
                                            ],
                                            "lines": [
                                                "\tPhone    string `json:\"phone\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tAddress  Addr   `json:\"address\"`\n",
                                                "}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "Profile",
                                        "variable_name": "Phone"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 125,
                                            "offset": 9
                                        },
                                        "end": {
                                            "line": 125,
                                            "offset": 104
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tfor rows.Next() {\n",
                                                "\t\tvar user User\n",
                                                "\t\tvar profile Profile\n"
                                            ],
                                            "lines": [
                                                "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                            ],
                                            "lines_after": [
                                                "\t\tif err != nil {\n",
                                                "\t\t\tlog.Println(err)\n",
                                                "\t\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\tfor rows.Next() {\n",
                                                    "\t\tvar user User\n",
                                                    "\t\tvar profile Profile\n"
                                                ],
                                                "lines": [
                                                    "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\tif err != nil {\n",
                                                    "\t\t\tlog.Println(err)\n",
                                                    "\t\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": null
                                        },
                                        "message": "\\[\\]type{{args}}"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 90
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 103
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 89
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 103
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "6058dfbfd4337b25f884b2062eb7ffab",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#21/1_->model/user.go#145/19_4b7eb17a05d4d2209745c9dabd41770e",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 145,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 145,
                                    "offset": 22
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n",
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines": [
                                        "\t_, err := db.Exec(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L22-L22",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                },
                                "artifact_ids_used": [
                                    "4b7eb17a05d4d2209745c9dabd41770e"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Phone",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 21,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 21,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type Profile struct {\n",
                                                "\tPosition string `json:\"position\"`\n"
                                            ],
                                            "lines": [
                                                "\tPhone    string `json:\"phone\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tAddress  Addr   `json:\"address\"`\n",
                                                "}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "Profile",
                                        "variable_name": "Phone"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 145,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 145,
                                            "offset": 22
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n",
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines": [
                                                "\t_, err := db.Exec(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n",
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines": [
                                                    "\t_, err := db.Exec(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": null
                                        },
                                        "message": "sql"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 142,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 142,
                                                    "offset": 20
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Profile.Phone,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L143-L143"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 145,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 145,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines": [
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "jdbc-to-member": [
                        {
                            "artifact_id": "e8f6a454de4ac63ad7054334f841072b",
                            "artifact_name": "TaintEngine_jdbc-to-member_model/user.go#76/1_->model/user.go#21/1_4b7eb17a05d4d2209745c9dabd41770e",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 21,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 21,
                                    "offset": 6
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "type Profile struct {\n",
                                        "\tPosition string `json:\"position\"`\n"
                                    ],
                                    "lines": [
                                        "\tPhone    string `json:\"phone\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tAddress  Addr   `json:\"address\"`\n",
                                        "}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "jdbc-to-member",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L22-L22",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L22-L22",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "4b7eb17a05d4d2209745c9dabd41770e"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Phone",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "jdbc-to-member",
                                "flow_type": "jdbc-to-member",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 76,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 76,
                                            "offset": 27
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                            ],
                                            "lines": [
                                                "\trows, err := db.Query(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t\treturn User{}, err\n"
                                            ]
                                        }
                                    },
                                    "type": 8,
                                    "metadata": {}
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 21,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 21,
                                            "offset": 6
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "type Profile struct {\n",
                                                "\tPosition string `json:\"position\"`\n"
                                            ],
                                            "lines": [
                                                "\tPhone    string `json:\"phone\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tAddress  Addr   `json:\"address\"`\n",
                                                "}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "Profile",
                                        "variable_name": "Phone",
                                        "message": "model/user.go,Profile,Phone"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 76,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 76,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                        "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                                    ],
                                                    "lines": [
                                                        "\trows, err := db.Query(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t\treturn User{}, err\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 13
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 61
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 67
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 101,
                                                    "offset": 23
                                                },
                                                "end": {
                                                    "line": 101,
                                                    "offset": 28
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Email = email\n",
                                                        "\t\tuser.Password = password\n",
                                                        "\t\tuser.Profile.Position = position\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Profile.Phone = phone\n"
                                                    ],
                                                    "lines_after": [
                                                        "\n",
                                                        "\t\tlog.Println(\"read name: \", user.Name)\n",
                                                        "\t\tlog.Println(\"read email: \", user.Email)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L102-L102"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 101,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 101,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Email = email\n",
                                                        "\t\tuser.Password = password\n",
                                                        "\t\tuser.Profile.Position = position\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Profile.Phone = phone\n"
                                                    ],
                                                    "lines_after": [
                                                        "\n",
                                                        "\t\tlog.Println(\"read name: \", user.Name)\n",
                                                        "\t\tlog.Println(\"read email: \", user.Email)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L102-L102"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "Credentials": {
                    "sensitive-info-to-log": [
                        {
                            "artifact_id": "cf688a514a4dc335a87c832b350c227a",
                            "artifact_name": "TaintEngine_sensitive-info-to-log_model/user.go#15/1_->model/user.go#144/13_77e8eb310ccfec007df901404282eca8",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 144,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 144,
                                    "offset": 16
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Position,\n",
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n"
                                    ],
                                    "lines": [
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\t_, err := db.Exec(sql)\n",
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 2.5,
                                "values": {
                                    "flow_type": "sensitive-info-to-log",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L16-L16",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                },
                                "artifact_ids_used": [
                                    "77e8eb310ccfec007df901404282eca8"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-log",
                                "flow_type": "sensitive-info-to-log",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 15,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 15,
                                            "offset": 9
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n",
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines": [
                                                "\tPassword string  `json:\"password\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Password"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 144,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 144,
                                            "offset": 16
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Position,\n",
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n"
                                            ],
                                            "lines": [
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\t_, err := db.Exec(sql)\n",
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Position,\n",
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n"
                                                ],
                                                "lines": [
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\t_, err := db.Exec(sql)\n",
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 144,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 144,
                                                "offset": 16
                                            },
                                            "snippet": null
                                        },
                                        "message": "Logger",
                                        "log_level": "Info"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 140,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 140,
                                                    "offset": 15
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Password,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L141-L141"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 144,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 144,
                                                    "offset": 16
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines": [
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L145-L145"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "sensitive-info-to-external-functions": [
                        {
                            "artifact_id": "e2714b627b7b917af05a97ffebc10559",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#15/1_->model/user.go#125/9_77e8eb310ccfec007df901404282eca8",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 125,
                                    "offset": 9
                                },
                                "end": {
                                    "line": 125,
                                    "offset": 104
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tfor rows.Next() {\n",
                                        "\t\tvar user User\n",
                                        "\t\tvar profile Profile\n"
                                    ],
                                    "lines": [
                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                    ],
                                    "lines_after": [
                                        "\t\tif err != nil {\n",
                                        "\t\t\tlog.Println(err)\n",
                                        "\t\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L16-L16",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "77e8eb310ccfec007df901404282eca8"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 15,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 15,
                                            "offset": 9
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n",
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines": [
                                                "\tPassword string  `json:\"password\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Password"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 125,
                                            "offset": 9
                                        },
                                        "end": {
                                            "line": 125,
                                            "offset": 104
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tfor rows.Next() {\n",
                                                "\t\tvar user User\n",
                                                "\t\tvar profile Profile\n"
                                            ],
                                            "lines": [
                                                "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                            ],
                                            "lines_after": [
                                                "\t\tif err != nil {\n",
                                                "\t\t\tlog.Println(err)\n",
                                                "\t\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\tfor rows.Next() {\n",
                                                    "\t\tvar user User\n",
                                                    "\t\tvar profile Profile\n"
                                                ],
                                                "lines": [
                                                    "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\tif err != nil {\n",
                                                    "\t\t\tlog.Println(err)\n",
                                                    "\t\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 125,
                                                "offset": 9
                                            },
                                            "end": {
                                                "line": 125,
                                                "offset": 104
                                            },
                                            "snippet": null
                                        },
                                        "message": "\\[\\]type{{args}}"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 55
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 68
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 54
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 68
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 125,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 125,
                                                    "offset": 104
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tfor rows.Next() {\n",
                                                        "\t\tvar user User\n",
                                                        "\t\tvar profile Profile\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&user.ID, &user.Name, &user.Email, &user.Password, &profile.Position, &profile.Phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L126-L126"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "cef5dbe175e98198eecf421f8cb2617c",
                            "artifact_name": "TaintEngine_sensitive-info-to-external-functions_model/user.go#15/1_->model/user.go#145/19_77e8eb310ccfec007df901404282eca8",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 145,
                                    "offset": 19
                                },
                                "end": {
                                    "line": 145,
                                    "offset": 22
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\tuser.Profile.Phone,\n",
                                        "\t)\n",
                                        "\tfmt.Println(sql)\n"
                                    ],
                                    "lines": [
                                        "\t_, err := db.Exec(sql)\n"
                                    ],
                                    "lines_after": [
                                        "\tif err != nil {\n",
                                        "\t\tlog.Fatal(err)\n",
                                        "\t}\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "sensitive-info-to-external-functions",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L16-L16",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                },
                                "artifact_ids_used": [
                                    "77e8eb310ccfec007df901404282eca8"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "sensitive-info-to-external-functions",
                                "flow_type": "sensitive-info-to-external-functions",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 15,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 15,
                                            "offset": 9
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n",
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines": [
                                                "\tPassword string  `json:\"password\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Password"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 145,
                                            "offset": 19
                                        },
                                        "end": {
                                            "line": 145,
                                            "offset": 22
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\tuser.Profile.Phone,\n",
                                                "\t)\n",
                                                "\tfmt.Println(sql)\n"
                                            ],
                                            "lines": [
                                                "\t_, err := db.Exec(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t}\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\tuser.Profile.Phone,\n",
                                                    "\t)\n",
                                                    "\tfmt.Println(sql)\n"
                                                ],
                                                "lines": [
                                                    "\t_, err := db.Exec(sql)\n"
                                                ],
                                                "lines_after": [
                                                    "\tif err != nil {\n",
                                                    "\t\tlog.Fatal(err)\n",
                                                    "\t}\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "model/user.go",
                                            "start": {
                                                "line": 145,
                                                "offset": 19
                                            },
                                            "end": {
                                                "line": 145,
                                                "offset": 22
                                            },
                                            "snippet": null
                                        },
                                        "message": "sql"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 140,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 140,
                                                    "offset": 15
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Password,\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L141-L141"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 8
                                                },
                                                "end": {
                                                    "line": 143,
                                                    "offset": 2
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n",
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n",
                                                        "\t\tuser.Profile.Position,\n",
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tfmt.Println(sql)\n",
                                                        "\t_, err := db.Exec(sql)\n",
                                                        "\tif err != nil {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L144"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 137,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 137,
                                                    "offset": 4
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "}\n",
                                                        "\n",
                                                        "func (u UserObj) Add(db *sql.DB, user User) {\n"
                                                    ],
                                                    "lines": [
                                                        "\tsql := fmt.Sprintf(\"INSERT INTO users (name, email, password, position, phone) VALUES('%s', '%s', '%s', '%s', '%s')\",\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Name,\n",
                                                        "\t\tuser.Email,\n",
                                                        "\t\tuser.Password,\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L138-L138"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 145,
                                                    "offset": 19
                                                },
                                                "end": {
                                                    "line": 145,
                                                    "offset": 22
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser.Profile.Phone,\n",
                                                        "\t)\n",
                                                        "\tfmt.Println(sql)\n"
                                                    ],
                                                    "lines": [
                                                        "\t_, err := db.Exec(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L146-L146"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "param-to-external": [
                        {
                            "artifact_id": "eb6255275e64b5a2a32e18240dd24cf5",
                            "artifact_name": "TaintEngine_param-to-external_routes/routes.go#29/13_->routes/routes.go#40/13_",
                            "code_ref": {
                                "file_path": "routes/routes.go",
                                "start": {
                                    "line": 40,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 40,
                                    "offset": 14
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "\tvar user model.User\n",
                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                    ],
                                    "lines": [
                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                    ],
                                    "lines_after": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L41-L41",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L30-L30",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L41-L41",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 29,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 29,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tw.Write([]byte(\"ok\\n\"))\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "w",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "b85fe689476dc76426ca762489c2c0ed"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 40,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 40,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "\tvar user model.User\n",
                                                "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                            ],
                                            "lines": [
                                                "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\tif util.StringLength(user.Password) < 8 {\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/routes.go",
                                            "start": {
                                                "line": 40,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 40,
                                                "offset": 14
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\n",
                                                    "\tvar user model.User\n",
                                                    "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                ],
                                                "lines": [
                                                    "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\tif util.StringLength(user.Password) < 8 {\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/routes.go",
                                            "start": {
                                                "line": 40,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 40,
                                                "offset": 14
                                            },
                                            "snippet": null
                                        },
                                        "message": "w"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 40,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 40,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "\tvar user model.User\n",
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L41-L41"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "66df86f860c61842722465f943315aad",
                            "artifact_name": "TaintEngine_param-to-external_routes/routes.go#29/13_->routes/routes.go#34/13_",
                            "code_ref": {
                                "file_path": "routes/routes.go",
                                "start": {
                                    "line": 34,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 34,
                                    "offset": 14
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                        "\tif err != nil {\n"
                                    ],
                                    "lines": [
                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                    ],
                                    "lines_after": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L35-L35",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L30-L30",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L35-L35",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 29,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 29,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tw.Write([]byte(\"ok\\n\"))\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "w",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "b85fe689476dc76426ca762489c2c0ed"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 34,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 34,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                                "\tif err != nil {\n"
                                            ],
                                            "lines": [
                                                "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/routes.go",
                                            "start": {
                                                "line": 34,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 34,
                                                "offset": 14
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\n",
                                                    "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                                    "\tif err != nil {\n"
                                                ],
                                                "lines": [
                                                    "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/routes.go",
                                            "start": {
                                                "line": 34,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 34,
                                                "offset": 14
                                            },
                                            "snippet": null
                                        },
                                        "message": "w"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 34,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 34,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                                        "\tif err != nil {\n"
                                                    ],
                                                    "lines": [
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L35-L35"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "0cc4b065d4466ed574408886f8865109",
                            "artifact_name": "TaintEngine_param-to-external_routes/routes.go#23/14_->routes/routes.go#40/13_",
                            "code_ref": {
                                "file_path": "routes/routes.go",
                                "start": {
                                    "line": 40,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 40,
                                    "offset": 14
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "\tvar user model.User\n",
                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                    ],
                                    "lines": [
                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                    ],
                                    "lines_after": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L41-L41",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L24-L24",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L41-L41",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 23,
                                            "offset": 14
                                        },
                                        "end": {
                                            "line": 23,
                                            "offset": 15
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\tmodel.UserObj{}.ReadAll(db)\n",
                                                "\tw.Write([]byte(\"ok\\n\"))\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "w",
                                        "function_name": "UserList",
                                        "param_function_artifact_id": "e46de881379f956fdcdeb0242b2b55cc"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 40,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 40,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "\tvar user model.User\n",
                                                "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                            ],
                                            "lines": [
                                                "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\tif util.StringLength(user.Password) < 8 {\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/routes.go",
                                            "start": {
                                                "line": 40,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 40,
                                                "offset": 14
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\n",
                                                    "\tvar user model.User\n",
                                                    "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                ],
                                                "lines": [
                                                    "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\tif util.StringLength(user.Password) < 8 {\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/routes.go",
                                            "start": {
                                                "line": 40,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 40,
                                                "offset": 14
                                            },
                                            "snippet": null
                                        },
                                        "message": "w"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 23,
                                                    "offset": 14
                                                },
                                                "end": {
                                                    "line": 23,
                                                    "offset": 15
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\tmodel.UserObj{}.ReadAll(db)\n",
                                                        "\tw.Write([]byte(\"ok\\n\"))\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L24-L24"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 14,
                                                    "offset": 17
                                                },
                                                "end": {
                                                    "line": 14,
                                                    "offset": 18
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\"go-test-project/util\"\n",
                                                        ")\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserHandler(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tswitch r.Method {\n",
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L15-L15"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 19,
                                                    "offset": 10
                                                },
                                                "end": {
                                                    "line": 19,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n",
                                                        "\tcase \"POST\":\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserAdd(w, r)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L20-L20"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 40,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 40,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "\tvar user model.User\n",
                                                        "\tif err := json.Unmarshal(body, &user); err != nil {\n"
                                                    ],
                                                    "lines": [
                                                        "\t\thttp.Error(w, \"Invalid JSON in request body\", http.StatusBadRequest)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L41-L41"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "3d056fb313c8802f32e799b43561b295",
                            "artifact_name": "TaintEngine_param-to-external_routes/routes.go#29/13_->routes/routes.go#44/13_",
                            "code_ref": {
                                "file_path": "routes/routes.go",
                                "start": {
                                    "line": 44,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 44,
                                    "offset": 14
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                    ],
                                    "lines": [
                                        "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                    ],
                                    "lines_after": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L45-L45",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L30-L30",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L45-L45",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 29,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 29,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tw.Write([]byte(\"ok\\n\"))\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\n",
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "w",
                                        "function_name": "UserAdd",
                                        "param_function_artifact_id": "b85fe689476dc76426ca762489c2c0ed"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 44,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 44,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\tif util.StringLength(user.Password) < 8 {\n"
                                            ],
                                            "lines": [
                                                "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/routes.go",
                                            "start": {
                                                "line": 44,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 44,
                                                "offset": 14
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\tif util.StringLength(user.Password) < 8 {\n"
                                                ],
                                                "lines": [
                                                    "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/routes.go",
                                            "start": {
                                                "line": 44,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 44,
                                                "offset": 14
                                            },
                                            "snippet": null
                                        },
                                        "message": "w"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 44,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 44,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                                    ],
                                                    "lines": [
                                                        "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L45-L45"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "e9996af981102d52a7e6c9ad7bd244e6",
                            "artifact_name": "TaintEngine_param-to-external_routes/routes.go#23/14_->routes/routes.go#34/13_",
                            "code_ref": {
                                "file_path": "routes/routes.go",
                                "start": {
                                    "line": 34,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 34,
                                    "offset": 14
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\n",
                                        "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                        "\tif err != nil {\n"
                                    ],
                                    "lines": [
                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                    ],
                                    "lines_after": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L35-L35",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L24-L24",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L35-L35",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 23,
                                            "offset": 14
                                        },
                                        "end": {
                                            "line": 23,
                                            "offset": 15
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\tmodel.UserObj{}.ReadAll(db)\n",
                                                "\tw.Write([]byte(\"ok\\n\"))\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "w",
                                        "function_name": "UserList",
                                        "param_function_artifact_id": "e46de881379f956fdcdeb0242b2b55cc"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 34,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 34,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                                "\tif err != nil {\n"
                                            ],
                                            "lines": [
                                                "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/routes.go",
                                            "start": {
                                                "line": 34,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 34,
                                                "offset": 14
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\n",
                                                    "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                                    "\tif err != nil {\n"
                                                ],
                                                "lines": [
                                                    "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/routes.go",
                                            "start": {
                                                "line": 34,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 34,
                                                "offset": 14
                                            },
                                            "snippet": null
                                        },
                                        "message": "w"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 23,
                                                    "offset": 14
                                                },
                                                "end": {
                                                    "line": 23,
                                                    "offset": 15
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\tmodel.UserObj{}.ReadAll(db)\n",
                                                        "\tw.Write([]byte(\"ok\\n\"))\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L24-L24"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 14,
                                                    "offset": 17
                                                },
                                                "end": {
                                                    "line": 14,
                                                    "offset": 18
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\"go-test-project/util\"\n",
                                                        ")\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserHandler(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tswitch r.Method {\n",
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L15-L15"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 19,
                                                    "offset": 10
                                                },
                                                "end": {
                                                    "line": 19,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n",
                                                        "\tcase \"POST\":\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserAdd(w, r)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L20-L20"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 34,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 34,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n",
                                                        "\tif err != nil {\n"
                                                    ],
                                                    "lines": [
                                                        "\t\thttp.Error(w, \"Invalid request body\", http.StatusBadRequest)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L35-L35"
                                            }
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "artifact_id": "16a9b8d2e1894bc7085720bab5001283",
                            "artifact_name": "TaintEngine_param-to-external_routes/routes.go#23/14_->routes/routes.go#44/13_",
                            "code_ref": {
                                "file_path": "routes/routes.go",
                                "start": {
                                    "line": 44,
                                    "offset": 13
                                },
                                "end": {
                                    "line": 44,
                                    "offset": 14
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                    ],
                                    "lines": [
                                        "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                    ],
                                    "lines_after": [
                                        "\t\treturn\n",
                                        "\t}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "param-to-external",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L45-L45",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L24-L24",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L45-L45",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "routes",
                                "ruleId": "param-to-external",
                                "flow_type": "param-to-external",
                                "source": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 23,
                                            "offset": 14
                                        },
                                        "end": {
                                            "line": 23,
                                            "offset": 15
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t}\n",
                                                "}\n",
                                                "\n"
                                            ],
                                            "lines": [
                                                "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                            ],
                                            "lines_after": [
                                                "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                "\tmodel.UserObj{}.ReadAll(db)\n",
                                                "\tw.Write([]byte(\"ok\\n\"))\n"
                                            ]
                                        }
                                    },
                                    "type": 4,
                                    "metadata": {
                                        "variable_name": "w",
                                        "function_name": "UserList",
                                        "param_function_artifact_id": "e46de881379f956fdcdeb0242b2b55cc"
                                    }
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "routes/routes.go",
                                        "start": {
                                            "line": 44,
                                            "offset": 13
                                        },
                                        "end": {
                                            "line": 44,
                                            "offset": 14
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\tif util.StringLength(user.Password) < 8 {\n"
                                            ],
                                            "lines": [
                                                "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                            ],
                                            "lines_after": [
                                                "\t\treturn\n",
                                                "\t}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 1,
                                    "metadata": {
                                        "call": {
                                            "file_path": "routes/routes.go",
                                            "start": {
                                                "line": 44,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 44,
                                                "offset": 14
                                            },
                                            "snippet": {
                                                "lines_before": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\tif util.StringLength(user.Password) < 8 {\n"
                                                ],
                                                "lines": [
                                                    "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                                ],
                                                "lines_after": [
                                                    "\t\treturn\n",
                                                    "\t}\n",
                                                    "\n"
                                                ]
                                            }
                                        },
                                        "tainted_param": {
                                            "file_path": "routes/routes.go",
                                            "start": {
                                                "line": 44,
                                                "offset": 13
                                            },
                                            "end": {
                                                "line": 44,
                                                "offset": 14
                                            },
                                            "snippet": null
                                        },
                                        "message": "w"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 23,
                                                    "offset": 14
                                                },
                                                "end": {
                                                    "line": 23,
                                                    "offset": 15
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserList(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\tmodel.UserObj{}.ReadAll(db)\n",
                                                        "\tw.Write([]byte(\"ok\\n\"))\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L24-L24"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 14,
                                                    "offset": 17
                                                },
                                                "end": {
                                                    "line": 14,
                                                    "offset": 18
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\"go-test-project/util\"\n",
                                                        ")\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserHandler(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tswitch r.Method {\n",
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L15-L15"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 19,
                                                    "offset": 10
                                                },
                                                "end": {
                                                    "line": 19,
                                                    "offset": 11
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tcase \"GET\":\n",
                                                        "\t\tUserList(w, r)\n",
                                                        "\tcase \"POST\":\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tUserAdd(w, r)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t}\n",
                                                        "}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L20-L20"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 29,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\tw.Write([]byte(\"ok\\n\"))\n",
                                                        "}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "func UserAdd(w http.ResponseWriter, r *http.Request) {\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tdb := r.Context().Value(\"db\").(*sql.DB)\n",
                                                        "\n",
                                                        "\tbody, err := ioutil.ReadAll(r.Body)\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L30-L30"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "routes/routes.go",
                                                "start": {
                                                    "line": 44,
                                                    "offset": 13
                                                },
                                                "end": {
                                                    "line": 44,
                                                    "offset": 14
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\tif util.StringLength(user.Password) < 8 {\n"
                                                    ],
                                                    "lines": [
                                                        "\t\thttp.Error(w, \"Password must be at least 8 characters\", http.StatusBadRequest)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\treturn\n",
                                                        "\t}\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/routes/routes.go#L45-L45"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "jdbc-to-member": [
                        {
                            "artifact_id": "adbfe30066bf1a99d2123d6c2c66b99d",
                            "artifact_name": "TaintEngine_jdbc-to-member_model/user.go#76/1_->model/user.go#15/1_77e8eb310ccfec007df901404282eca8",
                            "code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 15,
                                    "offset": 1
                                },
                                "end": {
                                    "line": 15,
                                    "offset": 9
                                },
                                "snippet": {
                                    "lines_before": [
                                        "\tID       int     `json:\"id\"`\n",
                                        "\tName     string  `json:\"name\"`\n",
                                        "\tEmail    string  `json:\"email\"`\n"
                                    ],
                                    "lines": [
                                        "\tPassword string  `json:\"password\"`\n"
                                    ],
                                    "lines_after": [
                                        "\tProfile  Profile `json:\"profile\"`\n",
                                        "}\n",
                                        "\n"
                                    ]
                                }
                            },
                            "artifact_type": "TaintEngine",
                            "metadata": {
                                "sensitivity": 5.0,
                                "values": {
                                    "flow_type": "jdbc-to-member",
                                    "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L16-L16",
                                    "source_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77",
                                    "sink_git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L16-L16",
                                    "developer": {
                                        "name": "Yossi Lavi",
                                        "email": "yossi.lavi@piiano.com"
                                    }
                                },
                                "artifact_ids_used": [
                                    "77e8eb310ccfec007df901404282eca8"
                                ],
                                "member_artifact": "",
                                "cluster_label": "Credentials",
                                "function_artifact": "",
                                "package": "model",
                                "ruleId": "jdbc-to-member",
                                "flow_type": "jdbc-to-member",
                                "source": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 76,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 76,
                                            "offset": 27
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\n",
                                                "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                            ],
                                            "lines": [
                                                "\trows, err := db.Query(sql)\n"
                                            ],
                                            "lines_after": [
                                                "\tif err != nil {\n",
                                                "\t\tlog.Fatal(err)\n",
                                                "\t\treturn User{}, err\n"
                                            ]
                                        }
                                    },
                                    "type": 8,
                                    "metadata": {}
                                },
                                "sink": {
                                    "location": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 15,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 15,
                                            "offset": 9
                                        },
                                        "snippet": {
                                            "lines_before": [
                                                "\tID       int     `json:\"id\"`\n",
                                                "\tName     string  `json:\"name\"`\n",
                                                "\tEmail    string  `json:\"email\"`\n"
                                            ],
                                            "lines": [
                                                "\tPassword string  `json:\"password\"`\n"
                                            ],
                                            "lines_after": [
                                                "\tProfile  Profile `json:\"profile\"`\n",
                                                "}\n",
                                                "\n"
                                            ]
                                        }
                                    },
                                    "type": 2,
                                    "metadata": {
                                        "member_file": "model/user.go",
                                        "class_name": "User",
                                        "variable_name": "Password",
                                        "message": "model/user.go,User,Password"
                                    }
                                },
                                "paths": [
                                    [
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 76,
                                                    "offset": 1
                                                },
                                                "end": {
                                                    "line": 76,
                                                    "offset": 27
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\n",
                                                        "func (u UserObj) Read(db *sql.DB, id string) (User, error) {\n",
                                                        "\tsql := fmt.Sprintf(\"SELECT id, name, email, password, position, phone FROM users WHERE id = '%s'\", id)\n"
                                                    ],
                                                    "lines": [
                                                        "\trows, err := db.Query(sql)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\tif err != nil {\n",
                                                        "\t\tlog.Fatal(err)\n",
                                                        "\t\treturn User{}, err\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L77-L77"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 9
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 13
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 89,
                                                    "offset": 39
                                                },
                                                "end": {
                                                    "line": 89,
                                                    "offset": 48
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tvar password string\n",
                                                        "\t\tvar position string\n",
                                                        "\t\tvar phone string\n"
                                                    ],
                                                    "lines": [
                                                        "\t\terr := rows.Scan(&id, &name, &email, &password, &position, &phone)\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tif err != nil {\n",
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L90-L90"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 99,
                                                    "offset": 18
                                                },
                                                "end": {
                                                    "line": 99,
                                                    "offset": 26
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t}\n",
                                                        "\t\tuser.Name = name\n",
                                                        "\t\tuser.Email = email\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Password = password\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Profile.Position = position\n",
                                                        "\t\tuser.Profile.Phone = phone\n",
                                                        "\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L100-L100"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 94,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 94,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\t\tlog.Println(err)\n",
                                                        "\t\t}\n",
                                                        "\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser := User{\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n",
                                                        "\t\tuser.Name = name\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L95-L95"
                                            }
                                        },
                                        {
                                            "location": {
                                                "file_path": "model/user.go",
                                                "start": {
                                                    "line": 97,
                                                    "offset": 2
                                                },
                                                "end": {
                                                    "line": 97,
                                                    "offset": 6
                                                },
                                                "snippet": {
                                                    "lines_before": [
                                                        "\t\tuser := User{\n",
                                                        "\t\t\tID: id,\n",
                                                        "\t\t}\n"
                                                    ],
                                                    "lines": [
                                                        "\t\tuser.Name = name\n"
                                                    ],
                                                    "lines_after": [
                                                        "\t\tuser.Email = email\n",
                                                        "\t\tuser.Password = password\n",
                                                        "\t\tuser.Profile.Position = position\n"
                                                    ]
                                                }
                                            },
                                            "type": 3,
                                            "metadata": {
                                                "git_url": "https://github.com/piiano/code-scanner-test/blob/main/go/go-test-project/source/model/user.go#L98-L98"
                                            }
                                        }
                                    ]
                                ]
                            }
                        }
                    ]
                }
            }
        },
        "filtered_artifacts": {
            "filtered_by_class_name": [],
            "non_pii_artifacts": [
                {
                    "artifact_id": "8123f10d32ab7d0877965b6c702a3aaf",
                    "artifact_name": "AddedTime@time#audit/auditor.go",
                    "code_ref": {
                        "file_path": "audit/auditor.go",
                        "start": {
                            "line": 8,
                            "offset": 1
                        },
                        "end": {
                            "line": 8,
                            "offset": 10
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "AddedTime",
                                "field_type": {
                                    "field_type_def": {
                                        "file_path": "audit/auditor.go",
                                        "start": {
                                            "line": 8,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 8,
                                            "offset": 10
                                        },
                                        "snippet": null
                                    },
                                    "field_type_name": "Time",
                                    "field_type_def_package": "time"
                                },
                                "code_ref": {
                                    "file_path": "audit/auditor.go",
                                    "start": {
                                        "line": 8,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 8,
                                        "offset": 10
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "time",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "audit/auditor.go",
                                "start": {
                                    "line": 6,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 6,
                                    "offset": 12
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "Auditor",
                        "class_def_line_num": 6,
                        "field_name": "AddedTime",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Not Pii",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "f2d41866651c993d66c49d307906b073",
                    "artifact_name": "DB@database/sql#dal/db.go",
                    "code_ref": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 14,
                            "offset": 1
                        },
                        "end": {
                            "line": 14,
                            "offset": 3
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "DB",
                                "field_type": {
                                    "field_type_def": {
                                        "file_path": "dal/db.go",
                                        "start": {
                                            "line": 14,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 14,
                                            "offset": 3
                                        },
                                        "snippet": null
                                    },
                                    "field_type_name": "DB",
                                    "field_type_def_package": "sql"
                                },
                                "code_ref": {
                                    "file_path": "dal/db.go",
                                    "start": {
                                        "line": 14,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 14,
                                        "offset": 3
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "database/sql",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 13,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 13,
                                    "offset": 12
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "Storage",
                        "class_def_line_num": 13,
                        "field_name": "DB",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Not Pii",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "59cf3c2b6f3df7ad5d9d02f6cccc6c41",
                    "artifact_name": "Name@#dal/db.go",
                    "code_ref": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 15,
                            "offset": 1
                        },
                        "end": {
                            "line": 15,
                            "offset": 5
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "Name",
                                "field_type": {
                                    "field_type_def": {
                                        "file_path": "dal/db.go",
                                        "start": {
                                            "line": 15,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 15,
                                            "offset": 5
                                        },
                                        "snippet": null
                                    },
                                    "field_type_name": "string",
                                    "field_type_def_package": ""
                                },
                                "code_ref": {
                                    "file_path": "dal/db.go",
                                    "start": {
                                        "line": 15,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 15,
                                        "offset": 5
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 13,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 13,
                                    "offset": 12
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "Storage",
                        "class_def_line_num": 13,
                        "field_name": "Name",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Not Pii",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "ae6e56a4a414b5d48a94460bab3c961b",
                    "artifact_name": "user@#dal/db.go",
                    "code_ref": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 21,
                            "offset": 1
                        },
                        "end": {
                            "line": 21,
                            "offset": 5
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "user",
                                "field_type": {
                                    "field_type_def": {
                                        "file_path": "dal/db.go",
                                        "start": {
                                            "line": 21,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 21,
                                            "offset": 5
                                        },
                                        "snippet": null
                                    },
                                    "field_type_name": "string",
                                    "field_type_def_package": ""
                                },
                                "code_ref": {
                                    "file_path": "dal/db.go",
                                    "start": {
                                        "line": 21,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 21,
                                        "offset": 5
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 19,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 19,
                                    "offset": 13
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "connData",
                        "class_def_line_num": 19,
                        "field_name": "user",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Not Pii",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "576ccbc4dac05eeb5197ae5a53032ea3",
                    "artifact_name": "pass@#dal/db.go",
                    "code_ref": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 22,
                            "offset": 1
                        },
                        "end": {
                            "line": 22,
                            "offset": 5
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "pass",
                                "field_type": {
                                    "field_type_def": {
                                        "file_path": "dal/db.go",
                                        "start": {
                                            "line": 22,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 22,
                                            "offset": 5
                                        },
                                        "snippet": null
                                    },
                                    "field_type_name": "string",
                                    "field_type_def_package": ""
                                },
                                "code_ref": {
                                    "file_path": "dal/db.go",
                                    "start": {
                                        "line": 22,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 22,
                                        "offset": 5
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 19,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 19,
                                    "offset": 13
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "connData",
                        "class_def_line_num": 19,
                        "field_name": "pass",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Not Pii",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "6d5b430332f97fc142965734038b0c7f",
                    "artifact_name": "dbname@#dal/db.go",
                    "code_ref": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 23,
                            "offset": 1
                        },
                        "end": {
                            "line": 23,
                            "offset": 7
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "dbname",
                                "field_type": {
                                    "field_type_def": {
                                        "file_path": "dal/db.go",
                                        "start": {
                                            "line": 23,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 23,
                                            "offset": 7
                                        },
                                        "snippet": null
                                    },
                                    "field_type_name": "string",
                                    "field_type_def_package": ""
                                },
                                "code_ref": {
                                    "file_path": "dal/db.go",
                                    "start": {
                                        "line": 23,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 23,
                                        "offset": 7
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 19,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 19,
                                    "offset": 13
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "connData",
                        "class_def_line_num": 19,
                        "field_name": "dbname",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Not Pii",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "575f50e3318d4cbb813970fd6bd4230b",
                    "artifact_name": "sslMode@#dal/db.go",
                    "code_ref": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 24,
                            "offset": 1
                        },
                        "end": {
                            "line": 24,
                            "offset": 8
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "sslMode",
                                "field_type": {
                                    "field_type_def": {
                                        "file_path": "dal/db.go",
                                        "start": {
                                            "line": 24,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 24,
                                            "offset": 8
                                        },
                                        "snippet": null
                                    },
                                    "field_type_name": "string",
                                    "field_type_def_package": ""
                                },
                                "code_ref": {
                                    "file_path": "dal/db.go",
                                    "start": {
                                        "line": 24,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 24,
                                        "offset": 8
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 19,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 19,
                                    "offset": 13
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "connData",
                        "class_def_line_num": 19,
                        "field_name": "sslMode",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Not Pii",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "22f726a11eddbe09200e5cdc9282b965",
                    "artifact_name": "Position@#model/user.go",
                    "code_ref": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 20,
                            "offset": 1
                        },
                        "end": {
                            "line": 20,
                            "offset": 9
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "Position",
                                "field_type": {
                                    "field_type_def": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 20,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 20,
                                            "offset": 9
                                        },
                                        "snippet": null
                                    },
                                    "field_type_name": "string",
                                    "field_type_def_package": ""
                                },
                                "code_ref": {
                                    "file_path": "model/user.go",
                                    "start": {
                                        "line": 20,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 20,
                                        "offset": 9
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 19,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 19,
                                    "offset": 12
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "Profile",
                        "class_def_line_num": 19,
                        "field_name": "Position",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Not Pii",
                        "package": "",
                        "field_type_information": []
                    }
                }
            ],
            "filtered_by_type_definition": [
                {
                    "artifact_id": "7a7ae0f77c1df0e19878144a94c3b3b0",
                    "artifact_name": "logger@go-test-project/audit#audit/auditor.go",
                    "code_ref": {
                        "file_path": "audit/auditor.go",
                        "start": {
                            "line": 9,
                            "offset": 1
                        },
                        "end": {
                            "line": 9,
                            "offset": 7
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "logger",
                                "field_type": {
                                    "field_type_def": {
                                        "file_path": "audit/logger.go",
                                        "start": {
                                            "line": 6,
                                            "offset": 5
                                        },
                                        "end": {
                                            "line": 6,
                                            "offset": 11
                                        },
                                        "snippet": null
                                    },
                                    "field_type_name": "Logger",
                                    "field_type_def_package": "audit"
                                },
                                "code_ref": {
                                    "file_path": "audit/auditor.go",
                                    "start": {
                                        "line": 9,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 9,
                                        "offset": 7
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "go-test-project/audit",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "audit/auditor.go",
                                "start": {
                                    "line": 6,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 6,
                                    "offset": 12
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "Auditor",
                        "class_def_line_num": 6,
                        "field_name": "logger",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "5f1530568e83029364f8a6bc78225e04",
                    "artifact_name": "auditor@go-test-project/audit#dal/db.go",
                    "code_ref": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 16,
                            "offset": 1
                        },
                        "end": {
                            "line": 16,
                            "offset": 8
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "auditor",
                                "field_type": {
                                    "field_type_def": {
                                        "file_path": "audit/auditor.go",
                                        "start": {
                                            "line": 6,
                                            "offset": 5
                                        },
                                        "end": {
                                            "line": 6,
                                            "offset": 12
                                        },
                                        "snippet": null
                                    },
                                    "field_type_name": "Auditor",
                                    "field_type_def_package": "audit"
                                },
                                "code_ref": {
                                    "file_path": "dal/db.go",
                                    "start": {
                                        "line": 16,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 16,
                                        "offset": 8
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "go-test-project/audit",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 13,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 13,
                                    "offset": 12
                                },
                                "snippet": null
                            },
                            "field_container_artifact": "f2e166219d8780ba31e73b5d5203b02c",
                            "cluster_labels": [
                                "Email"
                            ]
                        },
                        "class_name": "Storage",
                        "class_def_line_num": 13,
                        "field_name": "auditor",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Container Pii",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "6e70364654e05e31f222c17d5ab029ff",
                    "artifact_name": "Host@go-test-project/dal#dal/db.go",
                    "code_ref": {
                        "file_path": "dal/db.go",
                        "start": {
                            "line": 20,
                            "offset": 1
                        },
                        "end": {
                            "line": 20,
                            "offset": 5
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "Host",
                                "field_type": {
                                    "field_type_def": {
                                        "file_path": "dal/host.go",
                                        "start": {
                                            "line": 2,
                                            "offset": 5
                                        },
                                        "end": {
                                            "line": 2,
                                            "offset": 9
                                        },
                                        "snippet": null
                                    },
                                    "field_type_name": "Host",
                                    "field_type_def_package": "dal"
                                },
                                "code_ref": {
                                    "file_path": "dal/db.go",
                                    "start": {
                                        "line": 20,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 20,
                                        "offset": 5
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "go-test-project/dal",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "dal/db.go",
                                "start": {
                                    "line": 19,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 19,
                                    "offset": 13
                                },
                                "snippet": null
                            }
                        },
                        "class_name": "connData",
                        "class_def_line_num": 19,
                        "field_name": "Host",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "a5c0ef4ab6925a246fcdf67ead10609f",
                    "artifact_name": "Profile@go-test-project/model#model/user.go",
                    "code_ref": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 16,
                            "offset": 1
                        },
                        "end": {
                            "line": 16,
                            "offset": 8
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "Profile",
                                "field_type": {
                                    "field_type_def": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 19,
                                            "offset": 5
                                        },
                                        "end": {
                                            "line": 19,
                                            "offset": 12
                                        },
                                        "snippet": null
                                    },
                                    "field_type_name": "Profile",
                                    "field_type_def_package": "model"
                                },
                                "code_ref": {
                                    "file_path": "model/user.go",
                                    "start": {
                                        "line": 16,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 16,
                                        "offset": 8
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "go-test-project/model",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 11,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 11,
                                    "offset": 9
                                },
                                "snippet": null
                            },
                            "field_container_artifact": "cd922cd9e06aba5943de1f6f58e9141d",
                            "cluster_labels": [
                                "Phone"
                            ]
                        },
                        "class_name": "User",
                        "class_def_line_num": 11,
                        "field_name": "Profile",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Container Pii",
                        "package": "",
                        "field_type_information": []
                    }
                },
                {
                    "artifact_id": "7e38500e17d521cffca7370f19ad33c1",
                    "artifact_name": "Address@go-test-project/model#model/user.go",
                    "code_ref": {
                        "file_path": "model/user.go",
                        "start": {
                            "line": 22,
                            "offset": 1
                        },
                        "end": {
                            "line": 22,
                            "offset": 8
                        },
                        "snippet": null
                    },
                    "artifact_type": "class_members",
                    "metadata": {
                        "sensitivity": 0.0,
                        "values": {
                            "field_data": {
                                "field_name": "Address",
                                "field_type": {
                                    "field_type_def": {
                                        "file_path": "model/user.go",
                                        "start": {
                                            "line": 25,
                                            "offset": 5
                                        },
                                        "end": {
                                            "line": 25,
                                            "offset": 9
                                        },
                                        "snippet": null
                                    },
                                    "field_type_name": "Addr",
                                    "field_type_def_package": "model"
                                },
                                "code_ref": {
                                    "file_path": "model/user.go",
                                    "start": {
                                        "line": 22,
                                        "offset": 1
                                    },
                                    "end": {
                                        "line": 22,
                                        "offset": 8
                                    },
                                    "snippet": null
                                },
                                "field_fully_qualified_name": "go-test-project/model",
                                "generic_types": []
                            },
                            "class_code_ref": {
                                "file_path": "model/user.go",
                                "start": {
                                    "line": 19,
                                    "offset": 5
                                },
                                "end": {
                                    "line": 19,
                                    "offset": 12
                                },
                                "snippet": null
                            },
                            "field_container_artifact": "cef83ac876ca3ef5eba30f6b1eeb8c72",
                            "cluster_labels": [
                                "Address"
                            ]
                        },
                        "class_name": "Profile",
                        "class_def_line_num": 19,
                        "field_name": "Address",
                        "field_type": "",
                        "outer_classes": [],
                        "cluster_id": -1,
                        "cluster_label": "Container Pii",
                        "package": "",
                        "field_type_information": []
                    }
                }
            ]
        }
    },
    "engines": [
        "class_members",
        "container",
        "rest_api",
        "functions",
        "TaintEngine",
        "persistency",
        "sensitivity_scorer",
        "GitURLEngine",
        "GitBlameEngine"
    ],
    "messages": []
}
